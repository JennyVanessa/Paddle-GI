2021-10-29 11:04:30,239 INFO Arguments: Namespace(config='/home/aistudio/generative-inpainting/configs/config.yaml', seed=None)
2021-10-29 11:04:30,240 INFO Random seed: 580
2021-10-29 11:04:30,240 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 24, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-29 11:04:30,240 INFO Training on dataset: imagenet
2021-10-29 11:04:40,836 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-29 11:04:40,836 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-29 11:04:40,836 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 57000
2021-10-29 11:04:41,021 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 57000
2021-10-29 11:04:43,181 INFO Iter: [57000/500000] l1: 0.049349 ae: 0.141259 wgan_g: -25.381075 wgan_d: -19.822716 wgan_gp: 0.287394 g: 0.203349 d: -16.948780 speed: 58.94 batches/s 
2021-10-29 11:05:53,710 INFO Iter: [57100/500000] l1: 0.051502 ae: 0.122703 wgan_g: -49.638378 wgan_d: -24.335068 wgan_gp: 0.466923 g: 0.159408 d: -19.665834 speed: 1.42 batches/s 
2021-10-29 11:07:03,428 INFO Iter: [57200/500000] l1: 0.053453 ae: 0.113245 wgan_g: -34.235455 wgan_d: -22.482868 wgan_gp: 0.264247 g: 0.165802 d: -19.840393 speed: 1.43 batches/s 
2021-10-29 11:08:13,261 INFO Iter: [57300/500000] l1: 0.050784 ae: 0.115058 wgan_g: -49.376572 wgan_d: -18.342628 wgan_gp: 0.309417 g: 0.149633 d: -15.248460 speed: 1.43 batches/s 
2021-10-29 11:09:23,099 INFO Iter: [57400/500000] l1: 0.060455 ae: 0.143492 wgan_g: -42.167053 wgan_d: -33.492809 wgan_gp: 0.375205 g: 0.202570 d: -29.740755 speed: 1.43 batches/s 
2021-10-29 11:10:33,243 INFO Iter: [57500/500000] l1: 0.057408 ae: 0.144753 wgan_g: -81.455872 wgan_d: -29.148567 wgan_gp: 0.504239 g: 0.161137 d: -24.106180 speed: 1.43 batches/s 
2021-10-29 11:11:43,511 INFO Iter: [57600/500000] l1: 0.041205 ae: 0.132568 wgan_g: -40.275745 wgan_d: -19.669483 wgan_gp: 0.353595 g: 0.168252 d: -16.133537 speed: 1.42 batches/s 
2021-10-29 11:12:54,782 INFO Iter: [57700/500000] l1: 0.045128 ae: 0.104073 wgan_g: 17.999149 wgan_d: -19.887894 wgan_gp: 0.176251 g: 0.197041 d: -18.125383 speed: 1.40 batches/s 
2021-10-29 11:14:05,227 INFO Iter: [57800/500000] l1: 0.062438 ae: 0.120155 wgan_g: -17.305134 wgan_d: -20.465153 wgan_gp: 0.377040 g: 0.201806 d: -16.694754 speed: 1.42 batches/s 
2021-10-29 11:15:14,898 INFO Iter: [57900/500000] l1: 0.044265 ae: 0.125050 wgan_g: -56.691875 wgan_d: -21.349560 wgan_gp: 0.345610 g: 0.146486 d: -17.893463 speed: 1.44 batches/s 
2021-10-29 11:16:26,634 INFO Iter: [58000/500000] l1: 0.057255 ae: 0.120272 wgan_g: -45.702232 wgan_d: -27.856564 wgan_gp: 0.458115 g: 0.167331 d: -23.275417 speed: 1.39 batches/s 
2021-10-29 11:17:38,248 INFO Iter: [58100/500000] l1: 0.059128 ae: 0.120871 wgan_g: -41.117500 wgan_d: -23.949228 wgan_gp: 0.323561 g: 0.174881 d: -20.713619 speed: 1.40 batches/s 
2021-10-29 11:18:48,726 INFO Iter: [58200/500000] l1: 0.058074 ae: 0.114670 wgan_g: -30.834232 wgan_d: -21.145760 wgan_gp: 0.339324 g: 0.176459 d: -17.752520 speed: 1.42 batches/s 
2021-10-29 11:19:58,179 INFO Iter: [58300/500000] l1: nan ae: nan wgan_g: -7.737179 wgan_d: -59.471756 wgan_gp: 0.338161 g: nan d: -56.090149 speed: 1.44 batches/s 
2021-10-29 11:20:41,397 INFO Iter: [58400/500000] l1: nan ae: nan wgan_g: -24.175350 wgan_d: -74.264656 wgan_gp: 0.404365 g: nan d: -70.221001 speed: 2.31 batches/s 
2021-10-29 11:21:23,331 INFO Iter: [58500/500000] l1: nan ae: nan wgan_g: -13.954784 wgan_d: -78.699066 wgan_gp: 0.460650 g: nan d: -74.092567 speed: 2.38 batches/s 
2021-10-29 11:22:06,099 INFO Iter: [58600/500000] l1: nan ae: nan wgan_g: -13.438593 wgan_d: -74.919006 wgan_gp: 0.440958 g: nan d: -70.509422 speed: 2.34 batches/s 
2021-10-29 11:24:09,393 INFO Arguments: Namespace(config='/home/aistudio/generative-inpainting/configs/config.yaml', seed=None)
2021-10-29 11:24:09,393 INFO Random seed: 1212
2021-10-29 11:24:09,393 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 24, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-29 11:24:09,393 INFO Training on dataset: imagenet
2021-10-29 11:24:20,184 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-29 11:24:20,185 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-29 11:24:20,185 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 58000
2021-10-29 11:24:20,384 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 58000
2021-10-29 11:24:22,535 INFO Iter: [58000/500000] l1: 0.052099 ae: 0.120805 wgan_g: -80.589645 wgan_d: -10.026802 wgan_gp: 0.596536 g: 0.126895 d: -4.061438 speed: 60.31 batches/s 
2021-10-29 11:25:32,801 INFO Iter: [58100/500000] l1: 0.051661 ae: 0.128790 wgan_g: -73.024734 wgan_d: -20.966333 wgan_gp: 0.391379 g: 0.143516 d: -17.052544 speed: 1.42 batches/s 
2021-10-29 11:26:43,269 INFO Iter: [58200/500000] l1: 0.056535 ae: 0.112304 wgan_g: 54.346127 wgan_d: -28.298729 wgan_gp: 0.274134 g: 0.256952 d: -25.557394 speed: 1.42 batches/s 
2021-10-29 11:27:53,829 INFO Iter: [58300/500000] l1: 0.050154 ae: 0.117821 wgan_g: -52.867798 wgan_d: -20.355133 wgan_gp: 0.348232 g: 0.148702 d: -16.872812 speed: 1.42 batches/s 
2021-10-29 11:29:04,392 INFO Iter: [58400/500000] l1: 0.059741 ae: 0.141481 wgan_g: -52.298267 wgan_d: -33.041397 wgan_gp: 0.485100 g: 0.189168 d: -28.190393 speed: 1.42 batches/s 
2021-10-29 11:30:14,950 INFO Iter: [58500/500000] l1: 0.054719 ae: 0.132538 wgan_g: -61.028408 wgan_d: -32.188725 wgan_gp: 0.555216 g: 0.163680 d: -26.636566 speed: 1.42 batches/s 
2021-10-29 11:31:24,733 INFO Iter: [58600/500000] l1: 0.041019 ae: 0.132827 wgan_g: -62.675766 wgan_d: -24.166552 wgan_gp: 0.452563 g: 0.145940 d: -19.640919 speed: 1.43 batches/s 
2021-10-29 11:32:34,300 INFO Iter: [58700/500000] l1: 0.045943 ae: 0.107666 wgan_g: 16.587955 wgan_d: -19.329025 wgan_gp: 0.266460 g: 0.200918 d: -16.664429 speed: 1.44 batches/s 
2021-10-29 11:33:43,971 INFO Iter: [58800/500000] l1: 0.061163 ae: 0.123297 wgan_g: -40.899773 wgan_d: -21.802656 wgan_gp: 0.357860 g: 0.180453 d: -18.224060 speed: 1.44 batches/s 
2021-10-29 11:34:53,767 INFO Iter: [58900/500000] l1: 0.045847 ae: 0.125749 wgan_g: -0.914207 wgan_d: -24.554605 wgan_gp: 0.299044 g: 0.205001 d: -21.564167 speed: 1.43 batches/s 
2021-10-29 11:36:03,503 INFO Iter: [59000/500000] l1: 0.058594 ae: 0.121294 wgan_g: -9.459675 wgan_d: -23.674976 wgan_gp: 0.319562 g: 0.206405 d: -20.479353 speed: 1.43 batches/s 
2021-10-29 11:37:13,128 INFO Iter: [59100/500000] l1: 0.058705 ae: 0.118696 wgan_g: -58.167793 wgan_d: -30.010616 wgan_gp: 0.353281 g: 0.154714 d: -26.477810 speed: 1.44 batches/s 
2021-10-29 11:38:23,153 INFO Iter: [59200/500000] l1: 0.058609 ae: 0.112624 wgan_g: -10.448258 wgan_d: -19.362717 wgan_gp: 0.315979 g: 0.195031 d: -16.202929 speed: 1.43 batches/s 
2021-10-29 11:39:33,617 INFO Iter: [59300/500000] l1: 0.047573 ae: 0.110079 wgan_g: -4.227715 wgan_d: -16.249298 wgan_gp: 0.187688 g: 0.184955 d: -14.372417 speed: 1.42 batches/s 
2021-10-29 11:40:43,518 INFO Iter: [59400/500000] l1: 0.056273 ae: 0.120671 wgan_g: -61.758152 wgan_d: -18.605267 wgan_gp: 0.365131 g: 0.150576 d: -14.953957 speed: 1.43 batches/s 
2021-10-29 11:41:53,693 INFO Iter: [59500/500000] l1: 0.043190 ae: 0.118836 wgan_g: -48.018051 wgan_d: -23.013680 wgan_gp: 0.417092 g: 0.146413 d: -18.842758 speed: 1.43 batches/s 
2021-10-29 11:43:03,527 INFO Iter: [59600/500000] l1: 0.049778 ae: 0.122987 wgan_g: -74.710999 wgan_d: -25.179058 wgan_gp: 0.446346 g: 0.132606 d: -20.715603 speed: 1.43 batches/s 
2021-10-29 11:44:13,427 INFO Iter: [59700/500000] l1: 0.052200 ae: 0.110427 wgan_g: -5.602276 wgan_d: -20.001818 wgan_gp: 0.494915 g: 0.189550 d: -15.052663 speed: 1.43 batches/s 
2021-10-29 11:45:23,224 INFO Iter: [59800/500000] l1: 0.050256 ae: 0.130134 wgan_g: -28.209057 wgan_d: -19.460144 wgan_gp: 0.272193 g: 0.188260 d: -16.738216 speed: 1.43 batches/s 
2021-10-29 11:46:33,449 INFO Iter: [59900/500000] l1: 0.066075 ae: 0.129258 wgan_g: -63.349152 wgan_d: -28.582523 wgan_gp: 0.449585 g: 0.171051 d: -24.086674 speed: 1.42 batches/s 
2021-10-29 11:47:43,269 INFO Iter: [60000/500000] l1: 0.049218 ae: 0.116485 wgan_g: -48.438042 wgan_d: -22.330044 wgan_gp: 0.409243 g: 0.150405 d: -18.237610 speed: 1.43 batches/s 
2021-10-29 11:48:53,361 INFO Iter: [60100/500000] l1: 0.052845 ae: 0.125473 wgan_g: 0.350143 wgan_d: -20.273630 wgan_gp: 0.304216 g: 0.214332 d: -17.231468 speed: 1.43 batches/s 
2021-10-29 11:50:03,153 INFO Iter: [60200/500000] l1: 0.049812 ae: 0.128750 wgan_g: -35.162453 wgan_d: -21.913746 wgan_gp: 0.318921 g: 0.179111 d: -18.724533 speed: 1.43 batches/s 
2021-10-29 11:51:13,092 INFO Iter: [60300/500000] l1: 0.060345 ae: 0.121889 wgan_g: -35.031578 wgan_d: -17.601818 wgan_gp: 0.318001 g: 0.183650 d: -14.421804 speed: 1.43 batches/s 
2021-10-29 11:52:22,642 INFO Iter: [60400/500000] l1: 0.044496 ae: 0.119453 wgan_g: -37.335869 wgan_d: -19.465242 wgan_gp: 0.269943 g: 0.159404 d: -16.765810 speed: 1.44 batches/s 
2021-10-29 11:53:32,200 INFO Iter: [60500/500000] l1: 0.050284 ae: 0.125927 wgan_g: -49.765083 wgan_d: -19.216362 wgan_gp: 0.295248 g: 0.161689 d: -16.263884 speed: 1.44 batches/s 
2021-10-29 11:54:41,840 INFO Iter: [60600/500000] l1: 0.051422 ae: 0.111163 wgan_g: -53.295677 wgan_d: -19.855326 wgan_gp: 0.417061 g: 0.141806 d: -15.684719 speed: 1.44 batches/s 
2021-10-29 11:55:52,544 INFO Iter: [60700/500000] l1: 0.047002 ae: 0.123175 wgan_g: -2.742847 wgan_d: -22.476151 wgan_gp: 0.275433 g: 0.201469 d: -19.721825 speed: 1.41 batches/s 
2021-10-29 11:57:02,200 INFO Iter: [60800/500000] l1: 0.048602 ae: 0.144895 wgan_g: -56.619740 wgan_d: -29.396662 wgan_gp: 0.484424 g: 0.175577 d: -24.552418 speed: 1.44 batches/s 
2021-10-29 11:58:11,973 INFO Iter: [60900/500000] l1: 0.054851 ae: 0.123351 wgan_g: -68.953575 wgan_d: -22.474735 wgan_gp: 0.369488 g: 0.144889 d: -18.779856 speed: 1.43 batches/s 
2021-10-29 11:59:21,861 INFO Iter: [61000/500000] l1: 0.047084 ae: 0.121149 wgan_g: -48.968925 wgan_d: -20.827820 wgan_gp: 0.349878 g: 0.152911 d: -17.329041 speed: 1.43 batches/s 
2021-10-29 12:00:31,989 INFO Iter: [61100/500000] l1: 0.050182 ae: 0.115907 wgan_g: -19.981716 wgan_d: -16.949177 wgan_gp: 0.299613 g: 0.179325 d: -13.953047 speed: 1.43 batches/s 
2021-10-29 12:01:41,649 INFO Iter: [61200/500000] l1: 0.048982 ae: 0.126015 wgan_g: -64.198082 wgan_d: -20.593624 wgan_gp: 0.460137 g: 0.145799 d: -15.992249 speed: 1.44 batches/s 
2021-10-29 12:02:34,761 INFO Iter: [61300/500000] l1: nan ae: nan wgan_g: -60.089649 wgan_d: 37.231293 wgan_gp: 0.396372 g: nan d: 41.195015 speed: 1.88 batches/s 
2021-10-29 12:03:17,565 INFO Iter: [61400/500000] l1: nan ae: nan wgan_g: 0.451804 wgan_d: -47.204464 wgan_gp: 0.329583 g: nan d: -43.908638 speed: 2.34 batches/s 
2021-10-29 12:03:37,501 INFO Arguments: Namespace(config='/home/aistudio/generative-inpainting/configs/config.yaml', seed=None)
2021-10-29 12:03:37,501 INFO Random seed: 9723
2021-10-29 12:03:37,501 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 24, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-29 12:03:37,501 INFO Training on dataset: imagenet
2021-10-29 12:03:48,562 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-29 12:03:48,562 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-29 12:03:48,562 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 61000
2021-10-29 12:03:48,775 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 61000
2021-10-29 12:03:51,042 INFO Iter: [61000/500000] l1: 0.048699 ae: 0.123987 wgan_g: -39.738102 wgan_d: -16.984608 wgan_gp: 0.347514 g: 0.167484 d: -13.509470 speed: 58.00 batches/s 
2021-10-29 12:05:01,316 INFO Iter: [61100/500000] l1: 0.051375 ae: 0.118031 wgan_g: -14.339873 wgan_d: -24.280497 wgan_gp: 0.341176 g: 0.188948 d: -20.868738 speed: 1.42 batches/s 
2021-10-29 12:06:11,021 INFO Iter: [61200/500000] l1: 0.053865 ae: 0.121869 wgan_g: -68.792786 wgan_d: -24.768187 wgan_gp: 0.473475 g: 0.142088 d: -20.033432 speed: 1.43 batches/s 
2021-10-29 12:07:20,885 INFO Iter: [61300/500000] l1: 0.050931 ae: 0.125517 wgan_g: -24.048187 wgan_d: -22.446676 wgan_gp: 0.280911 g: 0.187689 d: -19.637569 speed: 1.43 batches/s 
2021-10-29 12:08:30,627 INFO Iter: [61400/500000] l1: 0.059534 ae: 0.140117 wgan_g: -67.441154 wgan_d: -30.035505 wgan_gp: 0.410900 g: 0.172140 d: -25.926508 speed: 1.43 batches/s 
2021-10-29 12:09:40,499 INFO Iter: [61500/500000] l1: 0.055143 ae: 0.134655 wgan_g: -78.497215 wgan_d: -31.957977 wgan_gp: 0.652900 g: 0.149261 d: -25.428978 speed: 1.43 batches/s 
2021-10-29 12:10:50,073 INFO Iter: [61600/500000] l1: 0.041775 ae: 0.125967 wgan_g: -51.554337 wgan_d: -18.692301 wgan_gp: 0.348609 g: 0.149736 d: -15.206212 speed: 1.44 batches/s 
2021-10-29 12:11:59,705 INFO Iter: [61700/500000] l1: 0.042572 ae: 0.102468 wgan_g: -39.662590 wgan_d: -21.059643 wgan_gp: 0.248116 g: 0.134385 d: -18.578484 speed: 1.44 batches/s 
2021-10-29 12:13:09,565 INFO Iter: [61800/500000] l1: 0.059878 ae: 0.121449 wgan_g: -20.096521 wgan_d: -24.558098 wgan_gp: 0.325065 g: 0.197497 d: -21.307444 speed: 1.43 batches/s 
2021-10-29 12:14:19,804 INFO Iter: [61900/500000] l1: 0.045446 ae: 0.134788 wgan_g: -46.617142 wgan_d: -22.398096 wgan_gp: 0.365548 g: 0.169663 d: -18.742615 speed: 1.42 batches/s 
2021-10-29 12:15:30,492 INFO Iter: [62000/500000] l1: 0.059630 ae: 0.125257 wgan_g: 0.439552 wgan_d: -19.975319 wgan_gp: 0.396465 g: 0.222304 d: -16.010670 speed: 1.41 batches/s 
2021-10-29 12:16:41,145 INFO Iter: [62100/500000] l1: 0.059016 ae: 0.123695 wgan_g: -23.950470 wgan_d: -23.015882 wgan_gp: 0.331201 g: 0.195302 d: -19.703869 speed: 1.42 batches/s 
2021-10-29 12:17:51,811 INFO Iter: [62200/500000] l1: 0.057990 ae: 0.117763 wgan_g: -31.849701 wgan_d: -19.852894 wgan_gp: 0.332811 g: 0.179054 d: -16.524782 speed: 1.42 batches/s 
2021-10-29 12:19:03,718 INFO Iter: [62300/500000] l1: 0.049037 ae: 0.097574 wgan_g: 28.299904 wgan_d: -15.201576 wgan_gp: 0.201575 g: 0.204233 d: -13.185822 speed: 1.39 batches/s 
2021-10-29 12:20:10,255 INFO Iter: [62400/500000] l1: nan ae: nan wgan_g: -15.212017 wgan_d: -96.937080 wgan_gp: 0.457658 g: nan d: -92.360504 speed: 1.50 batches/s 
2021-10-29 12:20:54,967 INFO Iter: [62500/500000] l1: nan ae: nan wgan_g: -13.417982 wgan_d: -99.047974 wgan_gp: 0.584806 g: nan d: -93.199913 speed: 2.24 batches/s 
2021-10-29 12:21:39,113 INFO Iter: [62600/500000] l1: nan ae: nan wgan_g: -5.903763 wgan_d: -97.869438 wgan_gp: 0.542894 g: nan d: -92.440498 speed: 2.27 batches/s 
2021-10-29 12:22:21,111 INFO Iter: [62700/500000] l1: nan ae: nan wgan_g: -4.424229 wgan_d: -94.319641 wgan_gp: 0.631458 g: nan d: -88.005066 speed: 2.38 batches/s 
2021-10-29 12:23:03,311 INFO Iter: [62800/500000] l1: nan ae: nan wgan_g: -38.344124 wgan_d: -75.738403 wgan_gp: 0.470752 g: nan d: -71.030884 speed: 2.37 batches/s 
2021-10-29 12:23:45,523 INFO Iter: [62900/500000] l1: nan ae: nan wgan_g: -2.202885 wgan_d: -105.852524 wgan_gp: 0.465374 g: nan d: -101.198776 speed: 2.37 batches/s 
2021-10-29 12:24:28,003 INFO Iter: [63000/500000] l1: nan ae: nan wgan_g: -13.128643 wgan_d: -90.325836 wgan_gp: 0.531965 g: nan d: -85.006180 speed: 2.35 batches/s 
2021-10-29 12:25:11,973 INFO Iter: [63100/500000] l1: nan ae: nan wgan_g: -14.211706 wgan_d: -90.160637 wgan_gp: 0.518541 g: nan d: -84.975227 speed: 2.27 batches/s 
2021-10-29 12:25:54,031 INFO Iter: [63200/500000] l1: nan ae: nan wgan_g: -10.068340 wgan_d: -93.617523 wgan_gp: 0.440723 g: nan d: -89.210289 speed: 2.38 batches/s 
2021-10-29 12:26:36,810 INFO Iter: [63300/500000] l1: nan ae: nan wgan_g: -0.927904 wgan_d: -108.494530 wgan_gp: 0.498937 g: nan d: -103.505165 speed: 2.34 batches/s 
2021-10-29 12:27:19,037 INFO Iter: [63400/500000] l1: nan ae: nan wgan_g: 1.009874 wgan_d: -99.981316 wgan_gp: 0.451254 g: nan d: -95.468773 speed: 2.37 batches/s 
2021-10-29 12:28:03,620 INFO Iter: [63500/500000] l1: nan ae: nan wgan_g: -15.847048 wgan_d: -99.646988 wgan_gp: 0.538568 g: nan d: -94.261307 speed: 2.24 batches/s 
2021-10-29 12:28:46,672 INFO Iter: [63600/500000] l1: nan ae: nan wgan_g: -26.082209 wgan_d: -85.910576 wgan_gp: 0.703696 g: nan d: -78.873619 speed: 2.32 batches/s 
2021-10-29 12:29:29,551 INFO Iter: [63700/500000] l1: nan ae: nan wgan_g: -23.899712 wgan_d: -79.425323 wgan_gp: 0.463828 g: nan d: -74.787048 speed: 2.33 batches/s 
2021-10-29 12:30:12,457 INFO Iter: [63800/500000] l1: nan ae: nan wgan_g: 3.214195 wgan_d: -112.488052 wgan_gp: 0.537986 g: nan d: -107.108192 speed: 2.33 batches/s 
2021-10-29 12:30:55,101 INFO Iter: [63900/500000] l1: nan ae: nan wgan_g: -18.338097 wgan_d: -91.955307 wgan_gp: 0.482233 g: nan d: -87.132980 speed: 2.34 batches/s 
2021-10-29 12:31:37,802 INFO Iter: [64000/500000] l1: nan ae: nan wgan_g: 0.300463 wgan_d: -110.796661 wgan_gp: 0.614609 g: nan d: -104.650574 speed: 2.34 batches/s 
2021-10-29 12:32:20,419 INFO Iter: [64100/500000] l1: nan ae: nan wgan_g: -11.129223 wgan_d: -99.360321 wgan_gp: 0.600252 g: nan d: -93.357803 speed: 2.35 batches/s 
2021-10-29 12:33:02,502 INFO Iter: [64200/500000] l1: nan ae: nan wgan_g: -22.899830 wgan_d: -92.388397 wgan_gp: 0.569537 g: nan d: -86.693024 speed: 2.38 batches/s 
2021-10-29 12:33:45,088 INFO Iter: [64300/500000] l1: nan ae: nan wgan_g: -12.040394 wgan_d: -96.841492 wgan_gp: 0.535221 g: nan d: -91.489288 speed: 2.35 batches/s 
2021-10-29 12:34:27,860 INFO Iter: [64400/500000] l1: nan ae: nan wgan_g: -14.202358 wgan_d: -96.173248 wgan_gp: 0.501476 g: nan d: -91.158493 speed: 2.34 batches/s 
2021-10-29 12:35:10,597 INFO Iter: [64500/500000] l1: nan ae: nan wgan_g: 1.321814 wgan_d: -107.688805 wgan_gp: 0.473671 g: nan d: -102.952087 speed: 2.34 batches/s 
2021-10-29 12:35:53,240 INFO Iter: [64600/500000] l1: nan ae: nan wgan_g: -4.766047 wgan_d: -108.185112 wgan_gp: 0.617110 g: nan d: -102.014015 speed: 2.35 batches/s 
2021-10-29 12:36:35,528 INFO Iter: [64700/500000] l1: nan ae: nan wgan_g: -6.767778 wgan_d: -103.540619 wgan_gp: 0.548753 g: nan d: -98.053093 speed: 2.36 batches/s 
2021-10-29 12:37:18,274 INFO Iter: [64800/500000] l1: nan ae: nan wgan_g: -21.983932 wgan_d: -93.761429 wgan_gp: 0.513703 g: nan d: -88.624397 speed: 2.34 batches/s 
2021-10-29 12:38:00,362 INFO Iter: [64900/500000] l1: nan ae: nan wgan_g: -17.306656 wgan_d: -90.456573 wgan_gp: 0.620538 g: nan d: -84.251190 speed: 2.38 batches/s 
2021-10-29 12:38:42,321 INFO Iter: [65000/500000] l1: nan ae: nan wgan_g: -10.214205 wgan_d: -90.399002 wgan_gp: 0.554528 g: nan d: -84.853722 speed: 2.38 batches/s 
2021-10-29 12:39:24,634 INFO Iter: [65100/500000] l1: nan ae: nan wgan_g: -22.134520 wgan_d: -97.476746 wgan_gp: 0.497549 g: nan d: -92.501259 speed: 2.36 batches/s 
2021-10-29 12:40:06,701 INFO Iter: [65200/500000] l1: nan ae: nan wgan_g: -14.857452 wgan_d: -93.979034 wgan_gp: 0.542376 g: nan d: -88.555267 speed: 2.38 batches/s 
2021-10-29 12:40:48,794 INFO Iter: [65300/500000] l1: nan ae: nan wgan_g: -1.176283 wgan_d: -117.749039 wgan_gp: 0.669227 g: nan d: -111.056770 speed: 2.38 batches/s 
2021-10-29 12:41:31,469 INFO Iter: [65400/500000] l1: nan ae: nan wgan_g: -37.038116 wgan_d: -67.238838 wgan_gp: 0.366944 g: nan d: -63.569397 speed: 2.34 batches/s 
2021-10-29 12:42:14,312 INFO Iter: [65500/500000] l1: nan ae: nan wgan_g: -11.268890 wgan_d: -100.924873 wgan_gp: 0.563721 g: nan d: -95.287659 speed: 2.33 batches/s 
2021-10-29 12:42:56,389 INFO Iter: [65600/500000] l1: nan ae: nan wgan_g: -20.379564 wgan_d: -81.935287 wgan_gp: 0.414389 g: nan d: -77.791397 speed: 2.38 batches/s 
2021-10-29 12:43:39,214 INFO Iter: [65700/500000] l1: nan ae: nan wgan_g: -31.769407 wgan_d: -72.465675 wgan_gp: 0.486174 g: nan d: -67.603935 speed: 2.34 batches/s 
2021-10-29 12:44:21,920 INFO Iter: [65800/500000] l1: nan ae: nan wgan_g: -3.036888 wgan_d: -108.101532 wgan_gp: 0.588071 g: nan d: -102.220818 speed: 2.34 batches/s 
2021-10-29 12:45:04,774 INFO Iter: [65900/500000] l1: nan ae: nan wgan_g: -31.732462 wgan_d: -63.778522 wgan_gp: 0.439967 g: nan d: -59.378849 speed: 2.33 batches/s 
2021-10-29 12:45:47,331 INFO Iter: [66000/500000] l1: nan ae: nan wgan_g: -5.989225 wgan_d: -113.763412 wgan_gp: 0.576114 g: nan d: -108.002274 speed: 2.35 batches/s 
2021-10-29 12:46:29,599 INFO Iter: [66100/500000] l1: nan ae: nan wgan_g: -25.428770 wgan_d: -95.792259 wgan_gp: 0.536033 g: nan d: -90.431931 speed: 2.37 batches/s 
2021-10-29 12:47:11,471 INFO Iter: [66200/500000] l1: nan ae: nan wgan_g: -18.743708 wgan_d: -82.882050 wgan_gp: 0.492766 g: nan d: -77.954391 speed: 2.39 batches/s 
2021-10-29 12:47:53,275 INFO Iter: [66300/500000] l1: nan ae: nan wgan_g: -31.584303 wgan_d: -85.404465 wgan_gp: 0.454191 g: nan d: -80.862549 speed: 2.39 batches/s 
2021-10-29 12:48:35,035 INFO Iter: [66400/500000] l1: nan ae: nan wgan_g: -34.206936 wgan_d: -77.386559 wgan_gp: 0.422497 g: nan d: -73.161591 speed: 2.39 batches/s 
2021-10-29 12:49:16,956 INFO Iter: [66500/500000] l1: nan ae: nan wgan_g: 1.131479 wgan_d: -112.246353 wgan_gp: 0.662609 g: nan d: -105.620262 speed: 2.39 batches/s 
2021-10-29 12:49:58,930 INFO Iter: [66600/500000] l1: nan ae: nan wgan_g: -8.583313 wgan_d: -95.384743 wgan_gp: 0.404114 g: nan d: -91.343605 speed: 2.38 batches/s 
2021-10-29 12:50:41,210 INFO Iter: [66700/500000] l1: nan ae: nan wgan_g: -23.834156 wgan_d: -97.517242 wgan_gp: 0.527515 g: nan d: -92.242096 speed: 2.37 batches/s 
2021-10-29 12:51:23,249 INFO Iter: [66800/500000] l1: nan ae: nan wgan_g: -7.283169 wgan_d: -98.954926 wgan_gp: 0.619666 g: nan d: -92.758270 speed: 2.38 batches/s 
2021-10-29 12:52:05,433 INFO Iter: [66900/500000] l1: nan ae: nan wgan_g: -36.663460 wgan_d: -81.010567 wgan_gp: 0.560233 g: nan d: -75.408234 speed: 2.37 batches/s 
2021-10-29 12:52:47,576 INFO Iter: [67000/500000] l1: nan ae: nan wgan_g: -15.342857 wgan_d: -85.169144 wgan_gp: 0.463756 g: nan d: -80.531586 speed: 2.37 batches/s 
2021-10-29 12:53:29,734 INFO Iter: [67100/500000] l1: nan ae: nan wgan_g: -18.928797 wgan_d: -88.815720 wgan_gp: 0.461382 g: nan d: -84.201904 speed: 2.37 batches/s 
2021-10-29 12:54:11,845 INFO Iter: [67200/500000] l1: nan ae: nan wgan_g: -21.177265 wgan_d: -92.307976 wgan_gp: 0.491849 g: nan d: -87.389481 speed: 2.37 batches/s 
2021-10-29 12:54:54,513 INFO Iter: [67300/500000] l1: nan ae: nan wgan_g: -16.858368 wgan_d: -89.711205 wgan_gp: 0.648432 g: nan d: -83.226883 speed: 2.34 batches/s 
2021-10-29 12:55:37,482 INFO Iter: [67400/500000] l1: nan ae: nan wgan_g: -16.269352 wgan_d: -104.225304 wgan_gp: 0.489580 g: nan d: -99.329506 speed: 2.33 batches/s 
2021-10-29 12:56:20,181 INFO Iter: [67500/500000] l1: nan ae: nan wgan_g: -8.352827 wgan_d: -99.909012 wgan_gp: 0.645774 g: nan d: -93.451271 speed: 2.34 batches/s 
2021-10-29 12:57:02,620 INFO Iter: [67600/500000] l1: nan ae: nan wgan_g: -10.538975 wgan_d: -94.396072 wgan_gp: 0.530833 g: nan d: -89.087738 speed: 2.36 batches/s 
2021-10-29 12:57:44,586 INFO Iter: [67700/500000] l1: nan ae: nan wgan_g: -8.390408 wgan_d: -109.813507 wgan_gp: 0.611378 g: nan d: -103.699722 speed: 2.38 batches/s 
2021-10-29 12:58:26,638 INFO Iter: [67800/500000] l1: nan ae: nan wgan_g: -45.589123 wgan_d: -59.302788 wgan_gp: 0.430347 g: nan d: -54.999313 speed: 2.38 batches/s 
2021-10-29 12:59:08,834 INFO Iter: [67900/500000] l1: nan ae: nan wgan_g: -14.788313 wgan_d: -114.562195 wgan_gp: 0.657638 g: nan d: -107.985817 speed: 2.37 batches/s 
2021-10-29 12:59:50,707 INFO Iter: [68000/500000] l1: nan ae: nan wgan_g: 2.492208 wgan_d: -115.737732 wgan_gp: 0.589703 g: nan d: -109.840698 speed: 2.39 batches/s 
2021-10-29 13:00:33,156 INFO Iter: [68100/500000] l1: nan ae: nan wgan_g: -11.019335 wgan_d: -75.388474 wgan_gp: 0.419524 g: nan d: -71.193230 speed: 2.36 batches/s 
2021-10-29 13:01:15,103 INFO Iter: [68200/500000] l1: nan ae: nan wgan_g: -13.800100 wgan_d: -86.675858 wgan_gp: 0.392420 g: nan d: -82.751656 speed: 2.38 batches/s 
2021-10-29 13:01:57,033 INFO Iter: [68300/500000] l1: nan ae: nan wgan_g: 5.472048 wgan_d: -114.179916 wgan_gp: 0.559247 g: nan d: -108.587440 speed: 2.38 batches/s 
2021-10-29 13:02:39,053 INFO Iter: [68400/500000] l1: nan ae: nan wgan_g: -7.496019 wgan_d: -97.856247 wgan_gp: 0.475439 g: nan d: -93.101852 speed: 2.38 batches/s 
2021-10-29 13:03:21,603 INFO Iter: [68500/500000] l1: nan ae: nan wgan_g: -29.114716 wgan_d: -88.920128 wgan_gp: 0.581881 g: nan d: -83.101318 speed: 2.35 batches/s 
2021-10-29 13:04:03,853 INFO Iter: [68600/500000] l1: nan ae: nan wgan_g: -8.909046 wgan_d: -98.362556 wgan_gp: 0.553344 g: nan d: -92.829117 speed: 2.37 batches/s 
2021-10-29 13:04:46,372 INFO Iter: [68700/500000] l1: nan ae: nan wgan_g: -19.193756 wgan_d: -105.558174 wgan_gp: 0.590411 g: nan d: -99.654060 speed: 2.35 batches/s 
2021-10-29 13:05:28,492 INFO Iter: [68800/500000] l1: nan ae: nan wgan_g: -12.975241 wgan_d: -89.846588 wgan_gp: 0.654023 g: nan d: -83.306358 speed: 2.37 batches/s 
2021-10-29 13:06:10,241 INFO Iter: [68900/500000] l1: nan ae: nan wgan_g: -17.478071 wgan_d: -94.332047 wgan_gp: 0.497668 g: nan d: -89.355362 speed: 2.40 batches/s 
2021-10-29 13:06:52,222 INFO Iter: [69000/500000] l1: nan ae: nan wgan_g: -0.894516 wgan_d: -110.240700 wgan_gp: 0.525279 g: nan d: -104.987915 speed: 2.38 batches/s 
2021-10-29 13:07:34,254 INFO Iter: [69100/500000] l1: nan ae: nan wgan_g: -17.881720 wgan_d: -103.080582 wgan_gp: 0.531426 g: nan d: -97.766327 speed: 2.38 batches/s 
2021-10-29 13:08:16,287 INFO Iter: [69200/500000] l1: nan ae: nan wgan_g: -0.795982 wgan_d: -113.451447 wgan_gp: 0.530493 g: nan d: -108.146523 speed: 2.38 batches/s 
2021-10-29 13:08:58,300 INFO Iter: [69300/500000] l1: nan ae: nan wgan_g: -24.501245 wgan_d: -77.453537 wgan_gp: 0.432971 g: nan d: -73.123833 speed: 2.38 batches/s 
2021-10-29 13:09:40,554 INFO Iter: [69400/500000] l1: nan ae: nan wgan_g: -9.877459 wgan_d: -100.975258 wgan_gp: 0.446804 g: nan d: -96.507210 speed: 2.37 batches/s 
2021-10-29 13:10:22,575 INFO Iter: [69500/500000] l1: nan ae: nan wgan_g: -19.892550 wgan_d: -101.348450 wgan_gp: 0.592488 g: nan d: -95.423569 speed: 2.38 batches/s 
2021-10-29 13:11:04,625 INFO Iter: [69600/500000] l1: nan ae: nan wgan_g: -4.423862 wgan_d: -98.407478 wgan_gp: 0.660738 g: nan d: -91.800102 speed: 2.38 batches/s 
2021-10-29 13:11:46,794 INFO Iter: [69700/500000] l1: nan ae: nan wgan_g: -39.425926 wgan_d: -65.441307 wgan_gp: 0.421370 g: nan d: -61.227604 speed: 2.37 batches/s 
2021-10-29 13:12:29,017 INFO Iter: [69800/500000] l1: nan ae: nan wgan_g: 4.444841 wgan_d: -121.014977 wgan_gp: 0.589995 g: nan d: -115.115028 speed: 2.37 batches/s 
2021-10-29 13:13:11,234 INFO Iter: [69900/500000] l1: nan ae: nan wgan_g: -15.550690 wgan_d: -100.049408 wgan_gp: 0.442633 g: nan d: -95.623077 speed: 2.37 batches/s 
2021-10-29 13:13:53,284 INFO Iter: [70000/500000] l1: nan ae: nan wgan_g: 3.095049 wgan_d: -120.377213 wgan_gp: 0.517582 g: nan d: -115.201393 speed: 2.38 batches/s 
2021-10-29 13:14:35,766 INFO Iter: [70100/500000] l1: nan ae: nan wgan_g: -1.947193 wgan_d: -112.215233 wgan_gp: 0.603662 g: nan d: -106.178612 speed: 2.35 batches/s 
2021-10-29 13:15:17,939 INFO Iter: [70200/500000] l1: nan ae: nan wgan_g: -28.979303 wgan_d: -65.755592 wgan_gp: 0.395276 g: nan d: -61.802830 speed: 2.37 batches/s 
2021-10-29 13:16:00,026 INFO Iter: [70300/500000] l1: nan ae: nan wgan_g: -7.536612 wgan_d: -117.450645 wgan_gp: 0.557765 g: nan d: -111.872993 speed: 2.38 batches/s 
2021-10-29 13:16:42,412 INFO Iter: [70400/500000] l1: nan ae: nan wgan_g: -24.629265 wgan_d: -86.143044 wgan_gp: 0.549500 g: nan d: -80.648048 speed: 2.36 batches/s 
2021-10-29 13:17:24,666 INFO Iter: [70500/500000] l1: nan ae: nan wgan_g: -18.671444 wgan_d: -89.268028 wgan_gp: 0.423781 g: nan d: -85.030220 speed: 2.37 batches/s 
2021-10-29 13:18:07,382 INFO Iter: [70600/500000] l1: nan ae: nan wgan_g: -14.261351 wgan_d: -97.356750 wgan_gp: 0.559842 g: nan d: -91.758331 speed: 2.34 batches/s 
2021-10-29 13:18:51,021 INFO Iter: [70700/500000] l1: nan ae: nan wgan_g: -16.970863 wgan_d: -88.414093 wgan_gp: 0.584844 g: nan d: -82.565651 speed: 2.29 batches/s 
2021-10-29 13:19:33,961 INFO Iter: [70800/500000] l1: nan ae: nan wgan_g: -23.082558 wgan_d: -86.505066 wgan_gp: 0.639933 g: nan d: -80.105736 speed: 2.33 batches/s 
2021-10-29 13:20:16,800 INFO Iter: [70900/500000] l1: nan ae: nan wgan_g: -19.787403 wgan_d: -87.337364 wgan_gp: 0.479605 g: nan d: -82.541313 speed: 2.33 batches/s 
2021-10-29 13:20:59,180 INFO Iter: [71000/500000] l1: nan ae: nan wgan_g: -19.261206 wgan_d: -87.834900 wgan_gp: 0.445661 g: nan d: -83.378296 speed: 2.36 batches/s 
2021-10-29 13:21:42,075 INFO Iter: [71100/500000] l1: nan ae: nan wgan_g: -19.531570 wgan_d: -90.687531 wgan_gp: 0.436427 g: nan d: -86.323257 speed: 2.33 batches/s 
2021-10-29 13:22:24,746 INFO Iter: [71200/500000] l1: nan ae: nan wgan_g: 1.554430 wgan_d: -113.524216 wgan_gp: 0.541139 g: nan d: -108.112823 speed: 2.34 batches/s 
2021-10-29 13:23:07,702 INFO Iter: [71300/500000] l1: nan ae: nan wgan_g: -14.533072 wgan_d: -89.750153 wgan_gp: 0.514750 g: nan d: -84.602654 speed: 2.33 batches/s 
2021-10-29 13:23:50,459 INFO Iter: [71400/500000] l1: nan ae: nan wgan_g: -26.966858 wgan_d: -88.123535 wgan_gp: 0.570254 g: nan d: -82.420990 speed: 2.34 batches/s 
2021-10-29 13:24:33,292 INFO Iter: [71500/500000] l1: nan ae: nan wgan_g: -9.426239 wgan_d: -95.426819 wgan_gp: 0.500551 g: nan d: -90.421310 speed: 2.33 batches/s 
2021-10-29 13:25:16,202 INFO Iter: [71600/500000] l1: nan ae: nan wgan_g: 10.746761 wgan_d: -110.608490 wgan_gp: 0.499111 g: nan d: -105.617386 speed: 2.33 batches/s 
2021-10-29 13:25:58,921 INFO Iter: [71700/500000] l1: nan ae: nan wgan_g: -17.649864 wgan_d: -89.126236 wgan_gp: 0.664885 g: nan d: -82.477386 speed: 2.34 batches/s 
2021-10-29 13:26:41,553 INFO Iter: [71800/500000] l1: nan ae: nan wgan_g: -17.227276 wgan_d: -95.349579 wgan_gp: 0.456632 g: nan d: -90.783257 speed: 2.35 batches/s 
2021-10-29 13:27:24,330 INFO Iter: [71900/500000] l1: nan ae: nan wgan_g: -31.761469 wgan_d: -75.027077 wgan_gp: 0.399448 g: nan d: -71.032593 speed: 2.34 batches/s 
2021-10-29 13:28:07,022 INFO Iter: [72000/500000] l1: nan ae: nan wgan_g: -16.764835 wgan_d: -88.775154 wgan_gp: 0.608832 g: nan d: -82.686829 speed: 2.34 batches/s 
2021-10-29 13:28:49,183 INFO Iter: [72100/500000] l1: nan ae: nan wgan_g: -24.467163 wgan_d: -88.628296 wgan_gp: 0.592218 g: nan d: -82.706116 speed: 2.37 batches/s 
2021-10-29 13:29:31,409 INFO Iter: [72200/500000] l1: nan ae: nan wgan_g: -17.395050 wgan_d: -93.281631 wgan_gp: 0.555655 g: nan d: -87.725075 speed: 2.37 batches/s 
2021-10-29 13:30:13,543 INFO Iter: [72300/500000] l1: nan ae: nan wgan_g: -26.004383 wgan_d: -97.220581 wgan_gp: 0.439656 g: nan d: -92.824028 speed: 2.37 batches/s 
2021-10-29 13:30:55,532 INFO Iter: [72400/500000] l1: nan ae: nan wgan_g: -15.777414 wgan_d: -92.826141 wgan_gp: 0.470830 g: nan d: -88.117844 speed: 2.38 batches/s 
2021-10-29 13:31:37,425 INFO Iter: [72500/500000] l1: nan ae: nan wgan_g: -6.918905 wgan_d: -110.424316 wgan_gp: 0.592360 g: nan d: -104.500710 speed: 2.39 batches/s 
2021-10-29 13:32:19,368 INFO Iter: [72600/500000] l1: nan ae: nan wgan_g: -9.971928 wgan_d: -99.704292 wgan_gp: 0.550462 g: nan d: -94.199669 speed: 2.38 batches/s 
2021-10-29 13:33:01,434 INFO Iter: [72700/500000] l1: nan ae: nan wgan_g: -11.615292 wgan_d: -101.051163 wgan_gp: 0.488214 g: nan d: -96.169022 speed: 2.38 batches/s 
2021-10-29 13:33:43,729 INFO Iter: [72800/500000] l1: nan ae: nan wgan_g: -12.730499 wgan_d: -97.819031 wgan_gp: 0.615704 g: nan d: -91.661987 speed: 2.36 batches/s 
2021-10-29 13:34:26,052 INFO Iter: [72900/500000] l1: nan ae: nan wgan_g: -24.363928 wgan_d: -89.909546 wgan_gp: 0.664539 g: nan d: -83.264153 speed: 2.36 batches/s 
2021-10-29 13:35:08,400 INFO Iter: [73000/500000] l1: nan ae: nan wgan_g: -15.503105 wgan_d: -89.440239 wgan_gp: 0.590509 g: nan d: -83.535149 speed: 2.36 batches/s 
2021-10-29 13:35:51,764 INFO Iter: [73100/500000] l1: nan ae: nan wgan_g: -1.724413 wgan_d: -113.749527 wgan_gp: 0.526572 g: nan d: -108.483810 speed: 2.31 batches/s 
2021-10-29 13:36:34,561 INFO Iter: [73200/500000] l1: nan ae: nan wgan_g: -22.669632 wgan_d: -85.593307 wgan_gp: 0.411565 g: nan d: -81.477661 speed: 2.34 batches/s 
2021-10-29 13:37:17,227 INFO Iter: [73300/500000] l1: nan ae: nan wgan_g: -16.861736 wgan_d: -96.029884 wgan_gp: 0.723950 g: nan d: -88.790382 speed: 2.34 batches/s 
2021-10-29 13:37:59,790 INFO Iter: [73400/500000] l1: nan ae: nan wgan_g: -15.947590 wgan_d: -94.355453 wgan_gp: 0.470873 g: nan d: -89.646721 speed: 2.35 batches/s 
2021-10-29 13:39:05,854 INFO Arguments: Namespace(config='/home/aistudio/generative-inpainting/configs/config.yaml', seed=None)
2021-10-29 13:39:05,854 INFO Random seed: 9521
2021-10-29 13:39:05,854 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 24, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-29 13:39:05,855 INFO Training on dataset: imagenet
2021-10-29 13:39:16,710 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-29 13:39:16,711 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-29 13:39:16,711 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 62000
2021-10-29 13:39:16,917 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 62000
2021-10-29 13:39:19,064 INFO Iter: [62000/500000] l1: 0.048527 ae: 0.117618 wgan_g: -11.314225 wgan_d: -16.315994 wgan_gp: 0.353302 g: 0.188061 d: -12.782976 speed: 62.03 batches/s 
2021-10-29 13:40:02,220 INFO Iter: [62100/500000] l1: nan ae: nan wgan_g: -8.614922 wgan_d: -91.888168 wgan_gp: 0.543140 g: nan d: -86.456764 speed: 2.32 batches/s 
2021-10-29 13:40:44,903 INFO Iter: [62200/500000] l1: nan ae: nan wgan_g: -21.615597 wgan_d: -76.831161 wgan_gp: 0.518159 g: nan d: -71.649574 speed: 2.34 batches/s 
2021-10-29 13:41:06,765 INFO Arguments: Namespace(config='/home/aistudio/generative-inpainting/configs/config.yaml', seed=None)
2021-10-29 13:41:06,765 INFO Random seed: 781
2021-10-29 13:41:06,765 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 24, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-29 13:41:06,765 INFO Training on dataset: imagenet
2021-10-29 13:41:17,664 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-29 13:41:17,664 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-29 13:41:17,665 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 62000
2021-10-29 13:41:17,874 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 62000
2021-10-29 13:41:19,486 INFO Iter: [62000/500000] l1: nan ae: nan wgan_g: -53.999222 wgan_d: 8.712178 wgan_gp: 0.403614 g: nan d: 12.748321 speed: 93.87 batches/s 
2021-10-29 13:41:53,890 INFO Arguments: Namespace(config='/home/aistudio/generative-inpainting/configs/config.yaml', seed=None)
2021-10-29 13:41:53,890 INFO Random seed: 7931
2021-10-29 13:41:53,891 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 24, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-29 13:41:53,891 INFO Training on dataset: imagenet
2021-10-29 13:42:04,898 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-29 13:42:04,898 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-29 13:42:04,898 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 61000
2021-10-29 13:42:05,054 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 61000
2021-10-29 13:42:07,183 INFO Iter: [61000/500000] l1: 0.049074 ae: 0.125373 wgan_g: -42.525040 wgan_d: -16.954082 wgan_gp: 0.327271 g: 0.166811 d: -13.681370 speed: 62.65 batches/s 
2021-10-29 13:43:17,717 INFO Iter: [61100/500000] l1: 0.051913 ae: 0.127696 wgan_g: -56.549850 wgan_d: -24.088528 wgan_gp: 0.342235 g: 0.158981 d: -20.666180 speed: 1.42 batches/s 
2021-10-29 13:44:27,620 INFO Iter: [61200/500000] l1: 0.054364 ae: 0.112996 wgan_g: -38.602013 wgan_d: -21.341625 wgan_gp: 0.306935 g: 0.162230 d: -18.272280 speed: 1.43 batches/s 
2021-10-29 13:45:37,765 INFO Iter: [61300/500000] l1: 0.050365 ae: 0.117043 wgan_g: -51.450760 wgan_d: -21.683964 wgan_gp: 0.296492 g: 0.149439 d: -18.719044 speed: 1.43 batches/s 
2021-10-29 13:46:50,100 INFO Iter: [61400/500000] l1: 0.059281 ae: 0.136209 wgan_g: -25.151073 wgan_d: -30.313240 wgan_gp: 0.426211 g: 0.209437 d: -26.051132 speed: 1.38 batches/s 
2021-10-29 13:48:03,509 INFO Iter: [61500/500000] l1: 0.055167 ae: 0.133278 wgan_g: -43.441330 wgan_d: -27.370398 wgan_gp: 0.464126 g: 0.182693 d: -22.729137 speed: 1.36 batches/s 
2021-10-29 13:49:16,944 INFO Iter: [61600/500000] l1: 0.041755 ae: 0.134542 wgan_g: -86.515762 wgan_d: -24.513063 wgan_gp: 0.486873 g: 0.125041 d: -19.644333 speed: 1.36 batches/s 
2021-10-29 13:50:30,571 INFO Iter: [61700/500000] l1: 0.044171 ae: 0.099537 wgan_g: -12.172583 wgan_d: -16.546625 wgan_gp: 0.167588 g: 0.160276 d: -14.870744 speed: 1.36 batches/s 
2021-10-29 13:51:44,187 INFO Iter: [61800/500000] l1: 0.061423 ae: 0.122963 wgan_g: -30.373987 wgan_d: -27.298637 wgan_gp: 0.334180 g: 0.190889 d: -23.956837 speed: 1.36 batches/s 
2021-10-29 13:52:54,731 INFO Iter: [61900/500000] l1: 0.045977 ae: 0.128179 wgan_g: -85.359505 wgan_d: -23.421339 wgan_gp: 0.397226 g: 0.123628 d: -19.449081 speed: 1.42 batches/s 
2021-10-29 13:54:04,801 INFO Iter: [62000/500000] l1: 0.056442 ae: 0.124102 wgan_g: -38.528145 wgan_d: -24.764544 wgan_gp: 0.414686 g: 0.178124 d: -20.617683 speed: 1.43 batches/s 
2021-10-29 13:55:15,305 INFO Iter: [62100/500000] l1: 0.059405 ae: 0.118989 wgan_g: -27.735229 wgan_d: -21.544567 wgan_gp: 0.305952 g: 0.186338 d: -18.485046 speed: 1.42 batches/s 
2021-10-29 13:56:25,396 INFO Iter: [62200/500000] l1: 0.058536 ae: 0.119381 wgan_g: -47.481358 wgan_d: -21.911364 wgan_gp: 0.324183 g: 0.166018 d: -18.669529 speed: 1.43 batches/s 
2021-10-29 13:57:35,413 INFO Iter: [62300/500000] l1: 0.047080 ae: 0.094935 wgan_g: -24.430271 wgan_d: -16.968010 wgan_gp: 0.261521 g: 0.145988 d: -14.352801 speed: 1.43 batches/s 
2021-10-29 13:58:45,558 INFO Iter: [62400/500000] l1: 0.056318 ae: 0.120394 wgan_g: -30.485706 wgan_d: -17.869446 wgan_gp: 0.265575 g: 0.181569 d: -15.213698 speed: 1.43 batches/s 
2021-10-29 13:59:56,211 INFO Iter: [62500/500000] l1: 0.043582 ae: 0.120289 wgan_g: -50.239845 wgan_d: -21.783865 wgan_gp: 0.335752 g: 0.146406 d: -18.426348 speed: 1.42 batches/s 
2021-10-29 14:01:06,602 INFO Iter: [62600/500000] l1: 0.050443 ae: 0.126626 wgan_g: -98.021851 wgan_d: -27.869690 wgan_gp: 0.554573 g: 0.114461 d: -22.323959 speed: 1.42 batches/s 
2021-10-29 14:02:16,670 INFO Iter: [62700/500000] l1: 0.049332 ae: 0.113760 wgan_g: -44.211426 wgan_d: -18.924295 wgan_gp: 0.501647 g: 0.151499 d: -13.907825 speed: 1.43 batches/s 
2021-10-29 14:03:26,934 INFO Iter: [62800/500000] l1: 0.050121 ae: 0.124471 wgan_g: -23.189407 wgan_d: -20.711706 wgan_gp: 0.284091 g: 0.186320 d: -17.870796 speed: 1.42 batches/s 
2021-10-29 14:04:37,258 INFO Iter: [62900/500000] l1: 0.064802 ae: 0.116615 wgan_g: -28.668388 wgan_d: -20.454124 wgan_gp: 0.293647 g: 0.189032 d: -17.517656 speed: 1.42 batches/s 
2021-10-29 14:05:47,263 INFO Iter: [63000/500000] l1: 0.049996 ae: 0.118156 wgan_g: -46.858921 wgan_d: -20.855145 wgan_gp: 0.381717 g: 0.154924 d: -17.037971 speed: 1.43 batches/s 
2021-10-29 14:06:57,555 INFO Iter: [63100/500000] l1: 0.052454 ae: 0.122820 wgan_g: 10.410051 wgan_d: -20.227055 wgan_gp: 0.300908 g: 0.220739 d: -17.217978 speed: 1.42 batches/s 
2021-10-29 14:08:07,379 INFO Iter: [63200/500000] l1: 0.050211 ae: 0.127912 wgan_g: 3.398526 wgan_d: -22.851322 wgan_gp: 0.297010 g: 0.217146 d: -19.881222 speed: 1.43 batches/s 
2021-10-29 14:09:17,463 INFO Iter: [63300/500000] l1: 0.059560 ae: 0.128128 wgan_g: -49.270126 wgan_d: -22.488842 wgan_gp: 0.287827 g: 0.175957 d: -19.610571 speed: 1.43 batches/s 
2021-10-29 14:10:27,679 INFO Iter: [63400/500000] l1: 0.045736 ae: 0.106649 wgan_g: -39.207535 wgan_d: -15.923408 wgan_gp: 0.212052 g: 0.143655 d: -13.802889 speed: 1.42 batches/s 
2021-10-29 14:11:37,671 INFO Iter: [63500/500000] l1: 0.050355 ae: 0.131056 wgan_g: -3.275833 wgan_d: -20.357304 wgan_gp: 0.244689 g: 0.214418 d: -17.910418 speed: 1.43 batches/s 
2021-10-29 14:12:47,539 INFO Iter: [63600/500000] l1: 0.050532 ae: 0.111337 wgan_g: -65.856224 wgan_d: -20.098583 wgan_gp: 0.493412 g: 0.128387 d: -15.164463 speed: 1.43 batches/s 
2021-10-29 14:13:58,149 INFO Iter: [63700/500000] l1: 0.047255 ae: 0.126721 wgan_g: 0.476955 wgan_d: -21.333771 wgan_gp: 0.338453 g: 0.209247 d: -17.949242 speed: 1.42 batches/s 
2021-10-29 14:15:09,084 INFO Iter: [63800/500000] l1: 0.048677 ae: 0.140650 wgan_g: -52.608604 wgan_d: -24.136225 wgan_gp: 0.484545 g: 0.174583 d: -19.290775 speed: 1.41 batches/s 
2021-10-29 14:16:19,739 INFO Iter: [63900/500000] l1: 0.052768 ae: 0.116740 wgan_g: -49.136524 wgan_d: -24.782682 wgan_gp: 0.360981 g: 0.154273 d: -21.172873 speed: 1.42 batches/s 
2021-10-29 14:17:30,033 INFO Iter: [64000/500000] l1: 0.045944 ae: 0.119534 wgan_g: -45.004555 wgan_d: -23.361525 wgan_gp: 0.413372 g: 0.153569 d: -19.227806 speed: 1.42 batches/s 
2021-10-29 14:18:40,398 INFO Iter: [64100/500000] l1: 0.051176 ae: 0.115027 wgan_g: -24.368559 wgan_d: -16.395584 wgan_gp: 0.311302 g: 0.175075 d: -13.282563 speed: 1.42 batches/s 
2021-10-29 14:19:50,685 INFO Iter: [64200/500000] l1: 0.049893 ae: 0.126598 wgan_g: -61.260025 wgan_d: -18.018137 wgan_gp: 0.331752 g: 0.150529 d: -14.700620 speed: 1.42 batches/s 
2021-10-29 14:20:44,907 INFO Iter: [64300/500000] l1: nan ae: nan wgan_g: 44.091995 wgan_d: -95.638626 wgan_gp: 0.574639 g: nan d: -89.892235 speed: 1.84 batches/s 
2021-10-29 14:21:27,894 INFO Iter: [64400/500000] l1: nan ae: nan wgan_g: 45.492535 wgan_d: -95.048676 wgan_gp: 0.518899 g: nan d: -89.859680 speed: 2.33 batches/s 
2021-10-29 14:22:10,554 INFO Iter: [64500/500000] l1: nan ae: nan wgan_g: 61.463631 wgan_d: -103.786026 wgan_gp: 0.467638 g: nan d: -99.109650 speed: 2.34 batches/s 
2021-10-29 14:22:52,717 INFO Iter: [64600/500000] l1: nan ae: nan wgan_g: 55.927788 wgan_d: -111.285095 wgan_gp: 0.633645 g: nan d: -104.948647 speed: 2.37 batches/s 
2021-10-29 14:23:35,164 INFO Iter: [64700/500000] l1: nan ae: nan wgan_g: 45.299709 wgan_d: -94.624245 wgan_gp: 0.551926 g: nan d: -89.104988 speed: 2.36 batches/s 
2021-10-29 14:24:18,273 INFO Iter: [64800/500000] l1: nan ae: nan wgan_g: 35.195866 wgan_d: -89.249794 wgan_gp: 0.404007 g: nan d: -85.209724 speed: 2.32 batches/s 
2021-10-29 14:25:01,817 INFO Iter: [64900/500000] l1: nan ae: nan wgan_g: 29.728230 wgan_d: -84.160385 wgan_gp: 0.628358 g: nan d: -77.876808 speed: 2.30 batches/s 
2021-10-29 14:25:45,233 INFO Iter: [65000/500000] l1: nan ae: nan wgan_g: 53.659241 wgan_d: -90.070511 wgan_gp: 0.515834 g: nan d: -84.912170 speed: 2.30 batches/s 
2021-10-29 14:26:28,615 INFO Iter: [65100/500000] l1: nan ae: nan wgan_g: 40.568371 wgan_d: -95.536819 wgan_gp: 0.462983 g: nan d: -90.906990 speed: 2.31 batches/s 
2021-10-29 15:15:20,470 INFO Arguments: Namespace(config='/home/aistudio/generative-inpainting/configs/config.yaml', seed=None)
2021-10-29 15:15:20,470 INFO Random seed: 8098
2021-10-29 15:15:20,471 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-29 15:15:20,471 INFO Training on dataset: imagenet
2021-10-29 15:15:31,637 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-29 15:15:31,638 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-29 15:15:31,638 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 67000
2021-10-29 15:15:31,846 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 67000
2021-10-29 15:15:34,434 INFO Iter: [67000/500000] l1: 0.052633 ae: 0.135204 wgan_g: -23.213272 wgan_d: -9.866295 wgan_gp: 0.194323 g: 0.202191 d: -7.923061 speed: 49.22 batches/s 
2021-10-29 15:16:31,956 INFO Arguments: Namespace(config='/home/aistudio/generative-inpainting/configs/config.yaml', seed=None)
2021-10-29 15:16:31,956 INFO Random seed: 7471
2021-10-29 15:16:31,957 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-29 15:16:31,957 INFO Training on dataset: imagenet
2021-10-29 15:16:42,676 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-29 15:16:42,677 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-29 15:16:42,677 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 67000
2021-10-29 15:16:42,878 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 67000
2021-10-29 15:16:44,735 INFO Iter: [67000/500000] l1: nan ae: nan wgan_g: -81.064323 wgan_d: 24.840111 wgan_gp: 0.124355 g: nan d: 26.083658 speed: 74.97 batches/s 
2021-10-30 02:16:14,427 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-30 02:16:14,427 INFO Random seed: 2472
2021-10-30 02:16:14,427 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-30 02:16:14,427 INFO Training on dataset: imagenet
2021-10-30 02:16:25,085 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-30 02:16:25,086 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-30 02:16:25,086 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
2021-10-30 02:17:14,143 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-30 02:17:14,143 INFO Random seed: 6862
2021-10-30 02:17:14,143 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-30 02:17:14,143 INFO Training on dataset: imagenet
2021-10-30 02:17:25,044 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-30 02:17:25,045 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-30 02:17:25,045 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
2021-10-30 02:19:41,172 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-30 02:19:41,172 INFO Random seed: 329
2021-10-30 02:19:41,172 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-30 02:19:41,172 INFO Training on dataset: imagenet
2021-10-30 02:19:52,459 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-30 02:19:52,459 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-30 02:19:52,459 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 103000
2021-10-30 02:19:52,670 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 103000
2021-10-30 02:19:55,365 INFO Iter: [103000/500000] l1: 0.049960 ae: 0.111509 wgan_g: -59.849319 wgan_d: -14.068477 wgan_gp: 0.371737 g: 0.133913 d: -10.351105 speed: 47.02 batches/s 
2021-10-30 02:21:26,307 INFO Iter: [103100/500000] l1: 0.043445 ae: 0.101647 wgan_g: -29.678429 wgan_d: -19.366440 wgan_gp: 0.204470 g: 0.144432 d: -17.321743 speed: 1.10 batches/s 
2021-10-30 02:22:56,699 INFO Iter: [103200/500000] l1: 0.056314 ae: 0.123987 wgan_g: -39.598022 wgan_d: -26.395985 wgan_gp: 0.499710 g: 0.176763 d: -21.398882 speed: 1.11 batches/s 
2021-10-30 02:24:27,007 INFO Iter: [103300/500000] l1: 0.062346 ae: 0.123548 wgan_g: -22.605413 wgan_d: -22.901745 wgan_gp: 0.278339 g: 0.200468 d: -20.118353 speed: 1.11 batches/s 
2021-10-30 02:25:59,174 INFO Iter: [103400/500000] l1: 0.054036 ae: 0.117308 wgan_g: -23.772755 wgan_d: -17.788143 wgan_gp: 0.297018 g: 0.181840 d: -14.817960 speed: 1.08 batches/s 
2021-10-30 02:27:32,167 INFO Iter: [103500/500000] l1: 0.047371 ae: 0.103000 wgan_g: -3.946342 wgan_d: -18.001156 wgan_gp: 0.243068 g: 0.176499 d: -15.570473 speed: 1.08 batches/s 
2021-10-30 02:29:03,824 INFO Iter: [103600/500000] l1: 0.062544 ae: 0.105689 wgan_g: -10.336101 wgan_d: -21.141600 wgan_gp: 0.254761 g: 0.191544 d: -18.593987 speed: 1.09 batches/s 
2021-10-30 02:30:38,039 INFO Iter: [103700/500000] l1: 0.050152 ae: 0.111139 wgan_g: -52.832855 wgan_d: -20.536678 wgan_gp: 0.268916 g: 0.140716 d: -17.847519 speed: 1.06 batches/s 
2021-10-30 02:32:09,854 INFO Iter: [103800/500000] l1: 0.055275 ae: 0.103021 wgan_g: -6.202063 wgan_d: -20.017227 wgan_gp: 0.178227 g: 0.183753 d: -18.234959 speed: 1.09 batches/s 
2021-10-30 02:33:41,200 INFO Iter: [103900/500000] l1: 0.054084 ae: 0.103126 wgan_g: -54.235168 wgan_d: -24.879858 wgan_gp: 0.344727 g: 0.134416 d: -21.432592 speed: 1.09 batches/s 
2021-10-30 02:35:11,955 INFO Iter: [104000/500000] l1: 0.050857 ae: 0.105349 wgan_g: 3.877241 wgan_d: -17.355865 wgan_gp: 0.275915 g: 0.191325 d: -14.596718 speed: 1.10 batches/s 
2021-10-30 02:36:42,558 INFO Iter: [104100/500000] l1: 0.059559 ae: 0.101273 wgan_g: -37.606201 wgan_d: -20.587658 wgan_gp: 0.187147 g: 0.155392 d: -18.716183 speed: 1.10 batches/s 
2021-10-30 02:38:13,074 INFO Iter: [104200/500000] l1: 0.045638 ae: 0.104760 wgan_g: -12.243404 wgan_d: -19.237625 wgan_gp: 0.228732 g: 0.168235 d: -16.950306 speed: 1.10 batches/s 
2021-10-30 02:39:43,487 INFO Iter: [104300/500000] l1: 0.058160 ae: 0.114368 wgan_g: -38.427467 wgan_d: -24.242973 wgan_gp: 0.342362 g: 0.168606 d: -20.819355 speed: 1.11 batches/s 
2021-10-30 02:41:14,009 INFO Iter: [104400/500000] l1: 0.055024 ae: 0.112773 wgan_g: -50.999466 wgan_d: -20.949694 wgan_gp: 0.331740 g: 0.150356 d: -17.632298 speed: 1.10 batches/s 
2021-10-30 02:42:44,689 INFO Iter: [104500/500000] l1: 0.047628 ae: 0.099696 wgan_g: -58.330009 wgan_d: -16.969807 wgan_gp: 0.359228 g: 0.118458 d: -13.377525 speed: 1.10 batches/s 
2021-10-30 02:44:15,469 INFO Iter: [104600/500000] l1: 0.049653 ae: 0.096905 wgan_g: 8.362425 wgan_d: -17.914316 wgan_gp: 0.241702 g: 0.184233 d: -15.497299 speed: 1.10 batches/s 
2021-10-30 02:45:46,417 INFO Iter: [104700/500000] l1: 0.056176 ae: 0.110063 wgan_g: -27.115480 wgan_d: -20.570358 wgan_gp: 0.286057 g: 0.172371 d: -17.709789 speed: 1.10 batches/s 
2021-10-30 02:47:17,191 INFO Iter: [104800/500000] l1: 0.050024 ae: 0.111089 wgan_g: -13.623529 wgan_d: -17.085720 wgan_gp: 0.120600 g: 0.179711 d: -15.879720 speed: 1.10 batches/s 
2021-10-30 02:48:48,032 INFO Iter: [104900/500000] l1: 0.057213 ae: 0.113936 wgan_g: -52.616146 wgan_d: -19.804750 wgan_gp: 0.278621 g: 0.152762 d: -17.018538 speed: 1.10 batches/s 
2021-10-30 02:50:18,479 INFO Iter: [105000/500000] l1: 0.040968 ae: 0.094631 wgan_g: -39.216808 wgan_d: -19.503284 wgan_gp: 0.271979 g: 0.123503 d: -16.783493 speed: 1.11 batches/s 
2021-10-30 02:51:49,203 INFO Iter: [105100/500000] l1: 0.064367 ae: 0.116606 wgan_g: -14.243842 wgan_d: -20.754715 wgan_gp: 0.253613 g: 0.202924 d: -18.218590 speed: 1.10 batches/s 
2021-10-30 02:53:04,965 INFO Iter: [105200/500000] l1: nan ae: nan wgan_g: 18.562002 wgan_d: -57.948036 wgan_gp: 0.457633 g: nan d: -53.371704 speed: 1.32 batches/s 
2021-10-30 08:04:08,911 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-30 08:04:08,911 INFO Random seed: 1241
2021-10-30 08:04:08,911 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-30 08:04:08,911 INFO Training on dataset: imagenet
2021-10-30 08:04:19,666 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-30 08:04:19,667 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-30 08:04:19,667 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 105000
2021-10-30 08:04:19,872 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 105000
2021-10-30 08:04:22,634 INFO Iter: [105000/500000] l1: 0.049586 ae: 0.111010 wgan_g: -48.810036 wgan_d: -15.147651 wgan_gp: 0.476842 g: 0.143906 d: -10.379232 speed: 44.74 batches/s 
2021-10-30 08:05:53,574 INFO Iter: [105100/500000] l1: 0.044038 ae: 0.102934 wgan_g: -37.420784 wgan_d: -20.682995 wgan_gp: 0.218031 g: 0.138946 d: -18.502687 speed: 1.10 batches/s 
2021-10-30 08:07:23,956 INFO Iter: [105200/500000] l1: 0.054828 ae: 0.114656 wgan_g: -48.752251 wgan_d: -25.450325 wgan_gp: 0.437901 g: 0.154629 d: -21.071314 speed: 1.11 batches/s 
2021-10-30 08:08:54,351 INFO Iter: [105300/500000] l1: 0.061715 ae: 0.126422 wgan_g: -40.394379 wgan_d: -23.831367 wgan_gp: 0.378231 g: 0.185370 d: -20.049063 speed: 1.11 batches/s 
2021-10-30 08:10:24,634 INFO Iter: [105400/500000] l1: 0.052936 ae: 0.115888 wgan_g: -34.492546 wgan_d: -18.247511 wgan_gp: 0.326861 g: 0.168096 d: -14.978900 speed: 1.11 batches/s 
2021-10-30 08:11:54,764 INFO Iter: [105500/500000] l1: 0.047388 ae: 0.105268 wgan_g: -17.147612 wgan_d: -17.862995 wgan_gp: 0.208317 g: 0.166040 d: -15.779821 speed: 1.11 batches/s 
2021-10-30 08:13:24,938 INFO Iter: [105600/500000] l1: 0.061989 ae: 0.105727 wgan_g: -10.323874 wgan_d: -20.492271 wgan_gp: 0.269334 g: 0.190935 d: -17.798933 speed: 1.11 batches/s 
2021-10-30 08:14:55,451 INFO Iter: [105700/500000] l1: 0.046975 ae: 0.107000 wgan_g: -65.018600 wgan_d: -26.631950 wgan_gp: 0.426735 g: 0.119752 d: -22.364599 speed: 1.10 batches/s 
2021-10-30 08:16:25,913 INFO Iter: [105800/500000] l1: 0.054702 ae: 0.098043 wgan_g: 7.364015 wgan_d: -18.705791 wgan_gp: 0.198762 g: 0.190657 d: -16.718176 speed: 1.11 batches/s 
2021-10-30 08:17:56,271 INFO Iter: [105900/500000] l1: 0.055498 ae: 0.107871 wgan_g: -21.765491 wgan_d: -17.818592 wgan_gp: 0.232457 g: 0.174278 d: -15.494027 speed: 1.11 batches/s 
2021-10-30 08:19:26,850 INFO Iter: [106000/500000] l1: 0.050626 ae: 0.104295 wgan_g: -10.579557 wgan_d: -17.071966 wgan_gp: 0.223417 g: 0.175325 d: -14.837799 speed: 1.10 batches/s 
2021-10-30 08:20:58,127 INFO Iter: [106100/500000] l1: 0.060079 ae: 0.103435 wgan_g: -39.807892 wgan_d: -19.968481 wgan_gp: 0.182143 g: 0.156408 d: -18.147053 speed: 1.10 batches/s 
2021-10-30 08:22:30,603 INFO Iter: [106200/500000] l1: 0.044620 ae: 0.104471 wgan_g: -26.022285 wgan_d: -17.423492 wgan_gp: 0.257658 g: 0.152887 d: -14.846911 speed: 1.08 batches/s 
2021-10-30 08:24:02,108 INFO Iter: [106300/500000] l1: 0.057372 ae: 0.113304 wgan_g: -25.243435 wgan_d: -23.386482 wgan_gp: 0.283801 g: 0.179568 d: -20.548473 speed: 1.09 batches/s 
2021-10-30 08:25:32,606 INFO Iter: [106400/500000] l1: 0.055989 ae: 0.113095 wgan_g: -54.370731 wgan_d: -20.683809 wgan_gp: 0.328767 g: 0.148530 d: -17.396145 speed: 1.11 batches/s 
2021-10-30 08:27:03,355 INFO Iter: [106500/500000] l1: 0.047558 ae: 0.098863 wgan_g: -46.182819 wgan_d: -17.008604 wgan_gp: 0.368848 g: 0.129522 d: -13.320120 speed: 1.10 batches/s 
2021-10-30 08:28:34,320 INFO Iter: [106600/500000] l1: 0.049227 ae: 0.094525 wgan_g: -8.325975 wgan_d: -18.015144 wgan_gp: 0.223183 g: 0.164176 d: -15.783317 speed: 1.10 batches/s 
2021-10-30 08:30:04,979 INFO Iter: [106700/500000] l1: 0.056450 ae: 0.115062 wgan_g: -10.612739 wgan_d: -20.388439 wgan_gp: 0.271271 g: 0.195203 d: -17.675734 speed: 1.10 batches/s 
2021-10-30 08:31:35,550 INFO Iter: [106800/500000] l1: 0.048883 ae: 0.106362 wgan_g: -20.373249 wgan_d: -16.951473 wgan_gp: 0.144227 g: 0.165922 d: -15.509200 speed: 1.10 batches/s 
2021-10-30 08:33:05,987 INFO Iter: [106900/500000] l1: 0.056584 ae: 0.110978 wgan_g: -47.471924 wgan_d: -20.670353 wgan_gp: 0.291612 g: 0.153603 d: -17.754230 speed: 1.11 batches/s 
2021-10-30 08:34:36,967 INFO Iter: [107000/500000] l1: 0.042022 ae: 0.091628 wgan_g: -14.682291 wgan_d: -15.114015 wgan_gp: 0.220963 g: 0.145698 d: -12.904385 speed: 1.10 batches/s 
2021-10-30 08:36:08,071 INFO Iter: [107100/500000] l1: 0.064694 ae: 0.116253 wgan_g: -0.336262 wgan_d: -19.976414 wgan_gp: 0.235266 g: 0.216801 d: -17.623753 speed: 1.10 batches/s 
2021-10-30 08:37:24,345 INFO Iter: [107200/500000] l1: nan ae: nan wgan_g: -17.934608 wgan_d: -89.220146 wgan_gp: 1.000016 g: nan d: -79.219986 speed: 1.31 batches/s 
2021-10-30 09:05:22,839 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-30 09:05:22,839 INFO Random seed: 3482
2021-10-30 09:05:22,839 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-30 09:05:22,839 INFO Training on dataset: imagenet
2021-10-30 09:05:33,786 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-30 09:05:33,786 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-30 09:05:33,786 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 107000
2021-10-30 09:05:33,990 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 107000
2021-10-30 09:05:36,546 INFO Iter: [107000/500000] l1: 0.049203 ae: 0.107492 wgan_g: -11.981467 wgan_d: -14.916527 wgan_gp: 0.226515 g: 0.176052 d: -12.651379 speed: 49.54 batches/s 
2021-10-30 09:07:08,173 INFO Iter: [107100/500000] l1: 0.043744 ae: 0.104143 wgan_g: -23.490650 wgan_d: -19.151760 wgan_gp: 0.211374 g: 0.153973 d: -17.038019 speed: 1.09 batches/s 
2021-10-30 09:08:39,305 INFO Iter: [107200/500000] l1: 0.055620 ae: 0.117450 wgan_g: -43.939159 wgan_d: -24.185501 wgan_gp: 0.409254 g: 0.163744 d: -20.092962 speed: 1.10 batches/s 
2021-10-30 09:10:10,578 INFO Iter: [107300/500000] l1: 0.061512 ae: 0.124144 wgan_g: -14.398134 wgan_d: -24.700546 wgan_gp: 0.312550 g: 0.208388 d: -21.575043 speed: 1.10 batches/s 
2021-10-30 09:11:42,567 INFO Iter: [107400/500000] l1: 0.053135 ae: 0.116736 wgan_g: -48.546333 wgan_d: -17.211235 wgan_gp: 0.271392 g: 0.155298 d: -14.497318 speed: 1.09 batches/s 
2021-10-30 09:13:14,533 INFO Iter: [107500/500000] l1: 0.047928 ae: 0.103059 wgan_g: 2.968930 wgan_d: -18.446672 wgan_gp: 0.196745 g: 0.184153 d: -16.479227 speed: 1.09 batches/s 
2021-10-30 09:14:46,487 INFO Iter: [107600/500000] l1: 0.062562 ae: 0.104523 wgan_g: -19.555325 wgan_d: -20.828377 wgan_gp: 0.282548 g: 0.180947 d: -18.002895 speed: 1.09 batches/s 
2021-10-30 09:16:17,300 INFO Iter: [107700/500000] l1: 0.047658 ae: 0.110166 wgan_g: -42.307236 wgan_d: -23.811077 wgan_gp: 0.345648 g: 0.147081 d: -20.354599 speed: 1.10 batches/s 
2021-10-30 09:17:48,227 INFO Iter: [107800/500000] l1: 0.054092 ae: 0.102077 wgan_g: -27.612925 wgan_d: -18.572468 wgan_gp: 0.231830 g: 0.159790 d: -16.254166 speed: 1.10 batches/s 
2021-10-30 09:19:19,081 INFO Iter: [107900/500000] l1: 0.054879 ae: 0.104325 wgan_g: -33.435703 wgan_d: -17.701572 wgan_gp: 0.194784 g: 0.157610 d: -15.753731 speed: 1.10 batches/s 
2021-10-30 09:20:49,789 INFO Iter: [108000/500000] l1: 0.050852 ae: 0.104539 wgan_g: -29.313915 wgan_d: -17.495884 wgan_gp: 0.255064 g: 0.157156 d: -14.945241 speed: 1.10 batches/s 
2021-10-30 09:22:21,300 INFO Iter: [108100/500000] l1: 0.059497 ae: 0.099720 wgan_g: -13.498482 wgan_d: -19.095564 wgan_gp: 0.223509 g: 0.177562 d: -16.860470 speed: 1.09 batches/s 
2021-10-30 09:23:52,313 INFO Iter: [108200/500000] l1: 0.045277 ae: 0.102662 wgan_g: -4.369516 wgan_d: -17.010084 wgan_gp: 0.185109 g: 0.173157 d: -15.158996 speed: 1.10 batches/s 
2021-10-30 09:25:22,683 INFO Iter: [108300/500000] l1: 0.057054 ae: 0.109913 wgan_g: -28.778496 wgan_d: -22.914646 wgan_gp: 0.338329 g: 0.171582 d: -19.531353 speed: 1.11 batches/s 
2021-10-30 09:26:52,842 INFO Iter: [108400/500000] l1: 0.055159 ae: 0.110953 wgan_g: -44.140411 wgan_d: -19.856056 wgan_gp: 0.337545 g: 0.155193 d: -16.480610 speed: 1.11 batches/s 
2021-10-30 09:28:05,156 INFO Iter: [108500/500000] l1: nan ae: nan wgan_g: -55.784721 wgan_d: -55.209549 wgan_gp: 0.602568 g: nan d: -49.183872 speed: 1.38 batches/s 
2021-10-30 09:29:20,398 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-30 09:29:20,399 INFO Random seed: 4131
2021-10-30 09:29:20,399 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-30 09:29:20,399 INFO Training on dataset: imagenet
2021-10-30 09:29:31,293 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-30 09:29:31,294 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-30 09:29:31,294 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
2021-10-30 09:34:04,338 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-30 09:34:04,338 INFO Random seed: 2807
2021-10-30 09:34:04,338 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-30 09:34:04,338 INFO Training on dataset: imagenet
2021-10-30 09:34:15,448 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-30 09:34:15,448 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-30 09:34:15,448 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 108000
2021-10-30 09:34:15,659 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 108000
2021-10-30 09:34:18,403 INFO Iter: [108000/500000] l1: 0.050247 ae: 0.115462 wgan_g: -37.692814 wgan_d: -15.672127 wgan_gp: 0.330147 g: 0.161158 d: -12.370655 speed: 45.55 batches/s 
2021-10-30 09:35:49,858 INFO Iter: [108100/500000] l1: 0.043387 ae: 0.104499 wgan_g: -52.424080 wgan_d: -20.145033 wgan_gp: 0.274908 g: 0.125039 d: -17.395954 speed: 1.10 batches/s 
2021-10-30 09:37:20,947 INFO Iter: [108200/500000] l1: 0.055751 ae: 0.114213 wgan_g: -23.089373 wgan_d: -21.677887 wgan_gp: 0.403111 g: 0.180867 d: -17.646782 speed: 1.10 batches/s 
2021-10-30 09:38:51,218 INFO Iter: [108300/500000] l1: 0.060813 ae: 0.125837 wgan_g: -33.223030 wgan_d: -24.387440 wgan_gp: 0.327521 g: 0.190756 d: -21.112230 speed: 1.11 batches/s 
2021-10-30 09:40:22,152 INFO Iter: [108400/500000] l1: 0.053445 ae: 0.113334 wgan_g: -36.358521 wgan_d: -18.225956 wgan_gp: 0.301803 g: 0.163776 d: -15.207923 speed: 1.10 batches/s 
2021-10-30 09:41:54,901 INFO Iter: [108500/500000] l1: 0.047195 ae: 0.103196 wgan_g: -7.500549 wgan_d: -17.778864 wgan_gp: 0.189495 g: 0.172969 d: -15.883915 speed: 1.08 batches/s 
2021-10-30 09:43:25,440 INFO Iter: [108600/500000] l1: 0.061807 ae: 0.104901 wgan_g: -7.348911 wgan_d: -19.643684 wgan_gp: 0.294343 g: 0.192701 d: -16.700253 speed: 1.10 batches/s 
2021-10-30 09:44:56,005 INFO Iter: [108700/500000] l1: 0.047058 ae: 0.106591 wgan_g: -49.050571 wgan_d: -20.811598 wgan_gp: 0.360677 g: 0.135328 d: -17.204830 speed: 1.10 batches/s 
2021-10-30 09:46:26,863 INFO Iter: [108800/500000] l1: 0.054647 ae: 0.095936 wgan_g: -25.663702 wgan_d: -17.310478 wgan_gp: 0.217905 g: 0.155037 d: -15.131430 speed: 1.10 batches/s 
2021-10-30 09:47:57,713 INFO Iter: [108900/500000] l1: 0.053745 ae: 0.097910 wgan_g: -46.881802 wgan_d: -19.593231 wgan_gp: 0.273288 g: 0.135105 d: -16.860355 speed: 1.10 batches/s 
2021-10-30 09:49:29,678 INFO Iter: [109000/500000] l1: 0.050150 ae: 0.101975 wgan_g: -1.038238 wgan_d: -17.386127 wgan_gp: 0.255127 g: 0.181513 d: -14.834859 speed: 1.09 batches/s 
2021-10-30 09:51:01,030 INFO Iter: [109100/500000] l1: 0.059343 ae: 0.098167 wgan_g: -17.343735 wgan_d: -20.060249 wgan_gp: 0.203221 g: 0.171668 d: -18.028040 speed: 1.09 batches/s 
2021-10-30 09:52:31,920 INFO Iter: [109200/500000] l1: 0.044643 ae: 0.101808 wgan_g: -12.298638 wgan_d: -18.509092 wgan_gp: 0.237779 g: 0.163442 d: -16.131302 speed: 1.10 batches/s 
2021-10-30 09:54:02,821 INFO Iter: [109300/500000] l1: 0.056556 ae: 0.113323 wgan_g: -40.016197 wgan_d: -24.538635 wgan_gp: 0.405786 g: 0.163839 d: -20.480774 speed: 1.10 batches/s 
2021-10-30 09:55:33,825 INFO Iter: [109400/500000] l1: 0.055663 ae: 0.109533 wgan_g: -28.392435 wgan_d: -19.428362 wgan_gp: 0.254691 g: 0.169843 d: -16.881454 speed: 1.10 batches/s 
2021-10-30 09:57:04,810 INFO Iter: [109500/500000] l1: 0.048417 ae: 0.099473 wgan_g: -17.391024 wgan_d: -15.197495 wgan_gp: 0.200944 g: 0.160078 d: -13.188054 speed: 1.10 batches/s 
2021-10-30 09:58:37,254 INFO Iter: [109600/500000] l1: 0.049743 ae: 0.093211 wgan_g: 14.848538 wgan_d: -18.963364 wgan_gp: 0.205957 g: 0.186393 d: -16.903791 speed: 1.08 batches/s 
2021-10-30 10:00:10,921 INFO Iter: [109700/500000] l1: 0.055604 ae: 0.104845 wgan_g: -27.835196 wgan_d: -20.089504 wgan_gp: 0.290379 g: 0.164704 d: -17.185719 speed: 1.07 batches/s 
2021-10-30 10:01:41,047 INFO Iter: [109800/500000] l1: 0.048954 ae: 0.104325 wgan_g: -19.918552 wgan_d: -18.903786 wgan_gp: 0.159467 g: 0.164017 d: -17.309116 speed: 1.11 batches/s 
2021-10-30 10:03:11,323 INFO Iter: [109900/500000] l1: 0.056644 ae: 0.108781 wgan_g: -52.429569 wgan_d: -19.294582 wgan_gp: 0.311250 g: 0.146080 d: -16.182077 speed: 1.11 batches/s 
2021-10-30 10:04:41,574 INFO Iter: [110000/500000] l1: 0.041478 ae: 0.092621 wgan_g: -26.432220 wgan_d: -17.825230 wgan_gp: 0.268762 g: 0.134487 d: -15.137614 speed: 1.11 batches/s 
2021-10-30 10:06:12,261 INFO Iter: [110100/500000] l1: 0.064376 ae: 0.112579 wgan_g: -17.111780 wgan_d: -19.188894 wgan_gp: 0.195610 g: 0.195234 d: -17.232792 speed: 1.10 batches/s 
2021-10-30 10:07:42,547 INFO Iter: [110200/500000] l1: 0.050539 ae: 0.098331 wgan_g: 12.022397 wgan_d: -22.696823 wgan_gp: 0.245806 g: 0.190666 d: -20.238766 speed: 1.11 batches/s 
2021-10-30 10:09:13,076 INFO Iter: [110300/500000] l1: 0.052455 ae: 0.108375 wgan_g: -41.887154 wgan_d: -21.402565 wgan_gp: 0.333426 g: 0.151108 d: -18.068302 speed: 1.10 batches/s 
2021-10-30 10:10:43,986 INFO Iter: [110400/500000] l1: 0.054225 ae: 0.107353 wgan_g: -43.557220 wgan_d: -15.741785 wgan_gp: 0.320275 g: 0.150337 d: -12.539040 speed: 1.10 batches/s 
2021-10-30 10:12:14,248 INFO Iter: [110500/500000] l1: 0.057914 ae: 0.092609 wgan_g: -40.696117 wgan_d: -22.402176 wgan_gp: 0.319804 g: 0.139931 d: -19.204134 speed: 1.11 batches/s 
2021-10-30 10:13:44,643 INFO Iter: [110600/500000] l1: 0.046285 ae: 0.101137 wgan_g: -13.444979 wgan_d: -15.452841 wgan_gp: 0.182508 g: 0.163461 d: -13.627766 speed: 1.11 batches/s 
2021-10-30 10:15:15,079 INFO Iter: [110700/500000] l1: 0.053067 ae: 0.114300 wgan_g: -26.160984 wgan_d: -15.777906 wgan_gp: 0.246436 g: 0.174679 d: -13.313551 speed: 1.11 batches/s 
2021-10-30 10:16:45,622 INFO Iter: [110800/500000] l1: 0.049953 ae: 0.110405 wgan_g: -29.592087 wgan_d: -19.262901 wgan_gp: 0.254882 g: 0.162837 d: -16.714081 speed: 1.10 batches/s 
2021-10-30 10:18:15,733 INFO Iter: [110900/500000] l1: 0.048446 ae: 0.092302 wgan_g: -37.105865 wgan_d: -17.468271 wgan_gp: 0.282177 g: 0.131791 d: -14.646502 speed: 1.11 batches/s 
2021-10-30 10:19:22,860 INFO Iter: [111000/500000] l1: nan ae: nan wgan_g: -11.508375 wgan_d: -52.164276 wgan_gp: 0.265169 g: nan d: -49.512589 speed: 1.49 batches/s 
2021-10-30 10:19:35,525 ERROR DataLoader reader thread raised an exception!
2021-10-30 10:19:57,044 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-30 10:19:57,044 INFO Random seed: 6789
2021-10-30 10:19:57,044 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-30 10:19:57,044 INFO Training on dataset: imagenet
2021-10-30 10:20:07,875 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-30 10:20:07,875 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-30 10:20:07,875 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 110000
2021-10-30 10:20:08,078 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 110000
2021-10-30 10:20:10,636 INFO Iter: [110000/500000] l1: 0.050187 ae: 0.118359 wgan_g: -30.011730 wgan_d: -15.526693 wgan_gp: 0.365604 g: 0.172244 d: -11.870649 speed: 49.72 batches/s 
2021-10-30 10:21:08,566 INFO Iter: [110100/500000] l1: nan ae: nan wgan_g: -4.003291 wgan_d: -73.759003 wgan_gp: 0.375861 g: nan d: -70.000397 speed: 1.73 batches/s 
2021-10-30 10:22:03,342 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-30 10:22:03,342 INFO Random seed: 273
2021-10-30 10:22:03,343 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-30 10:22:03,343 INFO Training on dataset: imagenet
2021-10-30 10:22:14,296 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-30 10:22:14,296 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-30 10:22:14,296 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 110000
2021-10-30 10:22:14,500 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 110000
2021-10-30 10:22:16,385 INFO Iter: [110000/500000] l1: nan ae: nan wgan_g: -30.955429 wgan_d: -20.176481 wgan_gp: 0.262922 g: nan d: -17.547262 speed: 74.66 batches/s 
2021-10-30 10:22:44,054 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-30 10:22:44,054 INFO Random seed: 7790
2021-10-30 10:22:44,054 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-30 10:22:44,054 INFO Training on dataset: imagenet
2021-10-30 10:22:54,964 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-30 10:22:54,965 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-30 10:22:54,965 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 109000
2021-10-30 10:22:55,116 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 109000
2021-10-30 10:22:57,574 INFO Iter: [109000/500000] l1: 0.049208 ae: 0.107167 wgan_g: -1.779260 wgan_d: -14.238165 wgan_gp: 0.276298 g: 0.185870 d: -11.475182 speed: 55.72 batches/s 
2021-10-30 10:24:28,553 INFO Iter: [109100/500000] l1: 0.044329 ae: 0.104450 wgan_g: -26.863455 wgan_d: -18.763901 wgan_gp: 0.170150 g: 0.151672 d: -17.062397 speed: 1.10 batches/s 
2021-10-30 10:25:59,027 INFO Iter: [109200/500000] l1: 0.055402 ae: 0.116242 wgan_g: -30.764654 wgan_d: -23.084724 wgan_gp: 0.442631 g: 0.175208 d: -18.658409 speed: 1.11 batches/s 
2021-10-30 10:27:29,491 INFO Iter: [109300/500000] l1: 0.060394 ae: 0.122335 wgan_g: -37.087856 wgan_d: -24.093538 wgan_gp: 0.388540 g: 0.182186 d: -20.208139 speed: 1.11 batches/s 
2021-10-30 10:29:03,292 INFO Iter: [109400/500000] l1: 0.053663 ae: 0.116184 wgan_g: -15.767641 wgan_d: -16.721821 wgan_gp: 0.246355 g: 0.188049 d: -14.258270 speed: 1.07 batches/s 
2021-10-30 10:30:34,247 INFO Iter: [109500/500000] l1: 0.049037 ae: 0.100729 wgan_g: -18.485630 wgan_d: -20.422766 wgan_gp: 0.216517 g: 0.161233 d: -18.257595 speed: 1.10 batches/s 
2021-10-30 10:32:05,340 INFO Iter: [109600/500000] l1: 0.061729 ae: 0.103986 wgan_g: -2.173503 wgan_d: -19.800198 wgan_gp: 0.256938 g: 0.196685 d: -17.230816 speed: 1.10 batches/s 
2021-10-30 10:33:36,441 INFO Iter: [109700/500000] l1: 0.048195 ae: 0.110441 wgan_g: -36.838531 wgan_d: -19.087582 wgan_gp: 0.275443 g: 0.153524 d: -16.333149 speed: 1.10 batches/s 
2021-10-30 10:35:07,426 INFO Iter: [109800/500000] l1: 0.054337 ae: 0.095202 wgan_g: -26.563467 wgan_d: -18.188101 wgan_gp: 0.212867 g: 0.152882 d: -16.059433 speed: 1.10 batches/s 
2021-10-30 10:36:38,028 INFO Iter: [109900/500000] l1: 0.053835 ae: 0.103046 wgan_g: -42.653824 wgan_d: -21.045725 wgan_gp: 0.308089 g: 0.145603 d: -17.964840 speed: 1.10 batches/s 
2021-10-30 10:38:09,613 INFO Iter: [110000/500000] l1: 0.050274 ae: 0.103786 wgan_g: -5.840069 wgan_d: -18.202869 wgan_gp: 0.253894 g: 0.179032 d: -15.663933 speed: 1.09 batches/s 
2021-10-30 10:39:40,172 INFO Iter: [110100/500000] l1: 0.060573 ae: 0.101353 wgan_g: 1.247749 wgan_d: -18.795227 wgan_gp: 0.194401 g: 0.195560 d: -16.851213 speed: 1.10 batches/s 
2021-10-30 10:41:10,254 INFO Iter: [110200/500000] l1: 0.045162 ae: 0.103198 wgan_g: -17.611471 wgan_d: -18.792149 wgan_gp: 0.233563 g: 0.160420 d: -16.456518 speed: 1.11 batches/s 
2021-10-30 10:42:40,685 INFO Iter: [110300/500000] l1: 0.057148 ae: 0.114887 wgan_g: -30.900494 wgan_d: -25.501587 wgan_gp: 0.384341 g: 0.175541 d: -21.658175 speed: 1.11 batches/s 
2021-10-30 10:44:11,189 INFO Iter: [110400/500000] l1: 0.054546 ae: 0.111217 wgan_g: -56.901989 wgan_d: -18.996796 wgan_gp: 0.310657 g: 0.142013 d: -15.890223 speed: 1.10 batches/s 
2021-10-30 10:45:42,479 INFO Iter: [110500/500000] l1: 0.048664 ae: 0.096234 wgan_g: -45.339626 wgan_d: -17.505383 wgan_gp: 0.336287 g: 0.128538 d: -14.142512 speed: 1.10 batches/s 
2021-10-30 10:47:13,571 INFO Iter: [110600/500000] l1: 0.048906 ae: 0.091741 wgan_g: 14.337288 wgan_d: -18.448988 wgan_gp: 0.235471 g: 0.183114 d: -16.094273 speed: 1.10 batches/s 
2021-10-30 10:48:44,616 INFO Iter: [110700/500000] l1: 0.057015 ae: 0.110199 wgan_g: -7.207949 wgan_d: -18.695053 wgan_gp: 0.225180 g: 0.193449 d: -16.443249 speed: 1.10 batches/s 
2021-10-30 10:50:17,369 INFO Iter: [110800/500000] l1: 0.049462 ae: 0.105924 wgan_g: -24.999683 wgan_d: -17.839867 wgan_gp: 0.169378 g: 0.161463 d: -16.146084 speed: 1.08 batches/s 
2021-10-30 10:51:52,060 INFO Iter: [110900/500000] l1: 0.057482 ae: 0.110469 wgan_g: -65.087234 wgan_d: -21.185150 wgan_gp: 0.342245 g: 0.136455 d: -17.762703 speed: 1.06 batches/s 
2021-10-30 10:53:24,763 INFO Iter: [111000/500000] l1: 0.041756 ae: 0.089665 wgan_g: -45.912888 wgan_d: -14.645379 wgan_gp: 0.231270 g: 0.111792 d: -12.332674 speed: 1.08 batches/s 
2021-10-30 10:54:55,902 INFO Iter: [111100/500000] l1: 0.064220 ae: 0.114029 wgan_g: -8.148376 wgan_d: -20.042780 wgan_gp: 0.224407 g: 0.205751 d: -17.798706 speed: 1.10 batches/s 
2021-10-30 10:56:28,116 INFO Iter: [111200/500000] l1: 0.050812 ae: 0.102347 wgan_g: 17.317986 wgan_d: -20.976971 wgan_gp: 0.229924 g: 0.201109 d: -18.677734 speed: 1.08 batches/s 
2021-10-30 10:57:58,928 INFO Iter: [111300/500000] l1: 0.051682 ae: 0.108286 wgan_g: -48.308525 wgan_d: -21.460136 wgan_gp: 0.407195 g: 0.143654 d: -17.388184 speed: 1.10 batches/s 
2021-10-30 10:59:29,652 INFO Iter: [111400/500000] l1: 0.054799 ae: 0.107267 wgan_g: -53.636467 wgan_d: -15.526554 wgan_gp: 0.332564 g: 0.140842 d: -12.200912 speed: 1.10 batches/s 
2021-10-30 11:00:59,639 INFO Iter: [111500/500000] l1: 0.057793 ae: 0.090464 wgan_g: -20.251392 wgan_d: -19.648569 wgan_gp: 0.223540 g: 0.157657 d: -17.413164 speed: 1.11 batches/s 
2021-10-30 11:02:29,669 INFO Iter: [111600/500000] l1: 0.046055 ae: 0.100771 wgan_g: -17.250126 wgan_d: -14.197699 wgan_gp: 0.204729 g: 0.158942 d: -12.150406 speed: 1.11 batches/s 
2021-10-30 11:03:59,858 INFO Iter: [111700/500000] l1: 0.052748 ae: 0.114314 wgan_g: -15.864344 wgan_d: -16.173191 wgan_gp: 0.235658 g: 0.184610 d: -13.816612 speed: 1.11 batches/s 
2021-10-30 11:05:30,904 INFO Iter: [111800/500000] l1: 0.048946 ae: 0.105167 wgan_g: -41.698929 wgan_d: -21.421936 wgan_gp: 0.294048 g: 0.143237 d: -18.481455 speed: 1.10 batches/s 
2021-10-30 11:07:02,010 INFO Iter: [111900/500000] l1: 0.048592 ae: 0.092394 wgan_g: -32.502075 wgan_d: -16.179014 wgan_gp: 0.244765 g: 0.136680 d: -13.731363 speed: 1.10 batches/s 
2021-10-30 11:08:33,415 INFO Iter: [112000/500000] l1: 0.050371 ae: 0.103100 wgan_g: -45.675537 wgan_d: -22.628416 wgan_gp: 0.404977 g: 0.138489 d: -18.578648 speed: 1.09 batches/s 
2021-10-30 11:10:04,318 INFO Iter: [112100/500000] l1: 0.050646 ae: 0.097863 wgan_g: -33.455597 wgan_d: -14.907413 wgan_gp: 0.179823 g: 0.144755 d: -13.109180 speed: 1.10 batches/s 
2021-10-30 11:11:34,744 INFO Iter: [112200/500000] l1: 0.049982 ae: 0.088567 wgan_g: -21.493143 wgan_d: -15.167856 wgan_gp: 0.301684 g: 0.144766 d: -12.151018 speed: 1.11 batches/s 
2021-10-30 11:13:04,689 INFO Iter: [112300/500000] l1: 0.059336 ae: 0.099209 wgan_g: -20.782516 wgan_d: -18.689005 wgan_gp: 0.239195 g: 0.169472 d: -16.297052 speed: 1.11 batches/s 
2021-10-30 11:14:34,917 INFO Iter: [112400/500000] l1: 0.048920 ae: 0.097089 wgan_g: -3.647242 wgan_d: -17.144520 wgan_gp: 0.149166 g: 0.171564 d: -15.652859 speed: 1.11 batches/s 
2021-10-30 11:16:05,029 INFO Iter: [112500/500000] l1: 0.046241 ae: 0.099203 wgan_g: -34.998001 wgan_d: -19.943535 wgan_gp: 0.230472 g: 0.139534 d: -17.638815 speed: 1.11 batches/s 
2021-10-30 11:17:35,258 INFO Iter: [112600/500000] l1: 0.051769 ae: 0.106688 wgan_g: -19.406767 wgan_d: -16.447329 wgan_gp: 0.172940 g: 0.170741 d: -14.717924 speed: 1.11 batches/s 
2021-10-30 11:19:05,656 INFO Iter: [112700/500000] l1: 0.048697 ae: 0.112784 wgan_g: -9.633225 wgan_d: -21.475456 wgan_gp: 0.296597 g: 0.184145 d: -18.509485 speed: 1.11 batches/s 
2021-10-30 11:20:36,221 INFO Iter: [112800/500000] l1: 0.047953 ae: 0.113917 wgan_g: 4.262537 wgan_d: -13.732262 wgan_gp: 0.200637 g: 0.198507 d: -11.725888 speed: 1.10 batches/s 
2021-10-30 11:22:06,521 INFO Iter: [112900/500000] l1: 0.052769 ae: 0.112844 wgan_g: -32.665710 wgan_d: -18.965111 wgan_gp: 0.306619 g: 0.166070 d: -15.898922 speed: 1.11 batches/s 
2021-10-30 11:23:36,940 INFO Iter: [113000/500000] l1: 0.057521 ae: 0.105110 wgan_g: -49.329460 wgan_d: -23.215401 wgan_gp: 0.195982 g: 0.145828 d: -21.255577 speed: 1.11 batches/s 
2021-10-30 11:25:07,692 INFO Iter: [113100/500000] l1: 0.051470 ae: 0.114706 wgan_g: -29.616276 wgan_d: -19.255831 wgan_gp: 0.244151 g: 0.169795 d: -16.814323 speed: 1.10 batches/s 
2021-10-30 11:26:38,013 INFO Iter: [113200/500000] l1: 0.046034 ae: 0.085799 wgan_g: -32.109558 wgan_d: -18.893860 wgan_gp: 0.243088 g: 0.126090 d: -16.462984 speed: 1.11 batches/s 
2021-10-30 11:28:08,516 INFO Iter: [113300/500000] l1: 0.040676 ae: 0.107945 wgan_g: -24.913738 wgan_d: -18.428387 wgan_gp: 0.235528 g: 0.153432 d: -16.073105 speed: 1.10 batches/s 
2021-10-30 11:29:39,264 INFO Iter: [113400/500000] l1: 0.050672 ae: 0.106369 wgan_g: -28.351982 wgan_d: -15.380692 wgan_gp: 0.247460 g: 0.160098 d: -12.906086 speed: 1.10 batches/s 
2021-10-30 11:31:10,651 INFO Iter: [113500/500000] l1: 0.044119 ae: 0.114599 wgan_g: -39.637405 wgan_d: -14.959843 wgan_gp: 0.244311 g: 0.150823 d: -12.516737 speed: 1.09 batches/s 
2021-10-30 11:32:41,250 INFO Iter: [113600/500000] l1: 0.052147 ae: 0.104406 wgan_g: -48.763039 wgan_d: -16.837723 wgan_gp: 0.214829 g: 0.139101 d: -14.689432 speed: 1.10 batches/s 
2021-10-30 11:34:11,817 INFO Iter: [113700/500000] l1: 0.059836 ae: 0.109969 wgan_g: -68.616913 wgan_d: -23.597216 wgan_gp: 0.400104 g: 0.135149 d: -19.596176 speed: 1.10 batches/s 
2021-10-30 11:35:43,641 INFO Iter: [113800/500000] l1: 0.041870 ae: 0.107842 wgan_g: -4.697210 wgan_d: -18.288393 wgan_gp: 0.285277 g: 0.174957 d: -15.435619 speed: 1.09 batches/s 
2021-10-30 11:37:18,291 INFO Iter: [113900/500000] l1: 0.056322 ae: 0.103773 wgan_g: -41.815643 wgan_d: -19.724789 wgan_gp: 0.296651 g: 0.150299 d: -16.758276 speed: 1.06 batches/s 
2021-10-30 11:38:52,856 INFO Iter: [114000/500000] l1: 0.047148 ae: 0.116403 wgan_g: -27.520056 wgan_d: -16.308195 wgan_gp: 0.149941 g: 0.168742 d: -14.808789 speed: 1.06 batches/s 
2021-10-30 11:40:24,088 INFO Iter: [114100/500000] l1: 0.043573 ae: 0.095119 wgan_g: -7.851941 wgan_d: -17.673069 wgan_gp: 0.211275 g: 0.158578 d: -15.560317 speed: 1.10 batches/s 
2021-10-30 11:41:55,248 INFO Iter: [114200/500000] l1: 0.043622 ae: 0.099323 wgan_g: -41.263050 wgan_d: -15.151003 wgan_gp: 0.243628 g: 0.130271 d: -12.714726 speed: 1.10 batches/s 
2021-10-30 11:43:26,251 INFO Iter: [114300/500000] l1: 0.048382 ae: 0.109813 wgan_g: -43.352264 wgan_d: -20.120090 wgan_gp: 0.290100 g: 0.146482 d: -17.219090 speed: 1.10 batches/s 
2021-10-30 11:44:56,896 INFO Iter: [114400/500000] l1: 0.048906 ae: 0.101692 wgan_g: 9.128234 wgan_d: -14.239429 wgan_gp: 0.224804 g: 0.189846 d: -11.991394 speed: 1.10 batches/s 
2021-10-30 11:46:27,309 INFO Iter: [114500/500000] l1: 0.057712 ae: 0.117256 wgan_g: -55.263271 wgan_d: -21.885906 wgan_gp: 0.324730 g: 0.154699 d: -18.638605 speed: 1.11 batches/s 
2021-10-30 11:47:57,638 INFO Iter: [114600/500000] l1: 0.049885 ae: 0.108581 wgan_g: -51.985775 wgan_d: -17.964005 wgan_gp: 0.295619 g: 0.138174 d: -15.007813 speed: 1.11 batches/s 
2021-10-30 11:49:28,231 INFO Iter: [114700/500000] l1: 0.062361 ae: 0.101855 wgan_g: -30.005196 wgan_d: -19.829641 wgan_gp: 0.272029 g: 0.167054 d: -17.109346 speed: 1.10 batches/s 
2021-10-30 11:50:58,699 INFO Iter: [114800/500000] l1: 0.049323 ae: 0.102999 wgan_g: -17.591343 wgan_d: -17.605892 wgan_gp: 0.199228 g: 0.165195 d: -15.613612 speed: 1.11 batches/s 
2021-10-30 11:52:30,843 INFO Iter: [114900/500000] l1: 0.051893 ae: 0.107061 wgan_g: -10.432277 wgan_d: -17.421673 wgan_gp: 0.216233 g: 0.180313 d: -15.259343 speed: 1.09 batches/s 
2021-10-30 11:54:02,864 INFO Iter: [115000/500000] l1: 0.050635 ae: 0.113709 wgan_g: -14.284556 wgan_d: -16.920664 wgan_gp: 0.218557 g: 0.182928 d: -14.735091 speed: 1.09 batches/s 
2021-10-30 11:55:34,126 INFO Iter: [115100/500000] l1: 0.059344 ae: 0.103309 wgan_g: -56.571770 wgan_d: -19.533493 wgan_gp: 0.326873 g: 0.138612 d: -16.264767 speed: 1.10 batches/s 
2021-10-30 11:57:05,038 INFO Iter: [115200/500000] l1: 0.044770 ae: 0.118118 wgan_g: -50.819500 wgan_d: -17.450350 wgan_gp: 0.383650 g: 0.144646 d: -13.613851 speed: 1.10 batches/s 
2021-10-30 11:58:35,886 INFO Iter: [115300/500000] l1: 0.053015 ae: 0.105917 wgan_g: -34.436283 wgan_d: -20.064001 wgan_gp: 0.281766 g: 0.156283 d: -17.246338 speed: 1.10 batches/s 
2021-10-30 12:00:07,045 INFO Iter: [115400/500000] l1: 0.050414 ae: 0.101737 wgan_g: -31.865780 wgan_d: -15.609132 wgan_gp: 0.247457 g: 0.150714 d: -13.134558 speed: 1.10 batches/s 
2021-10-30 12:01:38,025 INFO Iter: [115500/500000] l1: 0.049388 ae: 0.119605 wgan_g: -72.818810 wgan_d: -21.465624 wgan_gp: 0.388411 g: 0.129973 d: -17.581516 speed: 1.10 batches/s 
2021-10-30 12:03:09,065 INFO Iter: [115600/500000] l1: 0.052906 ae: 0.114000 wgan_g: -11.103688 wgan_d: -20.071764 wgan_gp: 0.205556 g: 0.189184 d: -18.016205 speed: 1.10 batches/s 
2021-10-30 12:04:40,011 INFO Iter: [115700/500000] l1: 0.057540 ae: 0.110362 wgan_g: -54.222065 wgan_d: -24.160927 wgan_gp: 0.345741 g: 0.147260 d: -20.703522 speed: 1.10 batches/s 
2021-10-30 12:06:10,796 INFO Iter: [115800/500000] l1: 0.050726 ae: 0.105697 wgan_g: -38.037174 wgan_d: -21.395298 wgan_gp: 0.280634 g: 0.149670 d: -18.588961 speed: 1.10 batches/s 
2021-10-30 12:07:41,002 INFO Iter: [115900/500000] l1: 0.058848 ae: 0.114136 wgan_g: -52.078934 wgan_d: -18.520248 wgan_gp: 0.253197 g: 0.155502 d: -15.988275 speed: 1.11 batches/s 
2021-10-30 12:09:11,153 INFO Iter: [116000/500000] l1: 0.047918 ae: 0.103995 wgan_g: -62.603218 wgan_d: -21.929207 wgan_gp: 0.445221 g: 0.119692 d: -17.476994 speed: 1.11 batches/s 
2021-10-30 12:10:42,058 INFO Iter: [116100/500000] l1: 0.036685 ae: 0.105593 wgan_g: -47.509052 wgan_d: -19.362778 wgan_gp: 0.271277 g: 0.123224 d: -16.650013 speed: 1.10 batches/s 
2021-10-30 12:12:12,656 INFO Iter: [116200/500000] l1: 0.045370 ae: 0.105021 wgan_g: -29.673801 wgan_d: -18.625893 wgan_gp: 0.208991 g: 0.150795 d: -16.535986 speed: 1.10 batches/s 
2021-10-30 12:13:43,028 INFO Iter: [116300/500000] l1: 0.047880 ae: 0.106537 wgan_g: -20.014059 wgan_d: -21.986883 wgan_gp: 0.328729 g: 0.165286 d: -18.699593 speed: 1.11 batches/s 
2021-10-30 12:15:13,260 INFO Iter: [116400/500000] l1: 0.049052 ae: 0.111114 wgan_g: -50.279121 wgan_d: -18.256823 wgan_gp: 0.289954 g: 0.141921 d: -15.357283 speed: 1.11 batches/s 
2021-10-30 12:16:43,356 INFO Iter: [116500/500000] l1: 0.052711 ae: 0.097229 wgan_g: -40.466953 wgan_d: -14.562267 wgan_gp: 0.209486 g: 0.139460 d: -12.467412 speed: 1.11 batches/s 
2021-10-30 12:18:13,606 INFO Iter: [116600/500000] l1: 0.057938 ae: 0.109324 wgan_g: 13.683321 wgan_d: -21.267864 wgan_gp: 0.262778 g: 0.214398 d: -18.640083 speed: 1.11 batches/s 
2021-10-30 12:19:44,485 INFO Iter: [116700/500000] l1: 0.053328 ae: 0.108084 wgan_g: -25.834991 wgan_d: -20.093525 wgan_gp: 0.265083 g: 0.167859 d: -17.442699 speed: 1.10 batches/s 
2021-10-30 12:21:14,829 INFO Iter: [116800/500000] l1: 0.059628 ae: 0.097509 wgan_g: -25.863665 wgan_d: -18.776863 wgan_gp: 0.305013 g: 0.162701 d: -15.726735 speed: 1.11 batches/s 
2021-10-30 12:22:45,108 INFO Iter: [116900/500000] l1: 0.045882 ae: 0.095355 wgan_g: -43.783363 wgan_d: -14.298545 wgan_gp: 0.226146 g: 0.125701 d: -12.037087 speed: 1.11 batches/s 
2021-10-30 12:24:15,509 INFO Iter: [117000/500000] l1: 0.046493 ae: 0.104502 wgan_g: -64.320488 wgan_d: -21.952059 wgan_gp: 0.447716 g: 0.116873 d: -17.474899 speed: 1.11 batches/s 
2021-10-30 12:25:46,611 INFO Iter: [117100/500000] l1: 0.051970 ae: 0.105204 wgan_g: -6.244850 wgan_d: -18.219803 wgan_gp: 0.246280 g: 0.182364 d: -15.756998 speed: 1.10 batches/s 
2021-10-30 12:27:16,848 INFO Iter: [117200/500000] l1: 0.054748 ae: 0.118731 wgan_g: -44.133347 wgan_d: -19.094994 wgan_gp: 0.276584 g: 0.164041 d: -16.329149 speed: 1.11 batches/s 
2021-10-30 12:28:47,174 INFO Iter: [117300/500000] l1: 0.054858 ae: 0.116969 wgan_g: -37.553211 wgan_d: -18.112768 wgan_gp: 0.232921 g: 0.168639 d: -15.783554 speed: 1.11 batches/s 
2021-10-30 12:30:17,725 INFO Iter: [117400/500000] l1: 0.048523 ae: 0.102624 wgan_g: -36.114666 wgan_d: -16.773113 wgan_gp: 0.243177 g: 0.145262 d: -14.341343 speed: 1.10 batches/s 
2021-10-30 12:31:48,034 INFO Iter: [117500/500000] l1: 0.049410 ae: 0.115402 wgan_g: -70.147125 wgan_d: -22.803871 wgan_gp: 0.474166 g: 0.127628 d: -18.062214 speed: 1.11 batches/s 
2021-10-30 12:33:18,385 INFO Iter: [117600/500000] l1: 0.050916 ae: 0.113354 wgan_g: -35.072502 wgan_d: -18.217228 wgan_gp: 0.229241 g: 0.162050 d: -15.924813 speed: 1.11 batches/s 
2021-10-30 12:34:48,837 INFO Iter: [117700/500000] l1: 0.054941 ae: 0.105101 wgan_g: -6.316584 wgan_d: -17.535236 wgan_gp: 0.174659 g: 0.185734 d: -15.788643 speed: 1.11 batches/s 
2021-10-30 12:36:19,059 INFO Iter: [117800/500000] l1: 0.061592 ae: 0.107854 wgan_g: 6.360839 wgan_d: -16.849365 wgan_gp: 0.223010 g: 0.209695 d: -14.619263 speed: 1.11 batches/s 
2021-10-30 12:37:49,288 INFO Iter: [117900/500000] l1: 0.048773 ae: 0.112577 wgan_g: -1.241340 wgan_d: -18.632076 wgan_gp: 0.200410 g: 0.192378 d: -16.627972 speed: 1.11 batches/s 
2021-10-30 12:39:19,581 INFO Iter: [118000/500000] l1: 0.055789 ae: 0.109586 wgan_g: -48.959309 wgan_d: -13.159195 wgan_gp: 0.227197 g: 0.149492 d: -10.887220 speed: 1.11 batches/s 
2021-10-30 12:40:50,214 INFO Iter: [118100/500000] l1: 0.050587 ae: 0.099411 wgan_g: -46.493599 wgan_d: -18.567631 wgan_gp: 0.189760 g: 0.133504 d: -16.670029 speed: 1.10 batches/s 
2021-10-30 12:42:20,495 INFO Iter: [118200/500000] l1: 0.047230 ae: 0.102097 wgan_g: -32.571880 wgan_d: -17.331604 wgan_gp: 0.148915 g: 0.146620 d: -15.842455 speed: 1.11 batches/s 
2021-10-30 12:43:54,029 INFO Iter: [118300/500000] l1: 0.050623 ae: 0.101851 wgan_g: -15.217824 wgan_d: -21.226387 wgan_gp: 0.206660 g: 0.167750 d: -19.159790 speed: 1.07 batches/s 
2021-10-30 12:45:28,528 INFO Iter: [118400/500000] l1: 0.051583 ae: 0.121814 wgan_g: -33.056637 wgan_d: -15.661398 wgan_gp: 0.262201 g: 0.175019 d: -13.039390 speed: 1.06 batches/s 
2021-10-30 12:47:02,930 INFO Iter: [118500/500000] l1: 0.052139 ae: 0.108605 wgan_g: -15.566300 wgan_d: -15.638554 wgan_gp: 0.182443 g: 0.177326 d: -13.814120 speed: 1.06 batches/s 
2021-10-30 12:48:37,387 INFO Iter: [118600/500000] l1: 0.042432 ae: 0.099942 wgan_g: -21.123589 wgan_d: -16.809700 wgan_gp: 0.322787 g: 0.149725 d: -13.581832 speed: 1.06 batches/s 
2021-10-30 12:50:09,562 INFO Iter: [118700/500000] l1: 0.059314 ae: 0.111784 wgan_g: -19.272501 wgan_d: -21.662842 wgan_gp: 0.263870 g: 0.186045 d: -19.024145 speed: 1.08 batches/s 
2021-10-30 12:51:40,021 INFO Iter: [118800/500000] l1: 0.050633 ae: 0.095474 wgan_g: -23.942801 wgan_d: -19.789036 wgan_gp: 0.255080 g: 0.151386 d: -17.238235 speed: 1.11 batches/s 
2021-10-30 12:53:10,536 INFO Iter: [118900/500000] l1: 0.052577 ae: 0.109473 wgan_g: -16.171066 wgan_d: -19.248812 wgan_gp: 0.225144 g: 0.178289 d: -16.997368 speed: 1.10 batches/s 
2021-10-30 12:54:41,683 INFO Iter: [119000/500000] l1: 0.043172 ae: 0.099306 wgan_g: -19.825075 wgan_d: -14.816238 wgan_gp: 0.168228 g: 0.151148 d: -13.133959 speed: 1.10 batches/s 
2021-10-30 12:56:13,281 INFO Iter: [119100/500000] l1: 0.044578 ae: 0.110264 wgan_g: -21.945492 wgan_d: -17.394949 wgan_gp: 0.260753 g: 0.163864 d: -14.787416 speed: 1.09 batches/s 
2021-10-30 12:57:44,396 INFO Iter: [119200/500000] l1: 0.046183 ae: 0.107812 wgan_g: -43.711601 wgan_d: -16.357430 wgan_gp: 0.232926 g: 0.141083 d: -14.028167 speed: 1.10 batches/s 
2021-10-30 12:59:15,590 INFO Iter: [119300/500000] l1: 0.052856 ae: 0.105291 wgan_g: -60.014908 wgan_d: -17.343637 wgan_gp: 0.302076 g: 0.129762 d: -14.322882 speed: 1.10 batches/s 
2021-10-30 13:00:46,097 INFO Iter: [119400/500000] l1: 0.048017 ae: 0.108387 wgan_g: -28.638853 wgan_d: -17.696541 wgan_gp: 0.265648 g: 0.159046 d: -15.040058 speed: 1.10 batches/s 
2021-10-30 13:02:16,405 INFO Iter: [119500/500000] l1: 0.058818 ae: 0.097822 wgan_g: -40.323479 wgan_d: -16.593750 wgan_gp: 0.174411 g: 0.147644 d: -14.849638 speed: 1.11 batches/s 
2021-10-30 13:03:46,636 INFO Iter: [119600/500000] l1: 0.054005 ae: 0.104203 wgan_g: -15.611235 wgan_d: -14.199945 wgan_gp: 0.197737 g: 0.174239 d: -12.222578 speed: 1.11 batches/s 
2021-10-30 13:05:16,872 INFO Iter: [119700/500000] l1: 0.047138 ae: 0.114533 wgan_g: -16.602972 wgan_d: -18.073481 wgan_gp: 0.266332 g: 0.177402 d: -15.410162 speed: 1.11 batches/s 
2021-10-30 13:06:47,158 INFO Iter: [119800/500000] l1: 0.047163 ae: 0.104061 wgan_g: -26.992252 wgan_d: -18.416275 wgan_gp: 0.202938 g: 0.154476 d: -16.386892 speed: 1.11 batches/s 
2021-10-30 13:08:17,309 INFO Iter: [119900/500000] l1: 0.053645 ae: 0.096161 wgan_g: -24.771175 wgan_d: -13.985134 wgan_gp: 0.174298 g: 0.154997 d: -12.242153 speed: 1.11 batches/s 
2021-10-30 13:09:47,522 INFO Iter: [120000/500000] l1: 0.043907 ae: 0.104270 wgan_g: 10.254924 wgan_d: -15.610653 wgan_gp: 0.252935 g: 0.188067 d: -13.081305 speed: 1.11 batches/s 
2021-10-30 13:11:18,240 INFO Iter: [120100/500000] l1: 0.048557 ae: 0.101704 wgan_g: -37.620579 wgan_d: -18.293926 wgan_gp: 0.253763 g: 0.142694 d: -15.756295 speed: 1.10 batches/s 
2021-10-30 13:12:48,696 INFO Iter: [120200/500000] l1: 0.039775 ae: 0.099435 wgan_g: -42.368443 wgan_d: -14.989902 wgan_gp: 0.213587 g: 0.124684 d: -12.854033 speed: 1.11 batches/s 
2021-10-30 13:14:19,283 INFO Iter: [120300/500000] l1: 0.054364 ae: 0.096109 wgan_g: -44.652626 wgan_d: -23.432072 wgan_gp: 0.329467 g: 0.135914 d: -20.137398 speed: 1.10 batches/s 
2021-10-30 13:15:49,826 INFO Iter: [120400/500000] l1: 0.053828 ae: 0.108853 wgan_g: -46.430820 wgan_d: -15.149725 wgan_gp: 0.266190 g: 0.148786 d: -12.487824 speed: 1.10 batches/s 
2021-10-30 13:17:20,357 INFO Iter: [120500/500000] l1: 0.048270 ae: 0.117984 wgan_g: -26.185251 wgan_d: -17.527710 wgan_gp: 0.210276 g: 0.173320 d: -15.424952 speed: 1.10 batches/s 
2021-10-30 13:18:50,803 INFO Iter: [120600/500000] l1: 0.047870 ae: 0.112158 wgan_g: -43.861038 wgan_d: -18.082586 wgan_gp: 0.282603 g: 0.148173 d: -15.256559 speed: 1.11 batches/s 
2021-10-30 13:20:21,255 INFO Iter: [120700/500000] l1: 0.038756 ae: 0.104358 wgan_g: 5.591632 wgan_d: -17.265635 wgan_gp: 0.307611 g: 0.177329 d: -14.189528 speed: 1.11 batches/s 
2021-10-30 13:21:51,680 INFO Iter: [120800/500000] l1: 0.053394 ae: 0.103667 wgan_g: -42.539482 wgan_d: -17.195679 wgan_gp: 0.277802 g: 0.145933 d: -14.417658 speed: 1.11 batches/s 
2021-10-30 13:23:22,193 INFO Iter: [120900/500000] l1: 0.042046 ae: 0.115195 wgan_g: -13.475924 wgan_d: -17.880924 wgan_gp: 0.187393 g: 0.175213 d: -16.006990 speed: 1.10 batches/s 
2021-10-30 13:24:52,555 INFO Iter: [121000/500000] l1: 0.050834 ae: 0.102118 wgan_g: -28.481562 wgan_d: -19.012941 wgan_gp: 0.262684 g: 0.155061 d: -16.386106 speed: 1.11 batches/s 
2021-10-30 13:26:22,885 INFO Iter: [121100/500000] l1: 0.054195 ae: 0.111141 wgan_g: -14.976057 wgan_d: -18.780197 wgan_gp: 0.248231 g: 0.183427 d: -16.297890 speed: 1.11 batches/s 
2021-10-30 13:27:53,059 INFO Iter: [121200/500000] l1: 0.045195 ae: 0.104993 wgan_g: -19.297943 wgan_d: -20.209835 wgan_gp: 0.305898 g: 0.160928 d: -17.150854 speed: 1.11 batches/s 
2021-10-30 13:29:23,572 INFO Iter: [121300/500000] l1: 0.033329 ae: 0.103307 wgan_g: -41.200256 wgan_d: -10.870706 wgan_gp: 0.173700 g: 0.122763 d: -9.133703 speed: 1.10 batches/s 
2021-10-30 13:30:54,062 INFO Iter: [121400/500000] l1: 0.051558 ae: 0.093633 wgan_g: -34.226135 wgan_d: -18.100481 wgan_gp: 0.273366 g: 0.140003 d: -15.366821 speed: 1.11 batches/s 
2021-10-30 13:32:24,365 INFO Iter: [121500/500000] l1: 0.041652 ae: 0.117552 wgan_g: -35.290646 wgan_d: -17.059988 wgan_gp: 0.269804 g: 0.155755 d: -14.361946 speed: 1.11 batches/s 
2021-10-30 13:33:58,005 INFO Iter: [121600/500000] l1: 0.048536 ae: 0.102979 wgan_g: -33.317825 wgan_d: -17.643145 wgan_gp: 0.247878 g: 0.148500 d: -15.164368 speed: 1.07 batches/s 
2021-10-30 13:35:32,560 INFO Iter: [121700/500000] l1: 0.051724 ae: 0.096508 wgan_g: -11.417561 wgan_d: -17.016727 wgan_gp: 0.199183 g: 0.166460 d: -15.024901 speed: 1.06 batches/s 
2021-10-30 13:37:06,659 INFO Iter: [121800/500000] l1: 0.058469 ae: 0.121967 wgan_g: -80.500771 wgan_d: -26.396238 wgan_gp: 0.438523 g: 0.136022 d: -22.011009 speed: 1.06 batches/s 
2021-10-30 13:38:37,843 INFO Iter: [121900/500000] l1: 0.058247 ae: 0.124493 wgan_g: -38.858162 wgan_d: -21.183775 wgan_gp: 0.280486 g: 0.180430 d: -18.378912 speed: 1.10 batches/s 
2021-10-30 13:40:09,100 INFO Iter: [122000/500000] l1: 0.041560 ae: 0.108232 wgan_g: -48.887207 wgan_d: -21.782318 wgan_gp: 0.382841 g: 0.130863 d: -17.953903 speed: 1.10 batches/s 
2021-10-30 13:41:40,621 INFO Iter: [122100/500000] l1: 0.058948 ae: 0.103182 wgan_g: -41.245930 wgan_d: -21.218534 wgan_gp: 0.221526 g: 0.153310 d: -19.003277 speed: 1.09 batches/s 
2021-10-30 13:43:11,837 INFO Iter: [122200/500000] l1: 0.039490 ae: 0.106367 wgan_g: -22.438843 wgan_d: -19.271223 wgan_gp: 0.257307 g: 0.152589 d: -16.698156 speed: 1.10 batches/s 
2021-10-30 13:44:43,968 INFO Iter: [122300/500000] l1: 0.050664 ae: 0.103580 wgan_g: -29.081253 wgan_d: -18.826010 wgan_gp: 0.225181 g: 0.156012 d: -16.574203 speed: 1.09 batches/s 
2021-10-30 13:46:14,347 INFO Iter: [122400/500000] l1: 0.046558 ae: 0.097576 wgan_g: -19.116142 wgan_d: -19.122902 wgan_gp: 0.211996 g: 0.153844 d: -17.002945 speed: 1.11 batches/s 
2021-10-30 13:47:44,763 INFO Iter: [122500/500000] l1: 0.049077 ae: 0.102607 wgan_g: 10.013952 wgan_d: -19.785517 wgan_gp: 0.198346 g: 0.192034 d: -17.802055 speed: 1.11 batches/s 
2021-10-30 13:49:15,339 INFO Iter: [122600/500000] l1: 0.051234 ae: 0.120396 wgan_g: -72.754501 wgan_d: -21.854898 wgan_gp: 0.399800 g: 0.133201 d: -17.856901 speed: 1.10 batches/s 
2021-10-30 13:50:46,079 INFO Iter: [122700/500000] l1: 0.052936 ae: 0.113284 wgan_g: -16.933741 wgan_d: -15.185707 wgan_gp: 0.229014 g: 0.182530 d: -12.895563 speed: 1.10 batches/s 
2021-10-30 13:52:16,501 INFO Iter: [122800/500000] l1: 0.054633 ae: 0.107025 wgan_g: -57.335854 wgan_d: -24.947220 wgan_gp: 0.272982 g: 0.136654 d: -22.217400 speed: 1.11 batches/s 
2021-10-30 13:53:47,050 INFO Iter: [122900/500000] l1: 0.051026 ae: 0.100371 wgan_g: -10.884360 wgan_d: -13.251185 wgan_gp: 0.169861 g: 0.170792 d: -11.552580 speed: 1.10 batches/s 
2021-10-30 13:55:17,512 INFO Iter: [123000/500000] l1: 0.036918 ae: 0.103846 wgan_g: -60.091297 wgan_d: -17.220005 wgan_gp: 0.262752 g: 0.108826 d: -14.592482 speed: 1.11 batches/s 
2021-10-30 13:56:48,089 INFO Iter: [123100/500000] l1: 0.039473 ae: 0.102658 wgan_g: -47.145466 wgan_d: -15.813966 wgan_gp: 0.216353 g: 0.123411 d: -13.650436 speed: 1.10 batches/s 
2021-10-30 13:58:19,045 INFO Iter: [123200/500000] l1: 0.056401 ae: 0.106919 wgan_g: -27.223333 wgan_d: -16.757750 wgan_gp: 0.203023 g: 0.168761 d: -14.727525 speed: 1.10 batches/s 
2021-10-30 13:59:50,402 INFO Iter: [123300/500000] l1: 0.044594 ae: 0.104790 wgan_g: -22.048210 wgan_d: -17.531826 wgan_gp: 0.180150 g: 0.157212 d: -15.730327 speed: 1.09 batches/s 
2021-10-30 14:01:22,727 INFO Iter: [123400/500000] l1: 0.051106 ae: 0.105042 wgan_g: -21.502426 wgan_d: -16.099293 wgan_gp: 0.191841 g: 0.165874 d: -14.180882 speed: 1.08 batches/s 
2021-10-30 14:02:53,212 INFO Iter: [123500/500000] l1: 0.035010 ae: 0.100946 wgan_g: -51.146240 wgan_d: -19.332436 wgan_gp: 0.291796 g: 0.112002 d: -16.414473 speed: 1.11 batches/s 
2021-10-30 14:04:23,466 INFO Iter: [123600/500000] l1: 0.049612 ae: 0.097974 wgan_g: -34.334015 wgan_d: -18.827215 wgan_gp: 0.162080 g: 0.142769 d: -17.206417 speed: 1.11 batches/s 
2021-10-30 14:05:53,593 INFO Iter: [123700/500000] l1: 0.051597 ae: 0.106938 wgan_g: -54.989513 wgan_d: -19.597366 wgan_gp: 0.578206 g: 0.135253 d: -13.815306 speed: 1.11 batches/s 
2021-10-30 14:07:23,922 INFO Iter: [123800/500000] l1: 0.052273 ae: 0.097741 wgan_g: -30.504442 wgan_d: -20.343128 wgan_gp: 0.188402 g: 0.149513 d: -18.459112 speed: 1.11 batches/s 
2021-10-30 14:08:54,324 INFO Iter: [123900/500000] l1: 0.048666 ae: 0.103954 wgan_g: -22.783854 wgan_d: -19.850136 wgan_gp: 0.185573 g: 0.160361 d: -17.994410 speed: 1.11 batches/s 
2021-10-30 14:10:24,961 INFO Iter: [124000/500000] l1: 0.046634 ae: 0.108559 wgan_g: -39.697803 wgan_d: -20.573280 wgan_gp: 0.304559 g: 0.146533 d: -17.527689 speed: 1.10 batches/s 
2021-10-30 14:11:55,572 INFO Iter: [124100/500000] l1: 0.054316 ae: 0.103585 wgan_g: -19.617195 wgan_d: -18.814541 wgan_gp: 0.147777 g: 0.169864 d: -17.336769 speed: 1.10 batches/s 
2021-10-30 14:13:26,044 INFO Iter: [124200/500000] l1: 0.052026 ae: 0.112321 wgan_g: -54.985870 wgan_d: -16.742411 wgan_gp: 0.319822 g: 0.142231 d: -13.544193 speed: 1.11 batches/s 
2021-10-30 14:14:56,607 INFO Iter: [124300/500000] l1: 0.052657 ae: 0.094580 wgan_g: -1.722704 wgan_d: -16.417286 wgan_gp: 0.385691 g: 0.174962 d: -12.560381 speed: 1.10 batches/s 
2021-10-30 14:16:26,997 INFO Iter: [124400/500000] l1: 0.054504 ae: 0.112480 wgan_g: 7.588797 wgan_d: -19.367386 wgan_gp: 0.177774 g: 0.207969 d: -17.589643 speed: 1.11 batches/s 
2021-10-30 14:17:57,440 INFO Iter: [124500/500000] l1: 0.054463 ae: 0.101144 wgan_g: -22.121683 wgan_d: -19.044804 wgan_gp: 0.239464 g: 0.164607 d: -16.650162 speed: 1.11 batches/s 
2021-10-30 14:19:29,694 INFO Iter: [124600/500000] l1: 0.049967 ae: 0.102117 wgan_g: -77.217041 wgan_d: -28.331356 wgan_gp: 0.367917 g: 0.105284 d: -24.652184 speed: 1.08 batches/s 
2021-10-30 14:21:00,454 INFO Iter: [124700/500000] l1: 0.051887 ae: 0.108473 wgan_g: -16.335588 wgan_d: -15.647278 wgan_gp: 0.193663 g: 0.176096 d: -13.710648 speed: 1.10 batches/s 
2021-10-30 14:22:31,555 INFO Iter: [124800/500000] l1: 0.042587 ae: 0.109339 wgan_g: -33.742489 wgan_d: -16.854271 wgan_gp: 0.207668 g: 0.148568 d: -14.777590 speed: 1.10 batches/s 
2021-10-30 14:24:02,770 INFO Iter: [124900/500000] l1: 0.045308 ae: 0.099383 wgan_g: -5.278202 wgan_d: -15.718319 wgan_gp: 0.184896 g: 0.168351 d: -13.869362 speed: 1.10 batches/s 
2021-10-30 14:25:34,434 INFO Iter: [125000/500000] l1: 0.049376 ae: 0.098964 wgan_g: -7.999842 wgan_d: -14.210907 wgan_gp: 0.167972 g: 0.170008 d: -12.531192 speed: 1.09 batches/s 
2021-10-30 14:27:09,253 INFO Iter: [125100/500000] l1: 0.043989 ae: 0.093080 wgan_g: -52.466110 wgan_d: -18.738527 wgan_gp: 0.199683 g: 0.112016 d: -16.741701 speed: 1.05 batches/s 
2021-10-30 14:28:40,759 INFO Iter: [125200/500000] l1: 0.053280 ae: 0.091304 wgan_g: -40.264011 wgan_d: -15.824277 wgan_gp: 0.271887 g: 0.133236 d: -13.105404 speed: 1.09 batches/s 
2021-10-30 14:30:11,649 INFO Iter: [125300/500000] l1: 0.052366 ae: 0.111117 wgan_g: -93.295364 wgan_d: -22.520344 wgan_gp: 0.454640 g: 0.102884 d: -17.973940 speed: 1.10 batches/s 
2021-10-30 14:31:42,287 INFO Iter: [125400/500000] l1: 0.050722 ae: 0.112326 wgan_g: -32.258556 wgan_d: -16.887686 wgan_gp: 0.266920 g: 0.163399 d: -14.218483 speed: 1.10 batches/s 
2021-10-30 14:33:12,748 INFO Iter: [125500/500000] l1: 0.046267 ae: 0.106984 wgan_g: -23.134796 wgan_d: -15.184863 wgan_gp: 0.205289 g: 0.160766 d: -13.131975 speed: 1.11 batches/s 
2021-10-30 14:34:43,148 INFO Iter: [125600/500000] l1: 0.048597 ae: 0.090921 wgan_g: -4.099064 wgan_d: -13.495348 wgan_gp: 0.141815 g: 0.163322 d: -12.077194 speed: 1.11 batches/s 
2021-10-30 14:36:14,428 INFO Iter: [125700/500000] l1: 0.049787 ae: 0.101160 wgan_g: -6.501847 wgan_d: -12.637506 wgan_gp: 0.219138 g: 0.174634 d: -10.446121 speed: 1.10 batches/s 
2021-10-30 14:37:44,645 INFO Iter: [125800/500000] l1: 0.056089 ae: 0.100180 wgan_g: -47.000595 wgan_d: -21.530296 wgan_gp: 0.270889 g: 0.140521 d: -18.821407 speed: 1.11 batches/s 
2021-10-30 14:39:15,191 INFO Iter: [125900/500000] l1: 0.047503 ae: 0.095647 wgan_g: -31.886959 wgan_d: -13.436721 wgan_gp: 0.204063 g: 0.139893 d: -11.396095 speed: 1.10 batches/s 
2021-10-30 14:40:45,773 INFO Iter: [126000/500000] l1: 0.045696 ae: 0.115770 wgan_g: -49.388626 wgan_d: -18.943172 wgan_gp: 0.268520 g: 0.144372 d: -16.257969 speed: 1.10 batches/s 
2021-10-30 14:42:16,582 INFO Iter: [126100/500000] l1: 0.060749 ae: 0.100560 wgan_g: -40.230957 wgan_d: -20.446169 wgan_gp: 0.190755 g: 0.153340 d: -18.538618 speed: 1.10 batches/s 
2021-10-30 14:43:48,973 INFO Iter: [126200/500000] l1: 0.054440 ae: 0.099173 wgan_g: -42.935844 wgan_d: -16.439457 wgan_gp: 0.230539 g: 0.141401 d: -14.134068 speed: 1.08 batches/s 
2021-10-30 14:45:19,679 INFO Iter: [126300/500000] l1: 0.045767 ae: 0.099580 wgan_g: -25.338903 wgan_d: -20.465336 wgan_gp: 0.235743 g: 0.149078 d: -18.107906 speed: 1.10 batches/s 
2021-10-30 14:46:50,108 INFO Iter: [126400/500000] l1: 0.055683 ae: 0.092216 wgan_g: -25.805016 wgan_d: -19.598495 wgan_gp: 0.271875 g: 0.151673 d: -16.879742 speed: 1.11 batches/s 
2021-10-30 14:48:20,573 INFO Iter: [126500/500000] l1: 0.047800 ae: 0.103268 wgan_g: -60.511566 wgan_d: -14.795492 wgan_gp: 0.199362 g: 0.120771 d: -12.801870 speed: 1.11 batches/s 
2021-10-30 14:49:52,280 INFO Iter: [126600/500000] l1: 0.046500 ae: 0.081099 wgan_g: -45.855740 wgan_d: -17.695995 wgan_gp: 0.262153 g: 0.107263 d: -15.074466 speed: 1.09 batches/s 
2021-10-30 14:51:24,061 INFO Iter: [126700/500000] l1: 0.047132 ae: 0.104372 wgan_g: -73.346741 wgan_d: -15.171247 wgan_gp: 0.486007 g: 0.108458 d: -10.311181 speed: 1.09 batches/s 
2021-10-30 14:52:55,765 INFO Iter: [126800/500000] l1: 0.050445 ae: 0.097790 wgan_g: -50.647449 wgan_d: -18.726540 wgan_gp: 0.206099 g: 0.127235 d: -16.665548 speed: 1.09 batches/s 
2021-10-30 14:54:25,951 INFO Iter: [126900/500000] l1: 0.058690 ae: 0.114490 wgan_g: -23.482571 wgan_d: -19.704767 wgan_gp: 0.260326 g: 0.184333 d: -17.101511 speed: 1.11 batches/s 
2021-10-30 14:55:56,339 INFO Iter: [127000/500000] l1: 0.045258 ae: 0.110433 wgan_g: -43.037872 wgan_d: -17.383682 wgan_gp: 0.255569 g: 0.143792 d: -14.827992 speed: 1.11 batches/s 
2021-10-30 14:57:26,688 INFO Iter: [127100/500000] l1: 0.059808 ae: 0.095373 wgan_g: -40.460655 wgan_d: -21.480923 wgan_gp: 0.256310 g: 0.145756 d: -18.917822 speed: 1.11 batches/s 
2021-10-30 14:58:56,825 INFO Iter: [127200/500000] l1: 0.046652 ae: 0.108711 wgan_g: -59.757244 wgan_d: -19.641716 wgan_gp: 0.280618 g: 0.126678 d: -16.835531 speed: 1.11 batches/s 
2021-10-30 15:00:27,942 INFO Iter: [127300/500000] l1: 0.047644 ae: 0.087230 wgan_g: -63.165218 wgan_d: -20.437727 wgan_gp: 0.398742 g: 0.098683 d: -16.450310 speed: 1.10 batches/s 
2021-10-30 15:01:58,179 INFO Iter: [127400/500000] l1: 0.048313 ae: 0.108717 wgan_g: -56.981865 wgan_d: -25.426905 wgan_gp: 0.278204 g: 0.131455 d: -22.644863 speed: 1.11 batches/s 
2021-10-30 15:03:28,623 INFO Iter: [127500/500000] l1: 0.053521 ae: 0.093215 wgan_g: -30.899578 wgan_d: -13.753237 wgan_gp: 0.224917 g: 0.145184 d: -11.504068 speed: 1.11 batches/s 
2021-10-30 15:04:59,439 INFO Iter: [127600/500000] l1: 0.052517 ae: 0.100140 wgan_g: -10.298024 wgan_d: -20.161545 wgan_gp: 0.158788 g: 0.172891 d: -18.573668 speed: 1.10 batches/s 
2021-10-30 15:06:29,468 INFO Iter: [127700/500000] l1: 0.051145 ae: 0.097162 wgan_g: 3.603274 wgan_d: -16.482206 wgan_gp: 0.233900 g: 0.181572 d: -14.143208 speed: 1.11 batches/s 
2021-10-30 15:07:59,563 INFO Iter: [127800/500000] l1: 0.050466 ae: 0.092250 wgan_g: -37.441505 wgan_d: -19.064430 wgan_gp: 0.260971 g: 0.133817 d: -16.454721 speed: 1.11 batches/s 
2021-10-30 15:09:30,902 INFO Iter: [127900/500000] l1: 0.056492 ae: 0.118975 wgan_g: -9.283426 wgan_d: -23.033062 wgan_gp: 0.273935 g: 0.201278 d: -20.293716 speed: 1.09 batches/s 
2021-10-30 15:11:02,008 INFO Iter: [128000/500000] l1: 0.055093 ae: 0.108921 wgan_g: -48.783279 wgan_d: -26.545160 wgan_gp: 0.343400 g: 0.148034 d: -23.111160 speed: 1.10 batches/s 
2021-10-30 15:12:33,382 INFO Iter: [128100/500000] l1: 0.047465 ae: 0.093426 wgan_g: -29.825939 wgan_d: -16.745289 wgan_gp: 0.154056 g: 0.139244 d: -15.204729 speed: 1.09 batches/s 
2021-10-30 15:14:04,653 INFO Iter: [128200/500000] l1: 0.048042 ae: 0.102985 wgan_g: -12.194263 wgan_d: -13.385850 wgan_gp: 0.164342 g: 0.169039 d: -11.742430 speed: 1.10 batches/s 
2021-10-30 15:15:38,065 INFO Iter: [128300/500000] l1: 0.054894 ae: 0.096224 wgan_g: -5.960042 wgan_d: -16.616781 wgan_gp: 0.236988 g: 0.175382 d: -14.246898 speed: 1.07 batches/s 
2021-10-30 15:17:09,182 INFO Iter: [128400/500000] l1: 0.049975 ae: 0.109076 wgan_g: -3.726927 wgan_d: -17.573975 wgan_gp: 0.202244 g: 0.187135 d: -15.551533 speed: 1.10 batches/s 
2021-10-30 15:18:41,384 INFO Iter: [128500/500000] l1: 0.053665 ae: 0.109596 wgan_g: -41.935844 wgan_d: -17.280930 wgan_gp: 0.204726 g: 0.153977 d: -15.233665 speed: 1.08 batches/s 
2021-10-30 15:20:11,910 INFO Iter: [128600/500000] l1: 0.052736 ae: 0.105498 wgan_g: -22.110451 wgan_d: -15.036889 wgan_gp: 0.228003 g: 0.167769 d: -12.756857 speed: 1.10 batches/s 
2021-10-30 15:21:42,594 INFO Iter: [128700/500000] l1: 0.052054 ae: 0.101645 wgan_g: -31.265686 wgan_d: -18.869432 wgan_gp: 0.318926 g: 0.153173 d: -15.680178 speed: 1.10 batches/s 
2021-10-30 15:23:13,705 INFO Iter: [128800/500000] l1: 0.050744 ae: 0.095662 wgan_g: -44.364399 wgan_d: -15.883259 wgan_gp: 0.283067 g: 0.131324 d: -13.052586 speed: 1.10 batches/s 
2021-10-30 15:24:44,429 INFO Iter: [128900/500000] l1: 0.052686 ae: 0.110220 wgan_g: -22.294270 wgan_d: -16.205502 wgan_gp: 0.195157 g: 0.173194 d: -14.253936 speed: 1.10 batches/s 
2021-10-30 15:26:14,862 INFO Iter: [129000/500000] l1: 0.053512 ae: 0.089498 wgan_g: -20.783638 wgan_d: -14.601913 wgan_gp: 0.175905 g: 0.150829 d: -12.842867 speed: 1.11 batches/s 
2021-10-30 15:27:45,494 INFO Iter: [129100/500000] l1: 0.052085 ae: 0.091421 wgan_g: -43.444965 wgan_d: -21.162376 wgan_gp: 0.229078 g: 0.128763 d: -18.871597 speed: 1.10 batches/s 
2021-10-30 15:29:16,454 INFO Iter: [129200/500000] l1: 0.055597 ae: 0.097304 wgan_g: -19.830605 wgan_d: -16.803944 wgan_gp: 0.196029 g: 0.163651 d: -14.843656 speed: 1.10 batches/s 
2021-10-30 15:30:49,823 INFO Iter: [129300/500000] l1: 0.039675 ae: 0.095245 wgan_g: -29.688143 wgan_d: -15.875047 wgan_gp: 0.223546 g: 0.132216 d: -13.639590 speed: 1.07 batches/s 
2021-10-30 15:32:20,870 INFO Iter: [129400/500000] l1: 0.055449 ae: 0.119569 wgan_g: -51.451889 wgan_d: -20.354733 wgan_gp: 0.287630 g: 0.158569 d: -17.478428 speed: 1.10 batches/s 
2021-10-30 15:33:51,978 INFO Iter: [129500/500000] l1: 0.042886 ae: 0.105756 wgan_g: -23.682507 wgan_d: -15.730599 wgan_gp: 0.237628 g: 0.154687 d: -13.354315 speed: 1.10 batches/s 
2021-10-30 15:35:23,080 INFO Iter: [129600/500000] l1: 0.051206 ae: 0.097596 wgan_g: -9.524221 wgan_d: -15.527256 wgan_gp: 0.155668 g: 0.169039 d: -13.970575 speed: 1.10 batches/s 
2021-10-30 15:36:54,001 INFO Iter: [129700/500000] l1: 0.051815 ae: 0.096514 wgan_g: -18.349346 wgan_d: -16.367065 wgan_gp: 0.208941 g: 0.159645 d: -14.277656 speed: 1.10 batches/s 
2021-10-30 15:38:25,367 INFO Iter: [129800/500000] l1: 0.051992 ae: 0.098265 wgan_g: -11.392030 wgan_d: -17.210884 wgan_gp: 0.244349 g: 0.168916 d: -14.767397 speed: 1.09 batches/s 
2021-10-30 15:39:56,380 INFO Iter: [129900/500000] l1: 0.043148 ae: 0.098652 wgan_g: -35.297741 wgan_d: -16.576208 wgan_gp: 0.204725 g: 0.134862 d: -14.528960 speed: 1.10 batches/s 
2021-10-30 15:41:26,755 INFO Iter: [130000/500000] l1: 0.060958 ae: 0.100735 wgan_g: -39.329983 wgan_d: -19.873659 wgan_gp: 0.236429 g: 0.154701 d: -17.509369 speed: 1.11 batches/s 
2021-10-30 15:42:57,754 INFO Iter: [130100/500000] l1: 0.045264 ae: 0.096114 wgan_g: -22.977640 wgan_d: -14.951786 wgan_gp: 0.251644 g: 0.146676 d: -12.435343 speed: 1.10 batches/s 
2021-10-30 15:44:28,983 INFO Iter: [130200/500000] l1: 0.045254 ae: 0.090853 wgan_g: -28.729683 wgan_d: -14.920284 wgan_gp: 0.175931 g: 0.134599 d: -13.160975 speed: 1.10 batches/s 
2021-10-30 15:46:00,696 INFO Iter: [130300/500000] l1: 0.052997 ae: 0.104216 wgan_g: -24.310013 wgan_d: -18.662937 wgan_gp: 0.234636 g: 0.164345 d: -16.316574 speed: 1.09 batches/s 
2021-10-30 15:47:32,104 INFO Iter: [130400/500000] l1: 0.057757 ae: 0.108073 wgan_g: -28.022175 wgan_d: -15.577585 wgan_gp: 0.183878 g: 0.170974 d: -13.738800 speed: 1.09 batches/s 
2021-10-30 15:49:03,730 INFO Iter: [130500/500000] l1: 0.046524 ae: 0.100897 wgan_g: -33.815350 wgan_d: -16.016171 wgan_gp: 0.227969 g: 0.143089 d: -13.736480 speed: 1.09 batches/s 
2021-10-30 15:50:35,136 INFO Iter: [130600/500000] l1: 0.048257 ae: 0.092325 wgan_g: -29.588001 wgan_d: -19.179296 wgan_gp: 0.231811 g: 0.139112 d: -16.861189 speed: 1.09 batches/s 
2021-10-30 15:52:06,496 INFO Iter: [130700/500000] l1: 0.050544 ae: 0.098738 wgan_g: -47.418716 wgan_d: -14.691850 wgan_gp: 0.226001 g: 0.131720 d: -12.431839 speed: 1.09 batches/s 
2021-10-30 15:53:37,910 INFO Iter: [130800/500000] l1: 0.049535 ae: 0.110309 wgan_g: -20.121868 wgan_d: -16.413015 wgan_gp: 0.212454 g: 0.171691 d: -14.288473 speed: 1.09 batches/s 
2021-10-30 15:55:09,513 INFO Iter: [130900/500000] l1: 0.040567 ae: 0.092037 wgan_g: -60.360382 wgan_d: -16.676512 wgan_gp: 0.309226 g: 0.098765 d: -13.584255 speed: 1.09 batches/s 
2021-10-30 15:56:41,910 INFO Iter: [131000/500000] l1: 0.046892 ae: 0.098315 wgan_g: -27.317307 wgan_d: -17.083467 wgan_gp: 0.216772 g: 0.146931 d: -14.915751 speed: 1.08 batches/s 
2021-10-30 15:58:13,802 INFO Iter: [131100/500000] l1: 0.048048 ae: 0.110154 wgan_g: -34.399670 wgan_d: -14.527048 wgan_gp: 0.186388 g: 0.155443 d: -12.663164 speed: 1.09 batches/s 
2021-10-30 15:59:45,672 INFO Iter: [131200/500000] l1: 0.053444 ae: 0.105468 wgan_g: -15.087640 wgan_d: -16.054722 wgan_gp: 0.161701 g: 0.175607 d: -14.437711 speed: 1.09 batches/s 
2021-10-30 16:01:17,177 INFO Iter: [131300/500000] l1: 0.050988 ae: 0.097717 wgan_g: -13.804589 wgan_d: -16.757956 wgan_gp: 0.144143 g: 0.164641 d: -15.316529 speed: 1.09 batches/s 
2021-10-30 16:02:48,806 INFO Iter: [131400/500000] l1: 0.044602 ae: 0.105893 wgan_g: -60.551155 wgan_d: -23.368271 wgan_gp: 0.346546 g: 0.120043 d: -19.902811 speed: 1.09 batches/s 
2021-10-30 16:04:20,804 INFO Iter: [131500/500000] l1: 0.043728 ae: 0.097626 wgan_g: -41.644279 wgan_d: -15.990596 wgan_gp: 0.254899 g: 0.127981 d: -13.441610 speed: 1.09 batches/s 
2021-10-30 16:05:51,263 INFO Iter: [131600/500000] l1: 0.051113 ae: 0.090975 wgan_g: -45.185406 wgan_d: -21.267122 wgan_gp: 0.275456 g: 0.125320 d: -18.512566 speed: 1.11 batches/s 
2021-10-30 16:07:21,640 INFO Iter: [131700/500000] l1: 0.056322 ae: 0.101832 wgan_g: -40.119919 wgan_d: -18.355312 wgan_gp: 0.278065 g: 0.149664 d: -15.574664 speed: 1.11 batches/s 
2021-10-30 16:08:52,101 INFO Iter: [131800/500000] l1: 0.056801 ae: 0.110744 wgan_g: -7.520752 wgan_d: -15.028069 wgan_gp: 0.251794 g: 0.193533 d: -12.510125 speed: 1.11 batches/s 
2021-10-30 16:09:59,748 INFO Iter: [131900/500000] l1: nan ae: nan wgan_g: -42.877808 wgan_d: -63.830734 wgan_gp: 0.561725 g: nan d: -58.213486 speed: 1.47 batches/s 
2021-10-30 16:34:46,905 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-30 16:34:46,905 INFO Random seed: 6261
2021-10-30 16:34:46,906 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-30 16:34:46,906 INFO Training on dataset: imagenet
2021-10-30 16:34:57,990 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-30 16:34:57,990 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-30 16:34:57,991 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-30 16:34:58,199 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-30 16:35:00,931 INFO Iter: [131000/500000] l1: 0.049292 ae: 0.101997 wgan_g: -36.461521 wgan_d: -11.343584 wgan_gp: 0.296734 g: 0.145085 d: -8.376243 speed: 45.33 batches/s 
2021-10-30 16:36:32,643 INFO Iter: [131100/500000] l1: 0.042590 ae: 0.096172 wgan_g: -38.639435 wgan_d: -18.626474 wgan_gp: 0.199152 g: 0.127876 d: -16.634949 speed: 1.09 batches/s 
2021-10-30 16:38:06,238 INFO Iter: [131200/500000] l1: 0.053907 ae: 0.107917 wgan_g: -43.001259 wgan_d: -19.821682 wgan_gp: 0.302170 g: 0.151189 d: -16.799980 speed: 1.07 batches/s 
2021-10-30 16:39:37,075 INFO Iter: [131300/500000] l1: 0.061033 ae: 0.118522 wgan_g: -8.422852 wgan_d: -21.999762 wgan_gp: 0.244186 g: 0.207043 d: -19.557899 speed: 1.10 batches/s 
2021-10-30 16:41:03,108 INFO Iter: [131400/500000] l1: nan ae: nan wgan_g: -56.648415 wgan_d: -54.750751 wgan_gp: 0.351649 g: nan d: -51.234261 speed: 1.16 batches/s 
2021-10-30 16:43:01,972 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-30 16:43:01,972 INFO Random seed: 5853
2021-10-30 16:43:01,972 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-30 16:43:01,973 INFO Training on dataset: imagenet
2021-10-30 16:43:13,006 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-30 16:43:13,006 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-30 16:43:13,006 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-30 16:43:13,218 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-30 16:43:15,830 INFO Iter: [131000/500000] l1: 0.050907 ae: 0.106439 wgan_g: -37.225307 wgan_d: -6.890225 wgan_gp: 0.266975 g: 0.151590 d: -4.220471 speed: 48.93 batches/s 
2021-10-30 16:44:47,988 INFO Iter: [131100/500000] l1: 0.042738 ae: 0.097355 wgan_g: -39.546333 wgan_d: -18.300377 wgan_gp: 0.188242 g: 0.128565 d: -16.417955 speed: 1.09 batches/s 
2021-10-30 16:46:19,012 INFO Iter: [131200/500000] l1: 0.054862 ae: 0.112704 wgan_g: -42.189617 wgan_d: -18.473930 wgan_gp: 0.266487 g: 0.158890 d: -15.809061 speed: 1.10 batches/s 
2021-10-30 16:47:49,850 INFO Iter: [131300/500000] l1: 0.060965 ae: 0.120550 wgan_g: -24.955534 wgan_d: -21.891174 wgan_gp: 0.238681 g: 0.192862 d: -19.504362 speed: 1.10 batches/s 
2021-10-30 16:49:16,342 INFO Iter: [131400/500000] l1: nan ae: nan wgan_g: -44.082333 wgan_d: -77.798233 wgan_gp: 0.558533 g: nan d: -72.212906 speed: 1.15 batches/s 
2021-10-30 18:39:45,912 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-30 18:39:45,912 INFO Random seed: 4169
2021-10-30 18:39:45,912 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-30 18:39:45,912 INFO Training on dataset: imagenet
2021-10-30 18:39:56,832 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-30 18:39:56,832 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-30 18:39:56,832 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-30 18:39:57,035 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-30 18:39:59,646 INFO Iter: [131000/500000] l1: 0.050133 ae: 0.105563 wgan_g: -18.947124 wgan_d: -10.116473 wgan_gp: 0.192065 g: 0.167888 d: -8.195827 speed: 48.16 batches/s 
2021-10-30 18:41:30,779 INFO Iter: [131100/500000] l1: 0.042000 ae: 0.097253 wgan_g: -43.077232 wgan_d: -19.164682 wgan_gp: 0.220270 g: 0.124025 d: -16.961987 speed: 1.10 batches/s 
2021-10-30 18:43:01,163 INFO Iter: [131200/500000] l1: 0.054371 ae: 0.112257 wgan_g: -37.421478 wgan_d: -19.415012 wgan_gp: 0.301028 g: 0.162531 d: -16.404736 speed: 1.11 batches/s 
2021-10-30 18:44:31,269 INFO Iter: [131300/500000] l1: 0.060933 ae: 0.118526 wgan_g: -11.319620 wgan_d: -22.905869 wgan_gp: 0.261603 g: 0.204032 d: -20.289835 speed: 1.11 batches/s 
2021-10-30 18:46:01,409 INFO Iter: [131400/500000] l1: 0.052480 ae: 0.111742 wgan_g: -45.865517 wgan_d: -21.657078 wgan_gp: 0.328661 g: 0.151201 d: -18.370464 speed: 1.11 batches/s 
2021-10-30 18:47:32,461 INFO Iter: [131500/500000] l1: 0.045992 ae: 0.099954 wgan_g: -14.565689 wgan_d: -16.720730 wgan_gp: 0.170575 g: 0.160569 d: -15.014980 speed: 1.10 batches/s 
2021-10-30 18:48:58,447 INFO Iter: [131600/500000] l1: nan ae: nan wgan_g: -52.757221 wgan_d: -77.154129 wgan_gp: 0.794904 g: nan d: -69.205093 speed: 1.16 batches/s 
2021-10-30 21:06:35,352 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-30 21:06:35,352 INFO Random seed: 1618
2021-10-30 21:06:35,353 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-30 21:06:35,353 INFO Training on dataset: imagenet
2021-10-30 21:06:46,087 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-30 21:06:46,087 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-30 21:06:46,088 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-30 21:06:46,287 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-30 21:06:48,795 INFO Iter: [131000/500000] l1: 0.048690 ae: 0.106781 wgan_g: 2.790287 wgan_d: -13.656603 wgan_gp: 0.188076 g: 0.189355 d: -11.775840 speed: 49.95 batches/s 
2021-10-30 21:08:20,615 INFO Iter: [131100/500000] l1: 0.042864 ae: 0.099251 wgan_g: -37.064972 wgan_d: -18.412510 wgan_gp: 0.162150 g: 0.133473 d: -16.791006 speed: 1.09 batches/s 
2021-10-30 21:09:53,492 INFO Iter: [131200/500000] l1: 0.054750 ae: 0.112259 wgan_g: -39.461075 wgan_d: -18.670425 wgan_gp: 0.282540 g: 0.160950 d: -15.845025 speed: 1.08 batches/s 
2021-10-30 21:11:28,084 INFO Iter: [131300/500000] l1: 0.061403 ae: 0.116730 wgan_g: -16.303595 wgan_d: -21.152704 wgan_gp: 0.259003 g: 0.197456 d: -18.562677 speed: 1.06 batches/s 
2021-10-30 21:13:02,505 INFO Iter: [131400/500000] l1: 0.052906 ae: 0.106881 wgan_g: -18.162390 wgan_d: -15.308556 wgan_gp: 0.232744 g: 0.173582 d: -12.981113 speed: 1.06 batches/s 
2021-10-30 21:14:34,356 INFO Iter: [131500/500000] l1: 0.045838 ae: 0.096175 wgan_g: 0.952612 wgan_d: -14.804824 wgan_gp: 0.136682 g: 0.171368 d: -13.438002 speed: 1.09 batches/s 
2021-10-30 21:16:05,303 INFO Iter: [131600/500000] l1: 0.060389 ae: 0.097692 wgan_g: -29.957136 wgan_d: -19.461803 wgan_gp: 0.242862 g: 0.159740 d: -17.033184 speed: 1.10 batches/s 
2021-10-30 21:17:36,161 INFO Iter: [131700/500000] l1: 0.048299 ae: 0.106480 wgan_g: -56.882088 wgan_d: -22.123007 wgan_gp: 0.294587 g: 0.128853 d: -19.177135 speed: 1.10 batches/s 
2021-10-30 21:19:07,474 INFO Iter: [131800/500000] l1: 0.054378 ae: 0.091730 wgan_g: -30.650932 wgan_d: -17.166256 wgan_gp: 0.193046 g: 0.144678 d: -15.235795 speed: 1.10 batches/s 
2021-10-30 21:20:40,642 INFO Iter: [131900/500000] l1: 0.054875 ae: 0.101035 wgan_g: -30.528069 wgan_d: -16.219860 wgan_gp: 0.217447 g: 0.156564 d: -14.045388 speed: 1.07 batches/s 
2021-10-30 21:22:13,716 INFO Iter: [132000/500000] l1: 0.049661 ae: 0.098384 wgan_g: -14.905058 wgan_d: -16.248619 wgan_gp: 0.219103 g: 0.162750 d: -14.057590 speed: 1.07 batches/s 
2021-10-30 21:23:44,422 INFO Iter: [132100/500000] l1: 0.058766 ae: 0.091938 wgan_g: -21.414726 wgan_d: -17.536713 wgan_gp: 0.206412 g: 0.159430 d: -15.472593 speed: 1.10 batches/s 
2021-10-30 21:25:16,541 INFO Iter: [132200/500000] l1: 0.044133 ae: 0.096566 wgan_g: -35.584946 wgan_d: -16.045994 wgan_gp: 0.184631 g: 0.133254 d: -14.199681 speed: 1.09 batches/s 
2021-10-30 21:26:47,160 INFO Iter: [132300/500000] l1: 0.055349 ae: 0.109962 wgan_g: -17.883387 wgan_d: -23.847057 wgan_gp: 0.362462 g: 0.180490 d: -20.222435 speed: 1.10 batches/s 
2021-10-30 21:28:17,429 INFO Iter: [132400/500000] l1: 0.055340 ae: 0.108117 wgan_g: -53.371834 wgan_d: -18.137623 wgan_gp: 0.264034 g: 0.142775 d: -15.497281 speed: 1.11 batches/s 
2021-10-30 21:29:48,384 INFO Iter: [132500/500000] l1: 0.047695 ae: 0.091671 wgan_g: -43.500114 wgan_d: -16.422636 wgan_gp: 0.244927 g: 0.123739 d: -13.973364 speed: 1.10 batches/s 
2021-10-30 21:31:19,211 INFO Iter: [132600/500000] l1: 0.049420 ae: 0.092083 wgan_g: -8.621202 wgan_d: -17.192211 wgan_gp: 0.166888 g: 0.161182 d: -15.523331 speed: 1.10 batches/s 
2021-10-30 21:32:50,302 INFO Iter: [132700/500000] l1: 0.055444 ae: 0.098365 wgan_g: -30.604582 wgan_d: -19.387302 wgan_gp: 0.249783 g: 0.153967 d: -16.889471 speed: 1.10 batches/s 
2021-10-30 21:34:21,111 INFO Iter: [132800/500000] l1: 0.048782 ae: 0.099924 wgan_g: -46.032646 wgan_d: -17.043779 wgan_gp: 0.141861 g: 0.132415 d: -15.625168 speed: 1.10 batches/s 
2021-10-30 21:35:51,504 INFO Iter: [132900/500000] l1: 0.056226 ae: 0.103610 wgan_g: -55.901321 wgan_d: -17.811720 wgan_gp: 0.275464 g: 0.135902 d: -15.057077 speed: 1.11 batches/s 
2021-10-30 21:36:51,985 INFO Iter: [133000/500000] l1: nan ae: nan wgan_g: -28.614618 wgan_d: -57.444519 wgan_gp: 0.448140 g: nan d: -52.963120 speed: 1.65 batches/s 
2021-10-30 22:05:13,178 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-30 22:05:13,179 INFO Random seed: 1831
2021-10-30 22:05:13,179 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-30 22:05:13,179 INFO Training on dataset: imagenet
2021-10-30 22:05:24,167 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-30 22:05:24,168 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-30 22:05:24,168 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 132000
2021-10-30 22:05:24,385 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 132000
2021-10-30 22:05:27,013 INFO Iter: [132000/500000] l1: 0.048340 ae: 0.103017 wgan_g: -19.200838 wgan_d: -12.843224 wgan_gp: 0.233302 g: 0.162427 d: -10.510203 speed: 48.94 batches/s 
2021-10-30 22:06:24,861 INFO Iter: [132100/500000] l1: nan ae: nan wgan_g: -46.972908 wgan_d: -48.960754 wgan_gp: 0.466388 g: nan d: -44.296875 speed: 1.73 batches/s 
2021-10-31 01:09:12,665 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 01:09:12,666 INFO Random seed: 8408
2021-10-31 01:09:12,666 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 01:09:12,666 INFO Training on dataset: imagenet
2021-10-31 01:09:23,651 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 01:09:23,652 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 01:09:23,652 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 132000
2021-10-31 01:09:23,877 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 132000
2021-10-31 01:09:25,857 INFO Iter: [132000/500000] l1: nan ae: nan wgan_g: -43.965698 wgan_d: -3.539118 wgan_gp: 0.257052 g: nan d: -0.968593 speed: 71.88 batches/s 
2021-10-31 01:10:21,627 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 01:10:21,627 INFO Random seed: 9880
2021-10-31 01:10:21,627 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 01:10:21,627 INFO Training on dataset: imagenet
2021-10-31 01:10:32,727 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 01:10:32,727 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 01:10:32,727 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-31 01:10:32,891 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-31 01:10:35,527 INFO Iter: [131000/500000] l1: 0.047929 ae: 0.108485 wgan_g: 5.276082 wgan_d: -12.834358 wgan_gp: 0.225363 g: 0.192973 d: -10.580727 speed: 51.52 batches/s 
2021-10-31 01:12:07,304 INFO Iter: [131100/500000] l1: 0.042562 ae: 0.098914 wgan_g: -37.472717 wgan_d: -18.611773 wgan_gp: 0.180546 g: 0.132298 d: -16.806309 speed: 1.09 batches/s 
2021-10-31 01:13:38,863 INFO Iter: [131200/500000] l1: 0.054403 ae: 0.112259 wgan_g: -43.258156 wgan_d: -19.411858 wgan_gp: 0.309092 g: 0.156736 d: -16.320934 speed: 1.09 batches/s 
2021-10-31 01:15:10,067 INFO Iter: [131300/500000] l1: 0.061219 ae: 0.121636 wgan_g: -10.811685 wgan_d: -23.459402 wgan_gp: 0.249858 g: 0.208614 d: -20.960819 speed: 1.10 batches/s 
2021-10-31 01:16:41,086 INFO Iter: [131400/500000] l1: 0.053212 ae: 0.108932 wgan_g: -32.892265 wgan_d: -15.206377 wgan_gp: 0.214983 g: 0.161680 d: -13.056542 speed: 1.10 batches/s 
2021-10-31 01:18:14,208 INFO Iter: [131500/500000] l1: 0.045665 ae: 0.096841 wgan_g: -7.946930 wgan_d: -15.576899 wgan_gp: 0.210637 g: 0.163061 d: -13.470531 speed: 1.07 batches/s 
2021-10-31 01:19:48,788 INFO Iter: [131600/500000] l1: 0.060591 ae: 0.096957 wgan_g: -31.281483 wgan_d: -19.616716 wgan_gp: 0.273389 g: 0.157776 d: -16.882826 speed: 1.06 batches/s 
2021-10-31 01:21:20,265 INFO Iter: [131700/500000] l1: 0.047259 ae: 0.100337 wgan_g: -47.099808 wgan_d: -17.983871 wgan_gp: 0.241949 g: 0.130015 d: -15.564384 speed: 1.09 batches/s 
2021-10-31 01:22:51,271 INFO Iter: [131800/500000] l1: 0.054375 ae: 0.094560 wgan_g: -12.528152 wgan_d: -16.847744 wgan_gp: 0.150858 g: 0.166194 d: -15.339167 speed: 1.10 batches/s 
2021-10-31 01:24:22,671 INFO Iter: [131900/500000] l1: 0.053729 ae: 0.098158 wgan_g: -58.719788 wgan_d: -18.224274 wgan_gp: 0.251968 g: 0.123544 d: -15.704592 speed: 1.09 batches/s 
2021-10-31 01:25:54,802 INFO Iter: [132000/500000] l1: 0.049484 ae: 0.096944 wgan_g: -20.686651 wgan_d: -16.289074 wgan_gp: 0.241986 g: 0.155027 d: -13.869219 speed: 1.09 batches/s 
2021-10-31 01:27:26,036 INFO Iter: [132100/500000] l1: 0.058249 ae: 0.091976 wgan_g: -26.440718 wgan_d: -19.356113 wgan_gp: 0.269146 g: 0.153829 d: -16.664658 speed: 1.10 batches/s 
2021-10-31 01:28:56,980 INFO Iter: [132200/500000] l1: 0.044844 ae: 0.097919 wgan_g: -14.175678 wgan_d: -15.538285 wgan_gp: 0.191195 g: 0.157140 d: -13.626339 speed: 1.10 batches/s 
2021-10-31 01:30:27,849 INFO Iter: [132300/500000] l1: 0.056335 ae: 0.107204 wgan_g: -23.008074 wgan_d: -22.636202 wgan_gp: 0.286755 g: 0.173239 d: -19.768650 speed: 1.10 batches/s 
2021-10-31 01:31:58,813 INFO Iter: [132400/500000] l1: 0.054974 ae: 0.104270 wgan_g: -57.015038 wgan_d: -19.514488 wgan_gp: 0.249068 g: 0.134077 d: -17.023808 speed: 1.10 batches/s 
2021-10-31 01:33:31,204 INFO Iter: [132500/500000] l1: 0.047697 ae: 0.093778 wgan_g: -24.337582 wgan_d: -15.275553 wgan_gp: 0.218821 g: 0.145432 d: -13.087340 speed: 1.08 batches/s 
2021-10-31 01:35:02,471 INFO Iter: [132600/500000] l1: 0.048291 ae: 0.087475 wgan_g: -25.823454 wgan_d: -17.854679 wgan_gp: 0.173068 g: 0.137095 d: -16.123995 speed: 1.10 batches/s 
2021-10-31 01:36:33,528 INFO Iter: [132700/500000] l1: 0.055527 ae: 0.103023 wgan_g: -31.586199 wgan_d: -20.081665 wgan_gp: 0.308441 g: 0.158673 d: -16.997253 speed: 1.10 batches/s 
2021-10-31 01:38:04,352 INFO Iter: [132800/500000] l1: 0.048824 ae: 0.100773 wgan_g: -25.458059 wgan_d: -15.098152 wgan_gp: 0.126477 g: 0.154059 d: -13.833381 speed: 1.10 batches/s 
2021-10-31 01:39:35,420 INFO Iter: [132900/500000] l1: 0.056440 ae: 0.105216 wgan_g: -74.174858 wgan_d: -19.504925 wgan_gp: 0.355846 g: 0.119812 d: -15.946464 speed: 1.10 batches/s 
2021-10-31 01:40:36,678 INFO Iter: [133000/500000] l1: nan ae: nan wgan_g: -27.102139 wgan_d: -69.045815 wgan_gp: 0.713162 g: nan d: -61.914192 speed: 1.63 batches/s 
2021-10-31 08:01:06,839 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 08:01:06,839 INFO Random seed: 9914
2021-10-31 08:01:06,840 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 08:01:06,840 INFO Training on dataset: imagenet
2021-10-31 08:01:17,751 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 08:01:17,751 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 08:01:17,751 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 132000
2021-10-31 08:01:17,963 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 132000
2021-10-31 08:01:20,639 INFO Iter: [132000/500000] l1: 0.048497 ae: 0.104329 wgan_g: -23.014605 wgan_d: -12.556686 wgan_gp: 0.260406 g: 0.160377 d: -9.952628 speed: 47.41 batches/s 
2021-10-31 08:02:18,456 INFO Iter: [132100/500000] l1: nan ae: nan wgan_g: -49.331833 wgan_d: -64.408997 wgan_gp: 0.527367 g: nan d: -59.135326 speed: 1.73 batches/s 
2021-10-31 08:07:31,790 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 08:07:31,790 INFO Random seed: 7648
2021-10-31 08:07:31,791 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 08:07:31,791 INFO Training on dataset: imagenet
2021-10-31 08:07:42,650 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 08:07:42,651 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 08:07:42,651 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 132000
2021-10-31 08:07:42,864 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 132000
2021-10-31 08:07:44,718 INFO Iter: [132000/500000] l1: nan ae: nan wgan_g: -50.694763 wgan_d: 4.340643 wgan_gp: 0.220981 g: nan d: 6.550457 speed: 77.09 batches/s 
2021-10-31 08:08:23,235 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 08:08:23,236 INFO Random seed: 5046
2021-10-31 08:08:23,236 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 08:08:23,236 INFO Training on dataset: imagenet
2021-10-31 08:08:34,189 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 08:08:34,190 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 08:08:34,190 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-31 08:08:34,351 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-31 08:08:36,922 INFO Iter: [131000/500000] l1: 0.050466 ae: 0.160439 wgan_g: -14.325857 wgan_d: -14.000154 wgan_gp: 0.242205 g: 0.238759 d: -11.578102 speed: 53.23 batches/s 
2021-10-31 08:10:08,550 INFO Iter: [131100/500000] l1: 0.043340 ae: 0.100021 wgan_g: -21.322405 wgan_d: -16.912245 wgan_gp: 0.144092 g: 0.150711 d: -15.471326 speed: 1.09 batches/s 
2021-10-31 08:11:39,182 INFO Iter: [131200/500000] l1: 0.055202 ae: 0.116051 wgan_g: -15.504183 wgan_d: -18.498060 wgan_gp: 0.260249 g: 0.190000 d: -15.895567 speed: 1.10 batches/s 
2021-10-31 08:13:09,985 INFO Iter: [131300/500000] l1: 0.060831 ae: 0.115867 wgan_g: -12.462234 wgan_d: -21.470573 wgan_gp: 0.208400 g: 0.199576 d: -19.386578 speed: 1.10 batches/s 
2021-10-31 08:14:42,373 INFO Iter: [131400/500000] l1: 0.051820 ae: 0.107845 wgan_g: -56.128677 wgan_d: -20.691299 wgan_gp: 0.341770 g: 0.135470 d: -17.273598 speed: 1.08 batches/s 
2021-10-31 08:16:15,394 INFO Iter: [131500/500000] l1: 0.045664 ae: 0.094342 wgan_g: -22.139286 wgan_d: -15.777216 wgan_gp: 0.189851 g: 0.145868 d: -13.878710 speed: 1.08 batches/s 
2021-10-31 08:17:45,708 INFO Iter: [131600/500000] l1: 0.060866 ae: 0.098858 wgan_g: -18.689110 wgan_d: -18.821507 wgan_gp: 0.273000 g: 0.172980 d: -16.091507 speed: 1.11 batches/s 
2021-10-31 08:19:16,125 INFO Iter: [131700/500000] l1: 0.047579 ae: 0.105735 wgan_g: -51.654270 wgan_d: -21.240181 wgan_gp: 0.243430 g: 0.132322 d: -18.805876 speed: 1.11 batches/s 
2021-10-31 08:20:46,813 INFO Iter: [131800/500000] l1: 0.053231 ae: 0.092736 wgan_g: -34.395393 wgan_d: -17.954588 wgan_gp: 0.206378 g: 0.140765 d: -15.890804 speed: 1.10 batches/s 
2021-10-31 08:22:17,641 INFO Iter: [131900/500000] l1: 0.054272 ae: 0.098413 wgan_g: -36.601723 wgan_d: -16.539076 wgan_gp: 0.251079 g: 0.146621 d: -14.028288 speed: 1.10 batches/s 
2021-10-31 08:23:49,148 INFO Iter: [132000/500000] l1: 0.049411 ae: 0.096668 wgan_g: -25.823788 wgan_d: -15.894206 wgan_gp: 0.255209 g: 0.149470 d: -13.342112 speed: 1.09 batches/s 
2021-10-31 08:25:21,804 INFO Iter: [132100/500000] l1: 0.058473 ae: 0.092084 wgan_g: -30.935856 wgan_d: -19.213793 wgan_gp: 0.253006 g: 0.149733 d: -16.683731 speed: 1.08 batches/s 
2021-10-31 08:26:53,220 INFO Iter: [132200/500000] l1: 0.045248 ae: 0.096448 wgan_g: -10.436675 wgan_d: -15.971721 wgan_gp: 0.175820 g: 0.159598 d: -14.213516 speed: 1.09 batches/s 
2021-10-31 08:28:24,379 INFO Iter: [132300/500000] l1: 0.055839 ae: 0.107962 wgan_g: -24.274357 wgan_d: -24.124226 wgan_gp: 0.350602 g: 0.172287 d: -20.618204 speed: 1.10 batches/s 
2021-10-31 08:29:55,153 INFO Iter: [132400/500000] l1: 0.054916 ae: 0.106416 wgan_g: -47.264278 wgan_d: -19.580334 wgan_gp: 0.239153 g: 0.146334 d: -17.188803 speed: 1.10 batches/s 
2021-10-31 08:31:25,724 INFO Iter: [132500/500000] l1: 0.047434 ae: 0.098155 wgan_g: -22.380949 wgan_d: -15.248184 wgan_gp: 0.231431 g: 0.152326 d: -12.933878 speed: 1.10 batches/s 
2021-10-31 08:32:56,636 INFO Iter: [132600/500000] l1: 0.048424 ae: 0.088033 wgan_g: -12.372190 wgan_d: -17.373734 wgan_gp: 0.177977 g: 0.151376 d: -15.593963 speed: 1.10 batches/s 
2021-10-31 08:34:27,384 INFO Iter: [132700/500000] l1: 0.056392 ae: 0.105882 wgan_g: -13.937850 wgan_d: -19.522629 wgan_gp: 0.216648 g: 0.180791 d: -17.356146 speed: 1.10 batches/s 
2021-10-31 08:35:57,624 INFO Iter: [132800/500000] l1: 0.048110 ae: 0.096672 wgan_g: -35.647606 wgan_d: -16.113708 wgan_gp: 0.128331 g: 0.138091 d: -14.830403 speed: 1.11 batches/s 
2021-10-31 08:37:28,020 INFO Iter: [132900/500000] l1: 0.056529 ae: 0.103811 wgan_g: -79.202827 wgan_d: -19.341892 wgan_gp: 0.382638 g: 0.113205 d: -15.515509 speed: 1.11 batches/s 
2021-10-31 08:38:28,901 INFO Iter: [133000/500000] l1: nan ae: nan wgan_g: -19.454559 wgan_d: -77.464371 wgan_gp: 0.482243 g: nan d: -72.641937 speed: 1.64 batches/s 
2021-10-31 09:18:33,865 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 09:18:33,865 INFO Random seed: 2533
2021-10-31 09:18:33,865 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 09:18:33,865 INFO Training on dataset: imagenet
2021-10-31 09:18:44,757 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 09:18:44,757 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 09:18:44,757 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-31 09:18:44,971 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-31 09:18:47,578 INFO Iter: [131000/500000] l1: 0.048031 ae: 0.110965 wgan_g: -30.454628 wgan_d: -11.657860 wgan_gp: 0.247726 g: 0.160341 d: -9.180603 speed: 48.81 batches/s 
2021-10-31 09:19:45,834 INFO Iter: [131100/500000] l1: nan ae: nan wgan_g: -23.646873 wgan_d: -71.895943 wgan_gp: 0.425380 g: nan d: -67.642143 speed: 1.72 batches/s 
2021-10-31 09:22:18,613 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 09:22:18,613 INFO Random seed: 4028
2021-10-31 09:22:18,613 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 09:22:18,613 INFO Training on dataset: imagenet
2021-10-31 09:22:29,674 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 09:22:29,674 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 09:22:29,675 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-31 09:22:29,879 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-31 09:22:31,781 INFO Iter: [131000/500000] l1: nan ae: nan wgan_g: -25.787071 wgan_d: -28.932678 wgan_gp: 0.180633 g: nan d: -27.126352 speed: 73.96 batches/s 
2021-10-31 09:22:56,403 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 09:22:56,403 INFO Random seed: 2419
2021-10-31 09:22:56,403 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 09:22:56,403 INFO Training on dataset: imagenet
2021-10-31 09:23:07,343 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 09:23:07,344 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 09:23:07,344 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 130000
2021-10-31 09:23:07,510 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 130000
2021-10-31 09:23:10,151 INFO Iter: [130000/500000] l1: 0.048851 ae: 0.102550 wgan_g: -50.090897 wgan_d: -14.736803 wgan_gp: 0.406215 g: 0.131591 d: -10.674652 speed: 51.52 batches/s 
2021-10-31 09:24:41,706 INFO Iter: [130100/500000] l1: 0.043063 ae: 0.096232 wgan_g: -38.421600 wgan_d: -19.426548 wgan_gp: 0.165383 g: 0.128732 d: -17.772722 speed: 1.09 batches/s 
2021-10-31 09:26:12,741 INFO Iter: [130200/500000] l1: 0.054057 ae: 0.110945 wgan_g: -41.801838 wgan_d: -20.441139 wgan_gp: 0.339783 g: 0.156201 d: -17.043308 speed: 1.10 batches/s 
2021-10-31 09:27:43,484 INFO Iter: [130300/500000] l1: 0.060981 ae: 0.116382 wgan_g: -22.175518 wgan_d: -22.835560 wgan_gp: 0.221847 g: 0.190660 d: -20.617085 speed: 1.10 batches/s 
2021-10-31 09:29:14,079 INFO Iter: [130400/500000] l1: 0.052556 ae: 0.110606 wgan_g: -74.578468 wgan_d: -20.822020 wgan_gp: 0.367297 g: 0.121216 d: -17.149050 speed: 1.10 batches/s 
2021-10-31 09:30:44,864 INFO Iter: [130500/500000] l1: 0.045835 ae: 0.097225 wgan_g: -19.291809 wgan_d: -15.614939 wgan_gp: 0.183090 g: 0.152380 d: -13.784038 speed: 1.10 batches/s 
2021-10-31 09:32:15,720 INFO Iter: [130600/500000] l1: 0.061485 ae: 0.101021 wgan_g: -17.414883 wgan_d: -18.627676 wgan_gp: 0.253079 g: 0.177592 d: -16.096882 speed: 1.10 batches/s 
2021-10-31 09:33:46,406 INFO Iter: [130700/500000] l1: 0.047589 ae: 0.101040 wgan_g: -56.439617 wgan_d: -19.721062 wgan_gp: 0.282899 g: 0.121914 d: -16.892069 speed: 1.10 batches/s 
2021-10-31 09:35:17,303 INFO Iter: [130800/500000] l1: 0.053983 ae: 0.090998 wgan_g: -19.171211 wgan_d: -16.872974 wgan_gp: 0.187210 g: 0.154807 d: -15.000879 speed: 1.10 batches/s 
2021-10-31 09:36:48,537 INFO Iter: [130900/500000] l1: 0.054163 ae: 0.102267 wgan_g: -35.342735 wgan_d: -17.288197 wgan_gp: 0.236907 g: 0.152372 d: -14.919129 speed: 1.10 batches/s 
2021-10-31 09:38:19,956 INFO Iter: [131000/500000] l1: 0.049455 ae: 0.097236 wgan_g: -32.956932 wgan_d: -16.710571 wgan_gp: 0.241328 g: 0.143072 d: -14.297292 speed: 1.09 batches/s 
2021-10-31 09:39:51,551 INFO Iter: [131100/500000] l1: 0.058707 ae: 0.094203 wgan_g: -21.590984 wgan_d: -17.777323 wgan_gp: 0.163848 g: 0.161901 d: -16.138840 speed: 1.09 batches/s 
2021-10-31 09:41:22,618 INFO Iter: [131200/500000] l1: 0.044274 ae: 0.096039 wgan_g: -27.737650 wgan_d: -15.613049 wgan_gp: 0.213028 g: 0.140638 d: -13.482764 speed: 1.10 batches/s 
2021-10-31 09:42:53,428 INFO Iter: [131300/500000] l1: 0.055820 ae: 0.106231 wgan_g: -9.935492 wgan_d: -23.943390 wgan_gp: 0.312958 g: 0.184525 d: -20.813812 speed: 1.10 batches/s 
2021-10-31 09:44:24,049 INFO Iter: [131400/500000] l1: 0.054444 ae: 0.106438 wgan_g: -44.898575 wgan_d: -18.634916 wgan_gp: 0.290924 g: 0.148159 d: -15.725676 speed: 1.10 batches/s 
2021-10-31 09:45:54,764 INFO Iter: [131500/500000] l1: 0.046632 ae: 0.090706 wgan_g: -55.438652 wgan_d: -17.813475 wgan_gp: 0.299199 g: 0.109367 d: -14.821487 speed: 1.10 batches/s 
2021-10-31 09:47:26,075 INFO Iter: [131600/500000] l1: 0.048987 ae: 0.087522 wgan_g: -13.233168 wgan_d: -17.224464 wgan_gp: 0.193414 g: 0.150578 d: -15.290328 speed: 1.10 batches/s 
2021-10-31 09:48:56,911 INFO Iter: [131700/500000] l1: 0.055388 ae: 0.102345 wgan_g: -16.852596 wgan_d: -18.621353 wgan_gp: 0.230182 g: 0.172427 d: -16.319530 speed: 1.10 batches/s 
2021-10-31 09:50:27,629 INFO Iter: [131800/500000] l1: 0.048541 ae: 0.100579 wgan_g: -24.263479 wgan_d: -15.902122 wgan_gp: 0.118628 g: 0.154680 d: -14.715847 speed: 1.10 batches/s 
2021-10-31 09:51:58,309 INFO Iter: [131900/500000] l1: 0.056947 ae: 0.107428 wgan_g: -78.357628 wgan_d: -19.011730 wgan_gp: 0.296845 g: 0.118892 d: -16.043278 speed: 1.10 batches/s 
2021-10-31 09:52:59,150 INFO Iter: [132000/500000] l1: nan ae: nan wgan_g: -25.235447 wgan_d: -79.435913 wgan_gp: 0.788447 g: nan d: -71.551437 speed: 1.64 batches/s 
2021-10-31 09:55:43,327 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 09:55:43,327 INFO Random seed: 9058
2021-10-31 09:55:43,327 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 09:55:43,327 INFO Training on dataset: imagenet
2021-10-31 09:55:54,138 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 09:55:54,138 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 09:55:54,138 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-31 09:55:54,354 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 131000
2021-10-31 09:55:56,935 INFO Iter: [131000/500000] l1: 0.048535 ae: 0.105885 wgan_g: -36.064163 wgan_d: -12.114485 wgan_gp: 0.315795 g: 0.149241 d: -8.956532 speed: 49.39 batches/s 
2021-10-31 09:56:58,884 INFO Iter: [131100/500000] l1: nan ae: nan wgan_g: -47.026913 wgan_d: -52.432262 wgan_gp: 0.396233 g: nan d: -48.469933 speed: 1.61 batches/s 
2021-10-31 09:57:11,455 ERROR DataLoader reader thread raised an exception!
2021-10-31 09:57:54,739 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 09:57:54,739 INFO Random seed: 3334
2021-10-31 09:57:54,739 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 09:57:54,739 INFO Training on dataset: imagenet
2021-10-31 09:58:05,868 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 09:58:05,868 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 09:58:05,868 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 130000
2021-10-31 09:58:06,092 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 130000
2021-10-31 09:58:08,867 INFO Iter: [130000/500000] l1: 0.053529 ae: 0.153844 wgan_g: -68.792252 wgan_d: -2.757704 wgan_gp: 0.527882 g: 0.180056 d: 2.521113 speed: 45.80 batches/s 
2021-10-31 09:59:17,555 INFO Iter: [130100/500000] l1: nan ae: nan wgan_g: -50.331665 wgan_d: -35.032639 wgan_gp: 0.389942 g: nan d: -31.133219 speed: 1.46 batches/s 
2021-10-31 10:05:10,227 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 10:05:10,228 INFO Random seed: 5567
2021-10-31 10:05:10,228 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 10:05:10,228 INFO Training on dataset: imagenet
2021-10-31 10:05:21,063 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 10:05:21,064 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 10:05:21,064 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 130000
2021-10-31 10:05:21,276 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 130000
2021-10-31 10:05:23,124 INFO Iter: [130000/500000] l1: nan ae: nan wgan_g: -54.598640 wgan_d: -20.958944 wgan_gp: 0.460775 g: nan d: -16.351196 speed: 77.72 batches/s 
2021-10-31 10:05:47,037 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 10:05:47,037 INFO Random seed: 193
2021-10-31 10:05:47,037 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 10:05:47,037 INFO Training on dataset: imagenet
2021-10-31 10:05:57,962 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 10:05:57,962 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 10:05:57,963 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 129000
2021-10-31 10:05:58,115 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 129000
2021-10-31 10:06:00,749 INFO Iter: [129000/500000] l1: 0.048424 ae: 0.107872 wgan_g: -23.865295 wgan_d: -12.604003 wgan_gp: 0.193146 g: 0.163689 d: -10.672541 speed: 48.19 batches/s 
2021-10-31 10:07:32,862 INFO Iter: [129100/500000] l1: 0.042908 ae: 0.097861 wgan_g: -23.236706 wgan_d: -18.213316 wgan_gp: 0.181247 g: 0.145686 d: -16.400848 speed: 1.09 batches/s 
2021-10-31 10:09:04,452 INFO Iter: [129200/500000] l1: 0.054241 ae: 0.109560 wgan_g: -78.421951 wgan_d: -21.602356 wgan_gp: 0.387775 g: 0.118139 d: -17.724606 speed: 1.09 batches/s 
2021-10-31 10:10:35,911 INFO Iter: [129300/500000] l1: 0.060363 ae: 0.116664 wgan_g: -52.772560 wgan_d: -24.452427 wgan_gp: 0.282456 g: 0.159660 d: -21.627869 speed: 1.09 batches/s 
2021-10-31 10:12:07,291 INFO Iter: [129400/500000] l1: 0.052485 ae: 0.109117 wgan_g: -45.854073 wgan_d: -17.558342 wgan_gp: 0.307160 g: 0.148068 d: -14.486739 speed: 1.09 batches/s 
2021-10-31 10:13:38,764 INFO Iter: [129500/500000] l1: 0.047130 ae: 0.099979 wgan_g: -19.186909 wgan_d: -16.373665 wgan_gp: 0.204969 g: 0.157345 d: -14.323975 speed: 1.09 batches/s 
2021-10-31 10:15:10,723 INFO Iter: [129600/500000] l1: 0.061565 ae: 0.102801 wgan_g: -33.845367 wgan_d: -20.221600 wgan_gp: 0.263451 g: 0.163394 d: -17.587086 speed: 1.09 batches/s 
2021-10-31 10:16:42,465 INFO Iter: [129700/500000] l1: 0.046740 ae: 0.107397 wgan_g: -66.542900 wgan_d: -25.112791 wgan_gp: 0.326936 g: 0.118421 d: -21.843433 speed: 1.09 batches/s 
2021-10-31 10:18:14,168 INFO Iter: [129800/500000] l1: 0.053967 ae: 0.095726 wgan_g: -56.513657 wgan_d: -17.235779 wgan_gp: 0.237729 g: 0.123119 d: -14.858488 speed: 1.09 batches/s 
2021-10-31 10:19:45,642 INFO Iter: [129900/500000] l1: 0.053666 ae: 0.092704 wgan_g: -52.924599 wgan_d: -17.247017 wgan_gp: 0.223214 g: 0.122719 d: -15.014876 speed: 1.09 batches/s 
2021-10-31 10:21:19,709 INFO Iter: [130000/500000] l1: 0.050570 ae: 0.100012 wgan_g: -26.646044 wgan_d: -20.597090 wgan_gp: 0.345825 g: 0.154053 d: -17.138842 speed: 1.06 batches/s 
2021-10-31 10:22:51,233 INFO Iter: [130100/500000] l1: 0.058576 ae: 0.097715 wgan_g: -40.820198 wgan_d: -19.255491 wgan_gp: 0.206001 g: 0.146729 d: -17.195477 speed: 1.09 batches/s 
2021-10-31 10:24:22,112 INFO Iter: [130200/500000] l1: 0.044937 ae: 0.098620 wgan_g: -18.645823 wgan_d: -15.978155 wgan_gp: 0.160683 g: 0.153622 d: -14.371329 speed: 1.10 batches/s 
2021-10-31 10:25:53,392 INFO Iter: [130300/500000] l1: 0.056343 ae: 0.106352 wgan_g: -24.738989 wgan_d: -22.949184 wgan_gp: 0.357903 g: 0.170495 d: -19.370152 speed: 1.10 batches/s 
2021-10-31 10:27:24,791 INFO Iter: [130400/500000] l1: 0.053999 ae: 0.107987 wgan_g: -55.775017 wgan_d: -19.381199 wgan_gp: 0.225908 g: 0.138608 d: -17.122120 speed: 1.09 batches/s 
2021-10-31 10:28:58,042 INFO Iter: [130500/500000] l1: 0.048225 ae: 0.094007 wgan_g: -33.355995 wgan_d: -15.889503 wgan_gp: 0.216358 g: 0.137323 d: -13.725920 speed: 1.07 batches/s 
2021-10-31 10:30:33,449 INFO Iter: [130600/500000] l1: 0.049210 ae: 0.090839 wgan_g: 0.327814 wgan_d: -17.025871 wgan_gp: 0.182103 g: 0.168386 d: -15.204838 speed: 1.05 batches/s 
2021-10-31 10:32:08,711 INFO Iter: [130700/500000] l1: 0.055692 ae: 0.100175 wgan_g: -15.605425 wgan_d: -20.772686 wgan_gp: 0.274811 g: 0.171435 d: -18.024576 speed: 1.05 batches/s 
2021-10-31 10:33:43,847 INFO Iter: [130800/500000] l1: 0.049950 ae: 0.103234 wgan_g: 3.447956 wgan_d: -15.552326 wgan_gp: 0.124408 g: 0.187268 d: -14.308249 speed: 1.05 batches/s 
2021-10-31 10:35:16,479 INFO Iter: [130900/500000] l1: 0.055912 ae: 0.110756 wgan_g: -73.193565 wgan_d: -18.472990 wgan_gp: 0.289517 g: 0.126809 d: -15.577816 speed: 1.08 batches/s 
2021-10-31 10:36:48,129 INFO Iter: [131000/500000] l1: 0.040766 ae: 0.086814 wgan_g: -16.562267 wgan_d: -15.362702 wgan_gp: 0.209334 g: 0.136534 d: -13.269362 speed: 1.09 batches/s 
2021-10-31 10:38:20,116 INFO Iter: [131100/500000] l1: 0.064231 ae: 0.108745 wgan_g: -8.148026 wgan_d: -19.385040 wgan_gp: 0.219104 g: 0.199422 d: -17.194004 speed: 1.09 batches/s 
2021-10-31 10:39:52,173 INFO Iter: [131200/500000] l1: 0.049328 ae: 0.098184 wgan_g: -5.319291 wgan_d: -20.349745 wgan_gp: 0.227620 g: 0.171695 d: -18.073547 speed: 1.09 batches/s 
2021-10-31 10:41:23,794 INFO Iter: [131300/500000] l1: 0.051220 ae: 0.110298 wgan_g: -22.889435 wgan_d: -18.909027 wgan_gp: 0.269571 g: 0.170932 d: -16.213316 speed: 1.09 batches/s 
2021-10-31 10:42:55,470 INFO Iter: [131400/500000] l1: 0.053967 ae: 0.104417 wgan_g: -55.797615 wgan_d: -13.758337 wgan_gp: 0.289863 g: 0.134263 d: -10.859707 speed: 1.09 batches/s 
2021-10-31 10:44:27,102 INFO Iter: [131500/500000] l1: 0.056759 ae: 0.090867 wgan_g: -34.324547 wgan_d: -18.894339 wgan_gp: 0.240670 g: 0.142827 d: -16.487637 speed: 1.09 batches/s 
2021-10-31 10:45:58,390 INFO Iter: [131600/500000] l1: 0.045140 ae: 0.099768 wgan_g: -60.611416 wgan_d: -16.377779 wgan_gp: 0.289343 g: 0.113278 d: -13.484346 speed: 1.10 batches/s 
2021-10-31 10:47:29,783 INFO Iter: [131700/500000] l1: 0.051798 ae: 0.108039 wgan_g: -70.333778 wgan_d: -15.918021 wgan_gp: 0.369969 g: 0.121470 d: -12.218332 speed: 1.09 batches/s 
2021-10-31 10:49:01,355 INFO Iter: [131800/500000] l1: 0.048417 ae: 0.096594 wgan_g: -40.050919 wgan_d: -17.080399 wgan_gp: 0.239853 g: 0.133962 d: -14.681872 speed: 1.09 batches/s 
2021-10-31 10:50:32,908 INFO Iter: [131900/500000] l1: 0.047426 ae: 0.083349 wgan_g: -22.762146 wgan_d: -13.514118 wgan_gp: 0.203395 g: 0.134168 d: -11.480167 speed: 1.09 batches/s 
2021-10-31 10:52:03,941 INFO Iter: [132000/500000] l1: 0.049363 ae: 0.096647 wgan_g: -19.447540 wgan_d: -17.509272 wgan_gp: 0.275067 g: 0.155764 d: -14.758605 speed: 1.10 batches/s 
2021-10-31 10:53:35,257 INFO Iter: [132100/500000] l1: 0.051278 ae: 0.095778 wgan_g: -8.894230 wgan_d: -13.407131 wgan_gp: 0.156469 g: 0.167574 d: -11.842438 speed: 1.10 batches/s 
2021-10-31 10:55:07,761 INFO Iter: [132200/500000] l1: 0.049617 ae: 0.083420 wgan_g: -11.707777 wgan_d: -13.005931 wgan_gp: 0.197388 g: 0.147938 d: -11.032050 speed: 1.08 batches/s 
2021-10-31 10:56:41,856 INFO Iter: [132300/500000] l1: 0.058533 ae: 0.093737 wgan_g: -22.354700 wgan_d: -17.502214 wgan_gp: 0.195836 g: 0.160369 d: -15.543857 speed: 1.06 batches/s 
2021-10-31 10:58:16,969 INFO Iter: [132400/500000] l1: 0.048962 ae: 0.103465 wgan_g: -33.939220 wgan_d: -16.659176 wgan_gp: 0.180214 g: 0.148973 d: -14.857034 speed: 1.05 batches/s 
2021-10-31 10:59:49,578 INFO Iter: [132500/500000] l1: 0.045457 ae: 0.093246 wgan_g: -57.302170 wgan_d: -21.808434 wgan_gp: 0.260248 g: 0.109141 d: -19.205950 speed: 1.08 batches/s 
2021-10-31 11:01:21,186 INFO Iter: [132600/500000] l1: 0.050457 ae: 0.102994 wgan_g: -67.000046 wgan_d: -18.848106 wgan_gp: 0.291076 g: 0.117141 d: -15.937344 speed: 1.09 batches/s 
2021-10-31 11:02:52,842 INFO Iter: [132700/500000] l1: 0.047659 ae: 0.110492 wgan_g: -8.466733 wgan_d: -18.630070 wgan_gp: 0.202264 g: 0.181315 d: -16.607426 speed: 1.09 batches/s 
2021-10-31 11:04:24,668 INFO Iter: [132800/500000] l1: 0.046856 ae: 0.107699 wgan_g: -2.917913 wgan_d: -13.396295 wgan_gp: 0.160060 g: 0.182548 d: -11.795694 speed: 1.09 batches/s 
2021-10-31 11:05:56,325 INFO Iter: [132900/500000] l1: 0.051712 ae: 0.110543 wgan_g: -48.519176 wgan_d: -21.656475 wgan_gp: 0.275779 g: 0.146187 d: -18.898680 speed: 1.09 batches/s 
2021-10-31 11:07:28,030 INFO Iter: [133000/500000] l1: 0.057374 ae: 0.099277 wgan_g: -25.881903 wgan_d: -17.170403 wgan_gp: 0.208172 g: 0.162099 d: -15.088681 speed: 1.09 batches/s 
2021-10-31 11:08:59,801 INFO Iter: [133100/500000] l1: 0.050774 ae: 0.109783 wgan_g: -35.346657 wgan_d: -17.521915 wgan_gp: 0.200574 g: 0.157322 d: -15.516174 speed: 1.09 batches/s 
2021-10-31 11:10:31,120 INFO Iter: [133200/500000] l1: 0.045604 ae: 0.085740 wgan_g: -42.413017 wgan_d: -17.817322 wgan_gp: 0.237238 g: 0.115200 d: -15.444938 speed: 1.10 batches/s 
2021-10-31 11:12:02,631 INFO Iter: [133300/500000] l1: 0.040734 ae: 0.103847 wgan_g: -35.216038 wgan_d: -19.053257 wgan_gp: 0.233890 g: 0.138281 d: -16.714357 speed: 1.09 batches/s 
2021-10-31 11:13:34,440 INFO Iter: [133400/500000] l1: 0.050692 ae: 0.105133 wgan_g: -30.669331 wgan_d: -13.856966 wgan_gp: 0.232441 g: 0.156321 d: -11.532557 speed: 1.09 batches/s 
2021-10-31 11:15:06,041 INFO Iter: [133500/500000] l1: 0.043828 ae: 0.107874 wgan_g: -36.397850 wgan_d: -13.275731 wgan_gp: 0.189491 g: 0.145644 d: -11.380817 speed: 1.09 batches/s 
2021-10-31 11:16:37,114 INFO Iter: [133600/500000] l1: 0.051750 ae: 0.102187 wgan_g: -63.799236 wgan_d: -21.333488 wgan_gp: 0.275643 g: 0.120925 d: -18.577059 speed: 1.10 batches/s 
2021-10-31 11:18:08,192 INFO Iter: [133700/500000] l1: 0.058362 ae: 0.106746 wgan_g: -67.835876 wgan_d: -21.674807 wgan_gp: 0.299139 g: 0.130294 d: -18.683418 speed: 1.10 batches/s 
2021-10-31 11:19:39,582 INFO Iter: [133800/500000] l1: 0.041603 ae: 0.100585 wgan_g: -20.703680 wgan_d: -18.478252 wgan_gp: 0.260987 g: 0.149921 d: -15.868383 speed: 1.09 batches/s 
2021-10-31 11:21:10,920 INFO Iter: [133900/500000] l1: 0.056005 ae: 0.098540 wgan_g: -22.405434 wgan_d: -16.060757 wgan_gp: 0.236661 g: 0.163048 d: -13.694147 speed: 1.09 batches/s 
2021-10-31 11:22:42,075 INFO Iter: [134000/500000] l1: 0.047679 ae: 0.105858 wgan_g: -12.463077 wgan_d: -15.909348 wgan_gp: 0.146042 g: 0.171780 d: -14.448924 speed: 1.10 batches/s 
2021-10-31 11:24:13,513 INFO Iter: [134100/500000] l1: 0.042775 ae: 0.092542 wgan_g: 6.459711 wgan_d: -19.428398 wgan_gp: 0.219149 g: 0.168840 d: -17.236910 speed: 1.09 batches/s 
2021-10-31 11:25:44,796 INFO Iter: [134200/500000] l1: 0.042792 ae: 0.100358 wgan_g: -36.243954 wgan_d: -13.229594 wgan_gp: 0.184367 g: 0.135535 d: -11.385925 speed: 1.10 batches/s 
2021-10-31 11:27:16,022 INFO Iter: [134300/500000] l1: 0.047869 ae: 0.100906 wgan_g: -51.009342 wgan_d: -21.963524 wgan_gp: 0.290400 g: 0.127520 d: -19.059525 speed: 1.10 batches/s 
2021-10-31 11:28:47,064 INFO Iter: [134400/500000] l1: 0.049498 ae: 0.095133 wgan_g: 8.058574 wgan_d: -13.781546 wgan_gp: 0.224792 g: 0.181616 d: -11.533624 speed: 1.10 batches/s 
2021-10-31 11:30:18,300 INFO Iter: [134500/500000] l1: 0.058717 ae: 0.108865 wgan_g: -51.954742 wgan_d: -15.990042 wgan_gp: 0.254289 g: 0.149144 d: -13.447149 speed: 1.10 batches/s 
2021-10-31 11:31:49,240 INFO Iter: [134600/500000] l1: 0.048475 ae: 0.104956 wgan_g: -71.065369 wgan_d: -14.287117 wgan_gp: 0.336339 g: 0.113052 d: -10.923724 speed: 1.10 batches/s 
2021-10-31 11:33:20,170 INFO Iter: [134700/500000] l1: 0.061965 ae: 0.093499 wgan_g: -13.206243 wgan_d: -17.646309 wgan_gp: 0.299327 g: 0.173351 d: -14.653039 speed: 1.10 batches/s 
2021-10-31 11:34:51,197 INFO Iter: [134800/500000] l1: 0.048391 ae: 0.099806 wgan_g: -33.498516 wgan_d: -16.117107 wgan_gp: 0.228757 g: 0.144337 d: -13.829536 speed: 1.10 batches/s 
2021-10-31 11:36:22,296 INFO Iter: [134900/500000] l1: 0.051836 ae: 0.100345 wgan_g: 16.826883 wgan_d: -17.036247 wgan_gp: 0.223698 g: 0.199444 d: -14.799271 speed: 1.10 batches/s 
2021-10-31 11:37:53,153 INFO Iter: [135000/500000] l1: 0.049543 ae: 0.111739 wgan_g: -52.161350 wgan_d: -16.666483 wgan_gp: 0.259967 g: 0.141377 d: -14.066813 speed: 1.10 batches/s 
2021-10-31 11:39:24,367 INFO Iter: [135100/500000] l1: 0.058388 ae: 0.099869 wgan_g: -54.138847 wgan_d: -22.155495 wgan_gp: 0.341296 g: 0.135769 d: -18.742535 speed: 1.10 batches/s 
2021-10-31 11:40:55,201 INFO Iter: [135200/500000] l1: 0.043295 ae: 0.113054 wgan_g: -54.965382 wgan_d: -16.823879 wgan_gp: 0.445965 g: 0.132652 d: -12.364225 speed: 1.10 batches/s 
2021-10-31 11:42:26,169 INFO Iter: [135300/500000] l1: 0.050880 ae: 0.104077 wgan_g: -73.387383 wgan_d: -22.431263 wgan_gp: 0.334689 g: 0.112561 d: -19.084375 speed: 1.10 batches/s 
2021-10-31 11:43:57,541 INFO Iter: [135400/500000] l1: 0.049432 ae: 0.095760 wgan_g: -49.137093 wgan_d: -14.385120 wgan_gp: 0.216613 g: 0.125094 d: -12.218988 speed: 1.09 batches/s 
2021-10-31 11:45:29,097 INFO Iter: [135500/500000] l1: 0.048842 ae: 0.111265 wgan_g: -49.057495 wgan_d: -18.346640 wgan_gp: 0.271937 g: 0.143071 d: -15.627272 speed: 1.09 batches/s 
2021-10-31 11:47:00,952 INFO Iter: [135600/500000] l1: 0.049601 ae: 0.111811 wgan_g: -55.425289 wgan_d: -24.313282 wgan_gp: 0.406096 g: 0.138269 d: -20.252323 speed: 1.09 batches/s 
2021-10-31 11:48:32,604 INFO Iter: [135700/500000] l1: 0.057142 ae: 0.108663 wgan_g: -54.238419 wgan_d: -24.296104 wgan_gp: 0.326675 g: 0.144727 d: -21.029352 speed: 1.09 batches/s 
2021-10-31 11:50:04,508 INFO Iter: [135800/500000] l1: 0.050441 ae: 0.102196 wgan_g: -55.132561 wgan_d: -21.213205 wgan_gp: 0.273184 g: 0.128031 d: -18.481369 speed: 1.09 batches/s 
2021-10-31 11:51:36,128 INFO Iter: [135900/500000] l1: 0.055880 ae: 0.099951 wgan_g: -62.762894 wgan_d: -20.969900 wgan_gp: 0.307552 g: 0.124234 d: -17.894384 speed: 1.09 batches/s 
2021-10-31 11:53:07,333 INFO Iter: [136000/500000] l1: 0.047165 ae: 0.091187 wgan_g: -58.061245 wgan_d: -18.064859 wgan_gp: 0.332072 g: 0.107961 d: -14.744143 speed: 1.10 batches/s 
2021-10-31 11:54:38,657 INFO Iter: [136100/500000] l1: 0.036383 ae: 0.101315 wgan_g: -52.309200 wgan_d: -18.482195 wgan_gp: 0.269626 g: 0.112928 d: -15.785939 speed: 1.10 batches/s 
2021-10-31 11:56:09,746 INFO Iter: [136200/500000] l1: 0.044579 ae: 0.096068 wgan_g: -12.593062 wgan_d: -17.582155 wgan_gp: 0.230277 g: 0.156184 d: -15.279385 speed: 1.10 batches/s 
2021-10-31 11:57:40,915 INFO Iter: [136300/500000] l1: 0.047986 ae: 0.101614 wgan_g: -34.663754 wgan_d: -19.795589 wgan_gp: 0.237193 g: 0.144856 d: -17.423662 speed: 1.10 batches/s 
2021-10-31 11:59:12,672 INFO Iter: [136400/500000] l1: 0.048551 ae: 0.106409 wgan_g: -44.969803 wgan_d: -18.772394 wgan_gp: 0.297551 g: 0.140982 d: -15.796886 speed: 1.09 batches/s 
2021-10-31 12:00:44,321 INFO Iter: [136500/500000] l1: 0.051706 ae: 0.095271 wgan_g: -20.750776 wgan_d: -13.061575 wgan_gp: 0.157644 g: 0.155621 d: -11.485137 speed: 1.09 batches/s 
2021-10-31 12:02:15,837 INFO Iter: [136600/500000] l1: 0.057640 ae: 0.115514 wgan_g: -1.981861 wgan_d: -17.888783 wgan_gp: 0.166983 g: 0.205803 d: -16.218948 speed: 1.09 batches/s 
2021-10-31 12:03:44,230 INFO Iter: [136700/500000] l1: nan ae: nan wgan_g: -61.566109 wgan_d: -67.716835 wgan_gp: 0.543611 g: nan d: -62.280724 speed: 1.13 batches/s 
2021-10-31 12:04:36,137 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 12:04:36,137 INFO Random seed: 506
2021-10-31 12:04:36,137 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 12:04:36,137 INFO Training on dataset: imagenet
2021-10-31 12:04:47,035 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 12:04:47,035 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 12:04:47,035 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 136000
2021-10-31 12:04:47,252 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 136000
2021-10-31 12:04:49,982 INFO Iter: [136000/500000] l1: 0.049645 ae: 0.107949 wgan_g: -62.281708 wgan_d: -13.374378 wgan_gp: 0.448673 g: 0.126831 d: -8.887644 speed: 46.27 batches/s 
2021-10-31 12:06:22,285 INFO Iter: [136100/500000] l1: 0.042780 ae: 0.094772 wgan_g: -27.118973 wgan_d: -17.229733 wgan_gp: 0.147761 g: 0.137944 d: -15.752127 speed: 1.08 batches/s 
2021-10-31 12:07:54,043 INFO Iter: [136200/500000] l1: 0.053917 ae: 0.108127 wgan_g: -59.023315 wgan_d: -19.971174 wgan_gp: 0.316289 g: 0.135430 d: -16.808289 speed: 1.09 batches/s 
2021-10-31 12:09:25,507 INFO Iter: [136300/500000] l1: 0.060848 ae: 0.123763 wgan_g: -20.678345 wgan_d: -20.543041 wgan_gp: 0.200938 g: 0.200856 d: -18.533663 speed: 1.09 batches/s 
2021-10-31 12:10:56,478 INFO Iter: [136400/500000] l1: 0.052200 ae: 0.108472 wgan_g: -27.120955 wgan_d: -18.369881 wgan_gp: 0.270408 g: 0.165686 d: -15.665804 speed: 1.10 batches/s 
2021-10-31 12:12:27,503 INFO Iter: [136500/500000] l1: 0.048294 ae: 0.100180 wgan_g: -40.118908 wgan_d: -18.854607 wgan_gp: 0.229549 g: 0.138050 d: -16.559118 speed: 1.10 batches/s 
2021-10-31 12:13:58,676 INFO Iter: [136600/500000] l1: 0.060630 ae: 0.101035 wgan_g: -23.441442 wgan_d: -18.831047 wgan_gp: 0.211417 g: 0.170556 d: -16.716877 speed: 1.10 batches/s 
2021-10-31 12:15:30,407 INFO Iter: [136700/500000] l1: 0.046576 ae: 0.113759 wgan_g: -37.191952 wgan_d: -19.626751 wgan_gp: 0.266083 g: 0.155210 d: -16.965921 speed: 1.09 batches/s 
2021-10-31 12:17:02,045 INFO Iter: [136800/500000] l1: 0.054491 ae: 0.095570 wgan_g: -44.018887 wgan_d: -18.739887 wgan_gp: 0.192882 g: 0.136054 d: -16.811069 speed: 1.09 batches/s 
2021-10-31 12:18:33,182 INFO Iter: [136900/500000] l1: 0.053828 ae: 0.094910 wgan_g: -39.319305 wgan_d: -15.565461 wgan_gp: 0.197937 g: 0.139167 d: -13.586090 speed: 1.10 batches/s 
2021-10-31 12:20:04,466 INFO Iter: [137000/500000] l1: 0.049678 ae: 0.095265 wgan_g: -32.474991 wgan_d: -16.291348 wgan_gp: 0.250220 g: 0.141457 d: -13.789150 speed: 1.10 batches/s 
2021-10-31 12:21:35,724 INFO Iter: [137100/500000] l1: 0.058699 ae: 0.092377 wgan_g: -26.528923 wgan_d: -18.085079 wgan_gp: 0.226721 g: 0.154762 d: -15.817869 speed: 1.10 batches/s 
2021-10-31 12:23:06,855 INFO Iter: [137200/500000] l1: 0.043881 ae: 0.099049 wgan_g: -43.827980 wgan_d: -16.082455 wgan_gp: 0.219764 g: 0.127689 d: -13.884811 speed: 1.10 batches/s 
2021-10-31 12:24:38,847 INFO Iter: [137300/500000] l1: 0.055435 ae: 0.103408 wgan_g: -26.759354 wgan_d: -23.131947 wgan_gp: 0.327561 g: 0.163853 d: -19.856339 speed: 1.09 batches/s 
2021-10-31 12:26:10,073 INFO Iter: [137400/500000] l1: 0.053998 ae: 0.103557 wgan_g: -44.198311 wgan_d: -18.183998 wgan_gp: 0.244037 g: 0.144868 d: -15.743627 speed: 1.10 batches/s 
2021-10-31 12:27:41,106 INFO Iter: [137500/500000] l1: 0.047176 ae: 0.094055 wgan_g: -48.471203 wgan_d: -16.623638 wgan_gp: 0.249160 g: 0.121006 d: -14.132036 speed: 1.10 batches/s 
2021-10-31 12:29:12,142 INFO Iter: [137600/500000] l1: 0.049081 ae: 0.090274 wgan_g: -37.020699 wgan_d: -18.545666 wgan_gp: 0.229292 g: 0.130205 d: -16.252743 speed: 1.10 batches/s 
2021-10-31 12:30:43,215 INFO Iter: [137700/500000] l1: 0.055325 ae: 0.099082 wgan_g: -2.219691 wgan_d: -18.965809 wgan_gp: 0.227164 g: 0.183069 d: -16.694168 speed: 1.10 batches/s 
2021-10-31 12:32:14,181 INFO Iter: [137800/500000] l1: 0.048404 ae: 0.099809 wgan_g: -30.587959 wgan_d: -13.988119 wgan_gp: 0.120787 g: 0.147268 d: -12.780252 speed: 1.10 batches/s 
2021-10-31 12:33:45,887 INFO Iter: [137900/500000] l1: 0.056990 ae: 0.111901 wgan_g: -73.554352 wgan_d: -19.370235 wgan_gp: 0.303118 g: 0.129115 d: -16.339050 speed: 1.09 batches/s 
2021-10-31 12:35:17,525 INFO Iter: [138000/500000] l1: 0.040333 ae: 0.084148 wgan_g: -29.532087 wgan_d: -14.899206 wgan_gp: 0.224485 g: 0.119845 d: -12.654358 speed: 1.09 batches/s 
2021-10-31 12:36:52,559 INFO Iter: [138100/500000] l1: 0.063572 ae: 0.107128 wgan_g: -5.503148 wgan_d: -20.262363 wgan_gp: 0.201237 g: 0.199336 d: -18.249996 speed: 1.05 batches/s 
2021-10-31 12:38:27,725 INFO Iter: [138200/500000] l1: 0.051065 ae: 0.105699 wgan_g: -0.144073 wgan_d: -21.440205 wgan_gp: 0.269044 g: 0.187973 d: -18.749760 speed: 1.05 batches/s 
2021-10-31 12:40:02,570 INFO Iter: [138300/500000] l1: 0.051323 ae: 0.102856 wgan_g: -36.049431 wgan_d: -19.961243 wgan_gp: 0.302045 g: 0.148966 d: -16.940796 speed: 1.05 batches/s 
2021-10-31 12:41:34,176 INFO Iter: [138400/500000] l1: 0.055087 ae: 0.099898 wgan_g: -27.547733 wgan_d: -12.205566 wgan_gp: 0.181406 g: 0.158435 d: -10.391511 speed: 1.09 batches/s 
2021-10-31 12:43:06,027 INFO Iter: [138500/500000] l1: 0.056242 ae: 0.084704 wgan_g: -16.471910 wgan_d: -17.042717 wgan_gp: 0.205424 g: 0.152663 d: -14.988478 speed: 1.09 batches/s 
2021-10-31 12:44:37,702 INFO Iter: [138600/500000] l1: 0.045574 ae: 0.100511 wgan_g: -22.745066 wgan_d: -12.646228 wgan_gp: 0.157005 g: 0.152556 d: -11.076179 speed: 1.09 batches/s 
2021-10-31 12:46:09,487 INFO Iter: [138700/500000] l1: 0.053100 ae: 0.108107 wgan_g: -45.324852 wgan_d: -13.585893 wgan_gp: 0.220666 g: 0.148124 d: -11.379236 speed: 1.09 batches/s 
2021-10-31 12:47:40,808 INFO Iter: [138800/500000] l1: 0.049128 ae: 0.096231 wgan_g: -43.797821 wgan_d: -14.766416 wgan_gp: 0.185339 g: 0.130634 d: -12.913023 speed: 1.10 batches/s 
2021-10-31 12:49:12,694 INFO Iter: [138900/500000] l1: 0.048653 ae: 0.087680 wgan_g: -37.119488 wgan_d: -14.341097 wgan_gp: 0.235095 g: 0.126481 d: -11.990149 speed: 1.09 batches/s 
2021-10-31 12:50:47,849 INFO Iter: [139000/500000] l1: 0.048868 ae: 0.092995 wgan_g: -42.822350 wgan_d: -19.907518 wgan_gp: 0.338026 g: 0.127413 d: -16.527264 speed: 1.05 batches/s 
2021-10-31 12:52:23,138 INFO Iter: [139100/500000] l1: 0.049590 ae: 0.091832 wgan_g: -30.026127 wgan_d: -13.218762 wgan_gp: 0.164219 g: 0.139681 d: -11.576577 speed: 1.05 batches/s 
2021-10-31 12:53:58,257 INFO Iter: [139200/500000] l1: 0.049298 ae: 0.089177 wgan_g: -23.488764 wgan_d: -16.688652 wgan_gp: 0.320937 g: 0.142681 d: -13.479281 speed: 1.05 batches/s 
2021-10-31 12:55:33,499 INFO Iter: [139300/500000] l1: 0.058375 ae: 0.091825 wgan_g: -28.443132 wgan_d: -19.691017 wgan_gp: 0.257761 g: 0.151797 d: -17.113403 speed: 1.05 batches/s 
2021-10-31 12:57:07,644 INFO Iter: [139400/500000] l1: 0.048326 ae: 0.098617 wgan_g: -22.725756 wgan_d: -14.764404 wgan_gp: 0.182556 g: 0.153606 d: -12.938848 speed: 1.06 batches/s 
2021-10-31 12:58:38,975 INFO Iter: [139500/500000] l1: 0.045384 ae: 0.093266 wgan_g: -41.894032 wgan_d: -18.982485 wgan_gp: 0.178420 g: 0.124486 d: -17.198282 speed: 1.09 batches/s 
2021-10-31 13:00:10,297 INFO Iter: [139600/500000] l1: 0.051646 ae: 0.100580 wgan_g: -35.693092 wgan_d: -14.176825 wgan_gp: 0.145592 g: 0.146977 d: -12.720909 speed: 1.10 batches/s 
2021-10-31 13:01:41,536 INFO Iter: [139700/500000] l1: 0.047907 ae: 0.105796 wgan_g: -3.902551 wgan_d: -19.970001 wgan_gp: 0.217175 g: 0.180541 d: -17.798252 speed: 1.10 batches/s 
2021-10-31 13:03:12,424 INFO Iter: [139800/500000] l1: 0.046457 ae: 0.109159 wgan_g: -2.184168 wgan_d: -13.014403 wgan_gp: 0.226754 g: 0.184555 d: -10.746863 speed: 1.10 batches/s 
2021-10-31 13:04:43,280 INFO Iter: [139900/500000] l1: 0.053034 ae: 0.110397 wgan_g: -9.625810 wgan_d: -16.886122 wgan_gp: 0.258775 g: 0.186492 d: -14.298373 speed: 1.10 batches/s 
2021-10-31 13:06:14,188 INFO Iter: [140000/500000] l1: 0.056855 ae: 0.098695 wgan_g: -14.253888 wgan_d: -18.681499 wgan_gp: 0.178211 g: 0.172406 d: -16.899385 speed: 1.10 batches/s 
2021-10-31 13:07:44,773 INFO Iter: [140100/500000] l1: nan ae: nan wgan_g: -18.983654 wgan_d: -49.766026 wgan_gp: 0.376535 g: nan d: -46.000679 speed: 1.10 batches/s 
2021-10-31 13:18:10,636 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 13:18:10,636 INFO Random seed: 9835
2021-10-31 13:18:10,636 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 13:18:10,636 INFO Training on dataset: imagenet
2021-10-31 13:18:21,597 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 13:18:21,598 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 13:18:21,598 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 140000
2021-10-31 13:18:21,813 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 140000
2021-10-31 13:18:24,538 INFO Iter: [140000/500000] l1: 0.048131 ae: 0.104197 wgan_g: -21.204260 wgan_d: -16.948973 wgan_gp: 0.308469 g: 0.161589 d: -13.864278 speed: 46.62 batches/s 
2021-10-31 13:19:57,012 INFO Iter: [140100/500000] l1: 0.043149 ae: 0.096674 wgan_g: -29.172699 wgan_d: -16.827637 wgan_gp: 0.170152 g: 0.138615 d: -15.126116 speed: 1.08 batches/s 
2021-10-31 13:21:28,864 INFO Iter: [140200/500000] l1: 0.053047 ae: 0.108980 wgan_g: -44.018829 wgan_d: -19.656340 wgan_gp: 0.289223 g: 0.150413 d: -16.764107 speed: 1.09 batches/s 
2021-10-31 13:23:00,322 INFO Iter: [140300/500000] l1: 0.060587 ae: 0.117824 wgan_g: -31.392633 wgan_d: -23.378733 wgan_gp: 0.238304 g: 0.182700 d: -20.995689 speed: 1.09 batches/s 
2021-10-31 13:24:31,901 INFO Iter: [140400/500000] l1: 0.052278 ae: 0.107219 wgan_g: -24.978161 wgan_d: -15.285719 wgan_gp: 0.230654 g: 0.166419 d: -12.979184 speed: 1.09 batches/s 
2021-10-31 13:26:02,887 INFO Iter: [140500/500000] l1: 0.046043 ae: 0.096238 wgan_g: -10.782702 wgan_d: -14.900589 wgan_gp: 0.168754 g: 0.159955 d: -13.213046 speed: 1.10 batches/s 
2021-10-31 13:27:33,883 INFO Iter: [140600/500000] l1: 0.060988 ae: 0.099183 wgan_g: -12.511067 wgan_d: -18.153954 wgan_gp: 0.268616 g: 0.179694 d: -15.467796 speed: 1.10 batches/s 
2021-10-31 13:29:05,367 INFO Iter: [140700/500000] l1: 0.046724 ae: 0.099767 wgan_g: -42.315796 wgan_d: -20.750729 wgan_gp: 0.284240 g: 0.133473 d: -17.908329 speed: 1.09 batches/s 
2021-10-31 13:30:36,989 INFO Iter: [140800/500000] l1: 0.053068 ae: 0.091331 wgan_g: -39.712318 wgan_d: -16.872105 wgan_gp: 0.176553 g: 0.133567 d: -15.106576 speed: 1.09 batches/s 
2021-10-31 13:32:07,923 INFO Iter: [140900/500000] l1: 0.053282 ae: 0.096209 wgan_g: -43.640694 wgan_d: -16.868237 wgan_gp: 0.201618 g: 0.135749 d: -14.852056 speed: 1.10 batches/s 
2021-10-31 13:33:38,948 INFO Iter: [141000/500000] l1: 0.050394 ae: 0.097318 wgan_g: -8.672363 wgan_d: -16.093441 wgan_gp: 0.262185 g: 0.168582 d: -13.471592 speed: 1.10 batches/s 
2021-10-31 13:35:10,648 INFO Iter: [141100/500000] l1: 0.058642 ae: 0.091988 wgan_g: -12.642209 wgan_d: -16.191292 wgan_gp: 0.178217 g: 0.168114 d: -14.409125 speed: 1.09 batches/s 
2021-10-31 13:36:41,773 INFO Iter: [141200/500000] l1: 0.044032 ae: 0.098392 wgan_g: -38.024475 wgan_d: -15.147418 wgan_gp: 0.170129 g: 0.132885 d: -13.446129 speed: 1.10 batches/s 
2021-10-31 13:38:13,070 INFO Iter: [141300/500000] l1: 0.055677 ae: 0.103791 wgan_g: -17.048428 wgan_d: -22.653244 wgan_gp: 0.302648 g: 0.174314 d: -19.626766 speed: 1.10 batches/s 
2021-10-31 13:39:46,854 INFO Iter: [141400/500000] l1: 0.053832 ae: 0.108765 wgan_g: -56.204185 wgan_d: -17.780346 wgan_gp: 0.259963 g: 0.138913 d: -15.180718 speed: 1.07 batches/s 
2021-10-31 13:40:59,705 INFO Iter: [141500/500000] l1: nan ae: nan wgan_g: -16.832413 wgan_d: -57.143875 wgan_gp: 0.485194 g: nan d: -52.291931 speed: 1.37 batches/s 
2021-10-31 14:06:11,353 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 14:06:11,353 INFO Random seed: 6702
2021-10-31 14:06:11,354 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 14:06:11,354 INFO Training on dataset: imagenet
2021-10-31 14:06:22,227 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 14:06:22,227 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 14:06:22,227 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 141000
2021-10-31 14:06:22,438 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 141000
2021-10-31 14:06:25,072 INFO Iter: [141000/500000] l1: 0.047713 ae: 0.103447 wgan_g: -11.503540 wgan_d: -10.623165 wgan_gp: 0.258145 g: 0.169889 d: -8.041717 speed: 47.87 batches/s 
2021-10-31 14:07:57,369 INFO Iter: [141100/500000] l1: 0.042828 ae: 0.092927 wgan_g: -27.815907 wgan_d: -17.999035 wgan_gp: 0.175634 g: 0.135090 d: -16.242691 speed: 1.08 batches/s 
2021-10-31 14:09:29,012 INFO Iter: [141200/500000] l1: 0.054156 ae: 0.110488 wgan_g: -38.330086 wgan_d: -17.658607 wgan_gp: 0.315530 g: 0.159242 d: -14.503311 speed: 1.09 batches/s 
2021-10-31 14:10:59,785 INFO Iter: [141300/500000] l1: 0.059972 ae: 0.116573 wgan_g: -34.999741 wgan_d: -20.564346 wgan_gp: 0.225054 g: 0.176854 d: -18.313807 speed: 1.10 batches/s 
2021-10-31 14:12:30,759 INFO Iter: [141400/500000] l1: 0.052078 ae: 0.107017 wgan_g: -40.742043 wgan_d: -16.727167 wgan_gp: 0.287603 g: 0.150172 d: -13.851139 speed: 1.10 batches/s 
2021-10-31 14:14:01,751 INFO Iter: [141500/500000] l1: 0.045800 ae: 0.093882 wgan_g: -14.430872 wgan_d: -14.749586 wgan_gp: 0.151502 g: 0.153188 d: -13.234569 speed: 1.10 batches/s 
2021-10-31 14:15:32,705 INFO Iter: [141600/500000] l1: 0.061290 ae: 0.101399 wgan_g: -18.058020 wgan_d: -18.093483 wgan_gp: 0.233173 g: 0.177169 d: -15.761754 speed: 1.10 batches/s 
2021-10-31 14:17:03,594 INFO Iter: [141700/500000] l1: 0.046775 ae: 0.104999 wgan_g: -37.886871 wgan_d: -18.726110 wgan_gp: 0.237177 g: 0.144242 d: -16.354338 speed: 1.10 batches/s 
2021-10-31 14:18:34,619 INFO Iter: [141800/500000] l1: 0.056389 ae: 0.105692 wgan_g: -42.180084 wgan_d: -13.215631 wgan_gp: 0.165142 g: 0.152317 d: -11.564211 speed: 1.10 batches/s 
2021-10-31 14:19:57,152 INFO Iter: [141900/500000] l1: nan ae: nan wgan_g: -61.516708 wgan_d: 40.616875 wgan_gp: 0.164175 g: nan d: 42.258625 speed: 1.21 batches/s 
2021-10-31 14:20:50,835 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 14:20:50,835 INFO Random seed: 228
2021-10-31 14:20:50,836 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 14:20:50,836 INFO Training on dataset: imagenet
2021-10-31 14:21:01,835 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 14:21:01,836 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 14:21:01,836 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 141000
2021-10-31 14:21:02,044 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 141000
2021-10-31 14:21:04,798 INFO Iter: [141000/500000] l1: 0.048092 ae: 0.107706 wgan_g: -22.484858 wgan_d: -10.058205 wgan_gp: 0.199574 g: 0.164473 d: -8.062461 speed: 45.54 batches/s 
2021-10-31 14:22:37,046 INFO Iter: [141100/500000] l1: 0.042962 ae: 0.097547 wgan_g: -24.147528 wgan_d: -16.736549 wgan_gp: 0.168767 g: 0.144464 d: -15.048880 speed: 1.08 batches/s 
2021-10-31 14:24:08,790 INFO Iter: [141200/500000] l1: 0.054143 ae: 0.107817 wgan_g: -52.032593 wgan_d: -19.728203 wgan_gp: 0.384782 g: 0.142319 d: -15.880380 speed: 1.09 batches/s 
2021-10-31 14:25:40,272 INFO Iter: [141300/500000] l1: 0.059479 ae: 0.117533 wgan_g: -58.413448 wgan_d: -24.517662 wgan_gp: 0.359565 g: 0.154000 d: -20.922012 speed: 1.09 batches/s 
2021-10-31 14:26:38,354 INFO Iter: [141400/500000] l1: nan ae: nan wgan_g: -59.648605 wgan_d: -73.341942 wgan_gp: 0.696437 g: nan d: -66.377579 speed: 1.72 batches/s 
2021-10-31 14:26:50,760 ERROR DataLoader reader thread raised an exception!
2021-10-31 14:33:08,028 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 14:33:08,028 INFO Random seed: 3583
2021-10-31 14:33:08,028 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 14:33:08,028 INFO Training on dataset: imagenet
2021-10-31 14:33:19,191 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 14:33:19,191 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 14:33:19,192 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 141000
2021-10-31 14:33:19,413 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 141000
2021-10-31 14:33:22,308 INFO Iter: [141000/500000] l1: 0.047058 ae: 0.100200 wgan_g: -33.044930 wgan_d: -15.240656 wgan_gp: 0.249214 g: 0.143664 d: -12.748520 speed: 43.40 batches/s 
2021-10-31 14:34:54,305 INFO Iter: [141100/500000] l1: 0.042764 ae: 0.095890 wgan_g: -20.390247 wgan_d: -16.313171 wgan_gp: 0.185660 g: 0.145995 d: -14.456567 speed: 1.09 batches/s 
2021-10-31 14:36:25,575 INFO Iter: [141200/500000] l1: 0.053904 ae: 0.108232 wgan_g: -64.156311 wgan_d: -19.771719 wgan_gp: 0.338571 g: 0.130407 d: -16.386011 speed: 1.10 batches/s 
2021-10-31 14:37:56,721 INFO Iter: [141300/500000] l1: 0.059692 ae: 0.116268 wgan_g: -43.274887 wgan_d: -21.843769 wgan_gp: 0.282066 g: 0.167878 d: -19.023106 speed: 1.10 batches/s 
2021-10-31 14:39:27,631 INFO Iter: [141400/500000] l1: 0.052027 ae: 0.105986 wgan_g: -27.869175 wgan_d: -16.344006 wgan_gp: 0.249607 g: 0.161746 d: -13.847932 speed: 1.10 batches/s 
2021-10-31 14:40:58,230 INFO Iter: [141500/500000] l1: 0.045996 ae: 0.097567 wgan_g: -19.841961 wgan_d: -14.028376 wgan_gp: 0.140838 g: 0.152433 d: -12.619992 speed: 1.10 batches/s 
2021-10-31 14:42:29,386 INFO Iter: [141600/500000] l1: 0.060919 ae: 0.098014 wgan_g: -13.925086 wgan_d: -17.842918 wgan_gp: 0.212446 g: 0.176795 d: -15.718460 speed: 1.10 batches/s 
2021-10-31 14:44:01,574 INFO Iter: [141700/500000] l1: 0.047443 ae: 0.101075 wgan_g: -39.352516 wgan_d: -19.146181 wgan_gp: 0.235998 g: 0.138868 d: -16.786203 speed: 1.08 batches/s 
2021-10-31 14:45:36,503 INFO Iter: [141800/500000] l1: 0.052488 ae: 0.095018 wgan_g: -29.149776 wgan_d: -16.318151 wgan_gp: 0.192927 g: 0.147857 d: -14.388881 speed: 1.05 batches/s 
2021-10-31 14:47:07,746 INFO Iter: [141900/500000] l1: 0.052234 ae: 0.092110 wgan_g: -77.638130 wgan_d: -21.210896 wgan_gp: 0.277329 g: 0.095575 d: -18.437607 speed: 1.10 batches/s 
2021-10-31 14:48:38,822 INFO Iter: [142000/500000] l1: 0.049307 ae: 0.096293 wgan_g: -41.447884 wgan_d: -15.618521 wgan_gp: 0.285592 g: 0.133273 d: -12.762602 speed: 1.10 batches/s 
2021-10-31 14:50:10,552 INFO Iter: [142100/500000] l1: 0.059133 ae: 0.094565 wgan_g: -27.289688 wgan_d: -16.716982 wgan_gp: 0.218803 g: 0.157148 d: -14.528956 speed: 1.09 batches/s 
2021-10-31 14:51:42,007 INFO Iter: [142200/500000] l1: 0.043849 ae: 0.098084 wgan_g: -38.406265 wgan_d: -16.604065 wgan_gp: 0.230582 g: 0.131913 d: -14.298244 speed: 1.09 batches/s 
2021-10-31 14:53:13,419 INFO Iter: [142300/500000] l1: 0.055341 ae: 0.102690 wgan_g: -14.563414 wgan_d: -22.196316 wgan_gp: 0.369822 g: 0.175075 d: -18.498095 speed: 1.09 batches/s 
2021-10-31 14:54:44,251 INFO Iter: [142400/500000] l1: 0.054945 ae: 0.106306 wgan_g: -34.594978 wgan_d: -16.214291 wgan_gp: 0.187769 g: 0.158906 d: -14.336604 speed: 1.10 batches/s 
2021-10-31 14:56:14,992 INFO Iter: [142500/500000] l1: 0.046896 ae: 0.092189 wgan_g: -57.360500 wgan_d: -19.399437 wgan_gp: 0.266502 g: 0.109541 d: -16.734413 speed: 1.10 batches/s 
2021-10-31 14:57:46,281 INFO Iter: [142600/500000] l1: 0.049030 ae: 0.090828 wgan_g: -44.153542 wgan_d: -20.481493 wgan_gp: 0.221598 g: 0.123676 d: -18.265514 speed: 1.10 batches/s 
2021-10-31 14:59:19,816 INFO Iter: [142700/500000] l1: 0.055225 ae: 0.098427 wgan_g: -14.770678 wgan_d: -19.293491 wgan_gp: 0.237568 g: 0.169612 d: -16.917816 speed: 1.07 batches/s 
2021-10-31 15:00:52,555 INFO Iter: [142800/500000] l1: 0.049601 ae: 0.098304 wgan_g: -35.888359 wgan_d: -15.295050 wgan_gp: 0.108442 g: 0.141598 d: -14.210632 speed: 1.08 batches/s 
2021-10-31 15:02:23,303 INFO Iter: [142900/500000] l1: 0.056469 ae: 0.104121 wgan_g: -82.066238 wgan_d: -17.922544 wgan_gp: 0.299387 g: 0.110641 d: -14.928673 speed: 1.10 batches/s 
2021-10-31 15:03:24,252 INFO Iter: [143000/500000] l1: nan ae: nan wgan_g: -12.221911 wgan_d: -54.155346 wgan_gp: 0.412187 g: nan d: -50.033478 speed: 1.64 batches/s 
2021-10-31 15:04:15,751 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 15:04:15,752 INFO Random seed: 126
2021-10-31 15:04:15,752 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 15:04:15,752 INFO Training on dataset: imagenet
2021-10-31 15:04:26,603 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 15:04:26,603 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 15:04:26,603 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 142000
2021-10-31 15:04:26,816 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 142000
2021-10-31 15:04:29,539 INFO Iter: [142000/500000] l1: 0.048593 ae: 0.102722 wgan_g: -47.487068 wgan_d: -11.697965 wgan_gp: 0.276439 g: 0.134091 d: -8.933572 speed: 46.67 batches/s 
2021-10-31 15:05:27,555 INFO Iter: [142100/500000] l1: nan ae: nan wgan_g: -53.546452 wgan_d: -44.637428 wgan_gp: 0.338213 g: nan d: -41.255302 speed: 1.72 batches/s 
2021-10-31 15:07:08,521 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 15:07:08,521 INFO Random seed: 9031
2021-10-31 15:07:08,521 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 15:07:08,522 INFO Training on dataset: imagenet
2021-10-31 15:07:19,393 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 15:07:19,393 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 15:07:19,394 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 142000
2021-10-31 15:07:19,601 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 142000
2021-10-31 15:07:21,522 INFO Iter: [142000/500000] l1: nan ae: nan wgan_g: -71.220703 wgan_d: 9.442780 wgan_gp: 0.232217 g: nan d: 11.764951 speed: 72.73 batches/s 
2021-10-31 15:08:12,844 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 15:08:12,845 INFO Random seed: 9710
2021-10-31 15:08:12,845 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 15:08:12,845 INFO Training on dataset: imagenet
2021-10-31 15:08:23,642 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 15:08:23,642 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 15:08:23,642 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 140000
2021-10-31 15:08:23,806 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 140000
2021-10-31 15:08:26,300 INFO Iter: [140000/500000] l1: 0.048429 ae: 0.103590 wgan_g: -33.876144 wgan_d: -14.418702 wgan_gp: 0.346958 g: 0.148547 d: -10.949123 speed: 51.39 batches/s 
2021-10-31 15:09:58,103 INFO Iter: [140100/500000] l1: 0.042569 ae: 0.096828 wgan_g: -20.089128 wgan_d: -16.942978 wgan_gp: 0.178464 g: 0.147188 d: -15.158337 speed: 1.09 batches/s 
2021-10-31 15:11:29,268 INFO Iter: [140200/500000] l1: 0.053603 ae: 0.109085 wgan_g: -78.049789 wgan_d: -21.941380 wgan_gp: 0.318699 g: 0.117176 d: -18.754387 speed: 1.10 batches/s 
2021-10-31 15:13:00,388 INFO Iter: [140300/500000] l1: 0.060055 ae: 0.114955 wgan_g: -51.164860 wgan_d: -23.023731 wgan_gp: 0.264024 g: 0.158848 d: -20.383492 speed: 1.10 batches/s 
2021-10-31 15:14:31,324 INFO Iter: [140400/500000] l1: 0.053028 ae: 0.109284 wgan_g: -33.627377 wgan_d: -14.909016 wgan_gp: 0.216897 g: 0.161147 d: -12.740041 speed: 1.10 batches/s 
2021-10-31 15:16:01,994 INFO Iter: [140500/500000] l1: 0.045509 ae: 0.095248 wgan_g: -29.455118 wgan_d: -16.060814 wgan_gp: 0.176943 g: 0.139453 d: -14.291384 speed: 1.10 batches/s 
2021-10-31 15:17:28,162 INFO Iter: [140600/500000] l1: nan ae: nan wgan_g: -64.220421 wgan_d: -70.393982 wgan_gp: 0.667661 g: nan d: -63.717373 speed: 1.16 batches/s 
2021-10-31 15:17:35,531 ERROR DataLoader reader thread raised an exception!
2021-10-31 15:17:45,610 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 15:17:45,610 INFO Random seed: 4879
2021-10-31 15:17:45,610 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 15:17:45,610 INFO Training on dataset: imagenet
2021-10-31 15:17:56,413 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 15:17:56,413 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 15:17:56,413 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 140000
2021-10-31 15:17:56,632 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 140000
2021-10-31 15:17:59,240 INFO Iter: [140000/500000] l1: 0.052653 ae: 0.153041 wgan_g: -33.043320 wgan_d: -10.931019 wgan_gp: 0.261515 g: 0.213790 d: -8.315866 speed: 49.30 batches/s 
2021-10-31 15:19:31,180 INFO Iter: [140100/500000] l1: 0.042580 ae: 0.094460 wgan_g: -19.137577 wgan_d: -17.915785 wgan_gp: 0.163967 g: 0.145310 d: -16.276112 speed: 1.09 batches/s 
2021-10-31 15:21:02,701 INFO Iter: [140200/500000] l1: 0.053185 ae: 0.106778 wgan_g: -41.886917 wgan_d: -19.968225 wgan_gp: 0.334476 g: 0.150068 d: -16.623468 speed: 1.09 batches/s 
2021-10-31 15:22:37,893 INFO Iter: [140300/500000] l1: 0.060701 ae: 0.117544 wgan_g: -24.230715 wgan_d: -20.579521 wgan_gp: 0.238859 g: 0.189663 d: -18.190928 speed: 1.05 batches/s 
2021-10-31 15:24:13,213 INFO Iter: [140400/500000] l1: 0.053364 ae: 0.111304 wgan_g: -21.675884 wgan_d: -14.612789 wgan_gp: 0.206395 g: 0.175926 d: -12.548836 speed: 1.05 batches/s 
2021-10-31 15:25:46,414 INFO Iter: [140500/500000] l1: 0.045488 ae: 0.097880 wgan_g: -24.879082 wgan_d: -16.832590 wgan_gp: 0.190311 g: 0.147163 d: -14.929482 speed: 1.07 batches/s 
2021-10-31 15:27:18,289 INFO Iter: [140600/500000] l1: 0.061045 ae: 0.100413 wgan_g: -25.409008 wgan_d: -17.984163 wgan_gp: 0.212879 g: 0.168341 d: -15.855369 speed: 1.09 batches/s 
2021-10-31 15:28:49,209 INFO Iter: [140700/500000] l1: 0.047555 ae: 0.100958 wgan_g: -34.975693 wgan_d: -18.772682 wgan_gp: 0.211984 g: 0.143241 d: -16.652843 speed: 1.10 batches/s 
2021-10-31 15:30:20,049 INFO Iter: [140800/500000] l1: 0.053094 ae: 0.095638 wgan_g: -48.399231 wgan_d: -17.181770 wgan_gp: 0.169011 g: 0.130079 d: -15.491658 speed: 1.10 batches/s 
2021-10-31 15:31:53,475 INFO Iter: [140900/500000] l1: 0.053331 ae: 0.092774 wgan_g: -51.614357 wgan_d: -18.827026 wgan_gp: 0.223079 g: 0.123712 d: -16.596235 speed: 1.07 batches/s 
2021-10-31 15:33:27,286 INFO Iter: [141000/500000] l1: 0.049453 ae: 0.097204 wgan_g: -40.171432 wgan_d: -18.568098 wgan_gp: 0.259160 g: 0.135817 d: -15.976502 speed: 1.07 batches/s 
2021-10-31 15:34:58,798 INFO Iter: [141100/500000] l1: 0.059094 ae: 0.093033 wgan_g: -12.378959 wgan_d: -17.020233 wgan_gp: 0.212816 g: 0.170173 d: -14.892076 speed: 1.09 batches/s 
2021-10-31 15:36:29,985 INFO Iter: [141200/500000] l1: 0.043873 ae: 0.100237 wgan_g: -34.569344 wgan_d: -14.545504 wgan_gp: 0.173944 g: 0.138363 d: -12.806063 speed: 1.10 batches/s 
2021-10-31 15:38:03,410 INFO Iter: [141300/500000] l1: 0.054650 ae: 0.107246 wgan_g: -53.361671 wgan_d: -26.526806 wgan_gp: 0.442496 g: 0.140914 d: -22.101851 speed: 1.07 batches/s 
2021-10-31 15:39:34,579 INFO Iter: [141400/500000] l1: 0.054355 ae: 0.106095 wgan_g: -34.016747 wgan_d: -15.506079 wgan_gp: 0.173800 g: 0.158523 d: -13.768079 speed: 1.10 batches/s 
2021-10-31 15:41:05,642 INFO Iter: [141500/500000] l1: 0.047009 ae: 0.094685 wgan_g: -32.499767 wgan_d: -15.330452 wgan_gp: 0.167124 g: 0.137533 d: -13.659210 speed: 1.10 batches/s 
2021-10-31 15:42:36,764 INFO Iter: [141600/500000] l1: 0.048307 ae: 0.088372 wgan_g: -9.919727 wgan_d: -16.165623 wgan_gp: 0.149089 g: 0.154095 d: -14.674728 speed: 1.10 batches/s 
2021-10-31 15:44:07,776 INFO Iter: [141700/500000] l1: 0.054766 ae: 0.096836 wgan_g: -47.385635 wgan_d: -23.098301 wgan_gp: 0.384005 g: 0.134536 d: -19.258247 speed: 1.10 batches/s 
2021-10-31 15:45:38,972 INFO Iter: [141800/500000] l1: 0.048900 ae: 0.102378 wgan_g: -7.127861 wgan_d: -14.481680 wgan_gp: 0.133850 g: 0.174406 d: -13.143185 speed: 1.10 batches/s 
2021-10-31 15:47:10,381 INFO Iter: [141900/500000] l1: 0.054648 ae: 0.105581 wgan_g: -90.748489 wgan_d: -23.483919 wgan_gp: 0.476588 g: 0.101527 d: -18.718042 speed: 1.09 batches/s 
2021-10-31 15:48:11,637 INFO Iter: [142000/500000] l1: nan ae: nan wgan_g: -35.688580 wgan_d: -64.963806 wgan_gp: 0.655189 g: nan d: -58.411915 speed: 1.63 batches/s 
2021-10-31 15:51:19,646 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 15:51:19,646 INFO Random seed: 5868
2021-10-31 15:51:19,646 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 15:51:19,646 INFO Training on dataset: imagenet
2021-10-31 15:51:30,820 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 15:51:30,820 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 15:51:30,821 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 141000
2021-10-31 15:51:31,034 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 141000
2021-10-31 15:51:33,683 INFO Iter: [141000/500000] l1: 0.049202 ae: 0.107005 wgan_g: -45.214386 wgan_d: -11.414602 wgan_gp: 0.350870 g: 0.142234 d: -7.905901 speed: 47.78 batches/s 
2021-10-31 15:52:32,149 INFO Iter: [141100/500000] l1: nan ae: nan wgan_g: -49.619259 wgan_d: -60.991562 wgan_gp: 0.633406 g: nan d: -54.657509 speed: 1.71 batches/s 
2021-10-31 15:54:06,455 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 15:54:06,455 INFO Random seed: 7606
2021-10-31 15:54:06,456 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 15:54:06,456 INFO Training on dataset: imagenet
2021-10-31 15:54:17,643 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 15:54:17,643 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 15:54:17,643 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 141000
2021-10-31 15:54:17,860 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 141000
2021-10-31 15:54:19,667 INFO Iter: [141000/500000] l1: nan ae: nan wgan_g: -61.012352 wgan_d: 5.905304 wgan_gp: 0.243818 g: nan d: 8.343489 speed: 80.55 batches/s 
2021-10-31 15:55:17,223 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 15:55:17,223 INFO Random seed: 8641
2021-10-31 15:55:17,223 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 15:55:17,223 INFO Training on dataset: imagenet
2021-10-31 15:55:28,090 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 15:55:28,090 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 15:55:28,090 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 140000
2021-10-31 15:55:28,241 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 140000
2021-10-31 15:55:30,827 INFO Iter: [140000/500000] l1: 0.050921 ae: 0.124433 wgan_g: -24.463444 wgan_d: -12.325451 wgan_gp: 0.228084 g: 0.185961 d: -10.044609 speed: 49.03 batches/s 
2021-10-31 15:57:01,672 INFO Iter: [140100/500000] l1: 0.042706 ae: 0.097559 wgan_g: -39.591270 wgan_d: -18.033985 wgan_gp: 0.167747 g: 0.128727 d: -16.356512 speed: 1.10 batches/s 
2021-10-31 15:58:32,013 INFO Iter: [140200/500000] l1: 0.054341 ae: 0.109476 wgan_g: -45.518372 wgan_d: -18.535141 wgan_gp: 0.275245 g: 0.151062 d: -15.782692 speed: 1.11 batches/s 
2021-10-31 16:00:02,361 INFO Iter: [140300/500000] l1: 0.060809 ae: 0.116538 wgan_g: -18.725571 wgan_d: -20.783871 wgan_gp: 0.241907 g: 0.194092 d: -18.364796 speed: 1.11 batches/s 
2021-10-31 16:01:32,465 INFO Iter: [140400/500000] l1: 0.051150 ae: 0.108158 wgan_g: -36.283752 wgan_d: -21.478294 wgan_gp: 0.352826 g: 0.154886 d: -17.950035 speed: 1.11 batches/s 
2021-10-31 16:03:03,012 INFO Iter: [140500/500000] l1: 0.045770 ae: 0.095561 wgan_g: -17.272738 wgan_d: -14.544065 wgan_gp: 0.160173 g: 0.152324 d: -12.942335 speed: 1.10 batches/s 
2021-10-31 16:04:33,646 INFO Iter: [140600/500000] l1: 0.061262 ae: 0.097531 wgan_g: -18.894112 wgan_d: -17.815567 wgan_gp: 0.216781 g: 0.171658 d: -15.647758 speed: 1.10 batches/s 
2021-10-31 16:06:04,681 INFO Iter: [140700/500000] l1: 0.046433 ae: 0.101279 wgan_g: -47.534168 wgan_d: -20.090103 wgan_gp: 0.244469 g: 0.129720 d: -17.645414 speed: 1.10 batches/s 
2021-10-31 16:07:35,517 INFO Iter: [140800/500000] l1: 0.053728 ae: 0.095136 wgan_g: -24.885172 wgan_d: -18.166088 wgan_gp: 0.156405 g: 0.153753 d: -16.602043 speed: 1.10 batches/s 
2021-10-31 16:09:05,916 INFO Iter: [140900/500000] l1: 0.053226 ae: 0.093536 wgan_g: -42.218620 wgan_d: -16.764498 wgan_gp: 0.221233 g: 0.133896 d: -14.552169 speed: 1.11 batches/s 
2021-10-31 16:10:36,363 INFO Iter: [141000/500000] l1: 0.048913 ae: 0.096969 wgan_g: -29.422609 wgan_d: -17.068327 wgan_gp: 0.251913 g: 0.145636 d: -14.549193 speed: 1.11 batches/s 
2021-10-31 16:12:06,933 INFO Iter: [141100/500000] l1: 0.058703 ae: 0.094287 wgan_g: -29.688450 wgan_d: -16.583590 wgan_gp: 0.191220 g: 0.153900 d: -14.671389 speed: 1.10 batches/s 
2021-10-31 16:13:37,255 INFO Iter: [141200/500000] l1: 0.043806 ae: 0.096696 wgan_g: -29.324890 wgan_d: -15.186737 wgan_gp: 0.221558 g: 0.139277 d: -12.971157 speed: 1.11 batches/s 
2021-10-31 16:15:08,271 INFO Iter: [141300/500000] l1: 0.055133 ae: 0.106100 wgan_g: -36.086765 wgan_d: -23.555473 wgan_gp: 0.358159 g: 0.157394 d: -19.973879 speed: 1.10 batches/s 
2021-10-31 16:16:40,187 INFO Iter: [141400/500000] l1: 0.054761 ae: 0.103907 wgan_g: -37.204853 wgan_d: -16.604074 wgan_gp: 0.204845 g: 0.153196 d: -14.555626 speed: 1.09 batches/s 
2021-10-31 16:18:10,873 INFO Iter: [141500/500000] l1: 0.047357 ae: 0.091532 wgan_g: -30.497612 wgan_d: -14.215332 wgan_gp: 0.187365 g: 0.136168 d: -12.341684 speed: 1.10 batches/s 
2021-10-31 16:19:41,110 INFO Iter: [141600/500000] l1: 0.048704 ae: 0.084988 wgan_g: -16.574223 wgan_d: -16.400753 wgan_gp: 0.196373 g: 0.143856 d: -14.437023 speed: 1.11 batches/s 
2021-10-31 16:21:12,360 INFO Iter: [141700/500000] l1: 0.055376 ae: 0.100715 wgan_g: -30.553078 wgan_d: -20.407084 wgan_gp: 0.277082 g: 0.156756 d: -17.636261 speed: 1.10 batches/s 
2021-10-31 16:22:43,473 INFO Iter: [141800/500000] l1: 0.048738 ae: 0.100888 wgan_g: -23.869223 wgan_d: -13.974524 wgan_gp: 0.107840 g: 0.155682 d: -12.896124 speed: 1.10 batches/s 
2021-10-31 16:24:14,234 INFO Iter: [141900/500000] l1: 0.055153 ae: 0.106089 wgan_g: -73.330284 wgan_d: -19.202034 wgan_gp: 0.350200 g: 0.120160 d: -15.700034 speed: 1.10 batches/s 
2021-10-31 16:25:44,814 INFO Iter: [142000/500000] l1: 0.041362 ae: 0.085626 wgan_g: -19.000296 wgan_d: -15.443542 wgan_gp: 0.197941 g: 0.133386 d: -13.464134 speed: 1.10 batches/s 
2021-10-31 16:27:15,617 INFO Iter: [142100/500000] l1: 0.064594 ae: 0.109011 wgan_g: -1.240622 wgan_d: -18.060528 wgan_gp: 0.202944 g: 0.207084 d: -16.031090 speed: 1.10 batches/s 
2021-10-31 16:28:46,295 INFO Iter: [142200/500000] l1: 0.049683 ae: 0.091944 wgan_g: -2.272329 wgan_d: -19.547020 wgan_gp: 0.232769 g: 0.167680 d: -17.219330 speed: 1.10 batches/s 
2021-10-31 16:30:07,468 INFO Iter: [142300/500000] l1: nan ae: nan wgan_g: -42.616253 wgan_d: -73.846161 wgan_gp: 0.434455 g: nan d: -69.501610 speed: 1.23 batches/s 
2021-10-31 16:33:42,085 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 16:33:42,085 INFO Random seed: 2091
2021-10-31 16:33:42,085 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 16:33:42,085 INFO Training on dataset: imagenet
2021-10-31 16:33:53,122 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 16:33:53,122 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 16:33:53,123 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 142000
2021-10-31 16:33:53,350 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 142000
2021-10-31 16:33:55,951 INFO Iter: [142000/500000] l1: 0.048148 ae: 0.100979 wgan_g: -15.656222 wgan_d: -12.731327 wgan_gp: 0.214653 g: 0.163296 d: -10.584799 speed: 49.18 batches/s 
2021-10-31 16:35:27,486 INFO Iter: [142100/500000] l1: 0.042961 ae: 0.097633 wgan_g: -35.265942 wgan_d: -17.914581 wgan_gp: 0.171317 g: 0.133447 d: -16.201412 speed: 1.09 batches/s 
2021-10-31 16:36:58,513 INFO Iter: [142200/500000] l1: 0.054629 ae: 0.108581 wgan_g: -52.236435 wgan_d: -18.955917 wgan_gp: 0.312698 g: 0.143615 d: -15.828941 speed: 1.10 batches/s 
2021-10-31 16:38:29,371 INFO Iter: [142300/500000] l1: 0.060031 ae: 0.117801 wgan_g: -12.906940 wgan_d: -22.217545 wgan_gp: 0.275855 g: 0.200492 d: -19.458992 speed: 1.10 batches/s 
2021-10-31 16:40:00,336 INFO Iter: [142400/500000] l1: 0.052060 ae: 0.107012 wgan_g: -57.590488 wgan_d: -17.337589 wgan_gp: 0.313017 g: 0.133296 d: -14.207417 speed: 1.10 batches/s 
2021-10-31 16:41:31,371 INFO Iter: [142500/500000] l1: 0.045597 ae: 0.093395 wgan_g: -14.915143 wgan_d: -14.377682 wgan_gp: 0.159531 g: 0.151875 d: -12.782368 speed: 1.10 batches/s 
2021-10-31 16:42:29,579 INFO Iter: [142600/500000] l1: nan ae: nan wgan_g: -35.263729 wgan_d: -86.851372 wgan_gp: 0.745594 g: nan d: -79.395432 speed: 1.72 batches/s 
2021-10-31 16:55:41,031 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 16:55:41,032 INFO Random seed: 3971
2021-10-31 16:55:41,032 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 16:55:41,032 INFO Training on dataset: imagenet
2021-10-31 16:55:52,213 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 16:55:52,214 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 16:55:52,214 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 142000
2021-10-31 16:55:52,438 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 142000
2021-10-31 16:55:55,008 INFO Iter: [142000/500000] l1: 0.047571 ae: 0.104416 wgan_g: -17.778160 wgan_d: -12.776317 wgan_gp: 0.257849 g: 0.164607 d: -10.197826 speed: 49.10 batches/s 
2021-10-31 16:57:28,207 INFO Iter: [142100/500000] l1: 0.042621 ae: 0.094979 wgan_g: -26.179289 wgan_d: -18.363556 wgan_gp: 0.171029 g: 0.138941 d: -16.653265 speed: 1.07 batches/s 
2021-10-31 16:58:59,486 INFO Iter: [142200/500000] l1: 0.053946 ae: 0.108684 wgan_g: -50.142937 wgan_d: -17.937675 wgan_gp: 0.300787 g: 0.145013 d: -14.929802 speed: 1.10 batches/s 
2021-10-31 17:00:30,442 INFO Iter: [142300/500000] l1: 0.059587 ae: 0.115919 wgan_g: -36.743950 wgan_d: -22.924662 wgan_gp: 0.297043 g: 0.173864 d: -19.954233 speed: 1.10 batches/s 
2021-10-31 17:02:01,255 INFO Iter: [142400/500000] l1: 0.051816 ae: 0.105452 wgan_g: -39.715477 wgan_d: -17.103653 wgan_gp: 0.297246 g: 0.149005 d: -14.131189 speed: 1.10 batches/s 
2021-10-31 17:03:32,314 INFO Iter: [142500/500000] l1: 0.045371 ae: 0.097822 wgan_g: -14.583494 wgan_d: -15.192896 wgan_gp: 0.196673 g: 0.157248 d: -13.226168 speed: 1.10 batches/s 
2021-10-31 17:05:02,968 INFO Iter: [142600/500000] l1: 0.061645 ae: 0.100087 wgan_g: -11.618828 wgan_d: -18.337315 wgan_gp: 0.219075 g: 0.182460 d: -16.146564 speed: 1.10 batches/s 
2021-10-31 17:06:33,303 INFO Iter: [142700/500000] l1: 0.046504 ae: 0.098120 wgan_g: -52.430115 wgan_d: -18.220465 wgan_gp: 0.264539 g: 0.121119 d: -15.575069 speed: 1.11 batches/s 
2021-10-31 17:08:03,501 INFO Iter: [142800/500000] l1: 0.053338 ae: 0.090333 wgan_g: -32.205910 wgan_d: -18.204134 wgan_gp: 0.183667 g: 0.140200 d: -16.367464 speed: 1.11 batches/s 
2021-10-31 17:09:34,043 INFO Iter: [142900/500000] l1: 0.053598 ae: 0.093113 wgan_g: -26.387445 wgan_d: -15.056222 wgan_gp: 0.197210 g: 0.149665 d: -13.084120 speed: 1.10 batches/s 
2021-10-31 17:11:04,664 INFO Iter: [143000/500000] l1: 0.049400 ae: 0.094627 wgan_g: -31.692265 wgan_d: -16.372307 wgan_gp: 0.236021 g: 0.141140 d: -14.012096 speed: 1.10 batches/s 
2021-10-31 17:12:35,597 INFO Iter: [143100/500000] l1: 0.058256 ae: 0.092383 wgan_g: -16.551527 wgan_d: -16.063665 wgan_gp: 0.212042 g: 0.164215 d: -13.943249 speed: 1.10 batches/s 
2021-10-31 17:14:06,433 INFO Iter: [143200/500000] l1: 0.044056 ae: 0.098667 wgan_g: -25.067986 wgan_d: -14.774140 wgan_gp: 0.196054 g: 0.146200 d: -12.813603 speed: 1.10 batches/s 
2021-10-31 17:15:37,299 INFO Iter: [143300/500000] l1: 0.055804 ae: 0.110790 wgan_g: -17.988056 wgan_d: -24.007900 wgan_gp: 0.434316 g: 0.181924 d: -19.664738 speed: 1.10 batches/s 
2021-10-31 17:17:08,116 INFO Iter: [143400/500000] l1: 0.053601 ae: 0.103833 wgan_g: -46.950356 wgan_d: -17.562256 wgan_gp: 0.222666 g: 0.141970 d: -15.335596 speed: 1.10 batches/s 
2021-10-31 17:18:39,012 INFO Iter: [143500/500000] l1: 0.047150 ae: 0.090653 wgan_g: -54.251492 wgan_d: -18.970581 wgan_gp: 0.392425 g: 0.111112 d: -15.046331 speed: 1.10 batches/s 
2021-10-31 17:20:10,046 INFO Iter: [143600/500000] l1: 0.048221 ae: 0.084234 wgan_g: 1.469904 wgan_d: -16.322166 wgan_gp: 0.191409 g: 0.160416 d: -14.408074 speed: 1.10 batches/s 
2021-10-31 17:21:41,077 INFO Iter: [143700/500000] l1: 0.055553 ae: 0.099275 wgan_g: -2.328703 wgan_d: -19.661657 wgan_gp: 0.268460 g: 0.183465 d: -16.977057 speed: 1.10 batches/s 
2021-10-31 17:23:12,136 INFO Iter: [143800/500000] l1: 0.049543 ae: 0.101427 wgan_g: -7.377734 wgan_d: -13.354357 wgan_gp: 0.091279 g: 0.173785 d: -12.441564 speed: 1.10 batches/s 
2021-10-31 17:24:43,458 INFO Iter: [143900/500000] l1: 0.056042 ae: 0.108623 wgan_g: -69.029053 wgan_d: -18.757824 wgan_gp: 0.311389 g: 0.128569 d: -15.643935 speed: 1.10 batches/s 
2021-10-31 17:25:47,894 INFO Iter: [144000/500000] l1: nan ae: nan wgan_g: -31.543608 wgan_d: -56.747215 wgan_gp: 0.519298 g: nan d: -51.554234 speed: 1.55 batches/s 
2021-10-31 17:30:26,321 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 17:30:26,321 INFO Random seed: 9517
2021-10-31 17:30:26,321 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 17:30:26,321 INFO Training on dataset: imagenet
2021-10-31 17:30:37,528 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 17:30:37,528 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 17:30:37,528 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 143000
2021-10-31 17:30:37,742 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 143000
2021-10-31 17:30:40,364 INFO Iter: [143000/500000] l1: 0.048341 ae: 0.101927 wgan_g: -41.320633 wgan_d: -10.647281 wgan_gp: 0.269075 g: 0.139001 d: -7.956533 speed: 49.01 batches/s 
2021-10-31 17:31:38,961 INFO Iter: [143100/500000] l1: nan ae: nan wgan_g: -56.572147 wgan_d: -71.096916 wgan_gp: 0.711286 g: nan d: -63.984051 speed: 1.71 batches/s 
2021-10-31 17:32:53,394 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 17:32:53,395 INFO Random seed: 2501
2021-10-31 17:32:53,395 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 17:32:53,395 INFO Training on dataset: imagenet
2021-10-31 17:33:04,637 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 17:33:04,638 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 17:33:04,638 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 143000
2021-10-31 17:33:04,853 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 143000
2021-10-31 17:33:06,724 INFO Iter: [143000/500000] l1: nan ae: nan wgan_g: -58.657173 wgan_d: -4.856134 wgan_gp: 0.251174 g: nan d: -2.344390 speed: 77.83 batches/s 
2021-10-31 17:34:04,851 INFO Iter: [143100/500000] l1: nan ae: nan wgan_g: -49.840378 wgan_d: -73.616089 wgan_gp: 0.672569 g: nan d: -66.890404 speed: 1.72 batches/s 
2021-10-31 17:34:40,702 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 17:34:40,703 INFO Random seed: 6567
2021-10-31 17:34:40,703 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 17:34:40,703 INFO Training on dataset: imagenet
2021-10-31 17:34:51,613 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 17:34:51,613 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 17:34:51,614 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 142000
2021-10-31 17:34:51,770 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 142000
2021-10-31 17:34:54,249 INFO Iter: [142000/500000] l1: 0.047351 ae: 0.106876 wgan_g: -27.149170 wgan_d: -14.025229 wgan_gp: 0.249625 g: 0.157923 d: -11.528979 speed: 51.75 batches/s 
2021-10-31 17:36:25,570 INFO Iter: [142100/500000] l1: 0.042548 ae: 0.094865 wgan_g: -29.201792 wgan_d: -18.280119 wgan_gp: 0.163392 g: 0.135693 d: -16.646196 speed: 1.10 batches/s 
2021-10-31 17:37:56,617 INFO Iter: [142200/500000] l1: 0.054861 ae: 0.108656 wgan_g: -47.507599 wgan_d: -17.083008 wgan_gp: 0.274538 g: 0.148712 d: -14.337633 speed: 1.10 batches/s 
2021-10-31 17:39:27,386 INFO Iter: [142300/500000] l1: 0.059891 ae: 0.116408 wgan_g: -31.644016 wgan_d: -20.546013 wgan_gp: 0.241884 g: 0.179915 d: -18.127176 speed: 1.10 batches/s 
2021-10-31 17:40:58,169 INFO Iter: [142400/500000] l1: 0.052362 ae: 0.107406 wgan_g: -35.638008 wgan_d: -15.811926 wgan_gp: 0.229765 g: 0.156084 d: -13.514277 speed: 1.10 batches/s 
2021-10-31 17:42:29,065 INFO Iter: [142500/500000] l1: 0.045472 ae: 0.096596 wgan_g: -16.582672 wgan_d: -15.781412 wgan_gp: 0.195049 g: 0.153900 d: -13.830919 speed: 1.10 batches/s 
2021-10-31 17:44:00,067 INFO Iter: [142600/500000] l1: 0.060938 ae: 0.099585 wgan_g: -19.026974 wgan_d: -16.628830 wgan_gp: 0.210022 g: 0.173601 d: -14.528612 speed: 1.10 batches/s 
2021-10-31 17:45:30,979 INFO Iter: [142700/500000] l1: 0.046538 ae: 0.097475 wgan_g: -36.502697 wgan_d: -17.675674 wgan_gp: 0.239027 g: 0.136312 d: -15.285404 speed: 1.10 batches/s 
2021-10-31 17:47:01,452 INFO Iter: [142800/500000] l1: 0.053082 ae: 0.087968 wgan_g: -31.169773 wgan_d: -16.209913 wgan_gp: 0.204954 g: 0.138091 d: -14.160378 speed: 1.11 batches/s 
2021-10-31 17:48:31,796 INFO Iter: [142900/500000] l1: 0.053119 ae: 0.094079 wgan_g: -42.730457 wgan_d: -16.200863 wgan_gp: 0.234226 g: 0.133906 d: -13.858603 speed: 1.11 batches/s 
2021-10-31 17:50:02,676 INFO Iter: [143000/500000] l1: 0.049221 ae: 0.099778 wgan_g: -25.861706 wgan_d: -15.712701 wgan_gp: 0.222154 g: 0.152937 d: -13.491159 speed: 1.10 batches/s 
2021-10-31 17:51:33,420 INFO Iter: [143100/500000] l1: 0.058552 ae: 0.092057 wgan_g: -20.657499 wgan_d: -16.278446 wgan_gp: 0.195451 g: 0.160074 d: -14.323937 speed: 1.10 batches/s 
2021-10-31 17:53:05,254 INFO Iter: [143200/500000] l1: 0.043740 ae: 0.095759 wgan_g: -24.462011 wgan_d: -13.390625 wgan_gp: 0.174938 g: 0.142937 d: -11.641241 speed: 1.09 batches/s 
2021-10-31 17:54:36,003 INFO Iter: [143300/500000] l1: 0.055638 ae: 0.107849 wgan_g: -18.175640 wgan_d: -22.751442 wgan_gp: 0.403206 g: 0.178008 d: -18.719387 speed: 1.10 batches/s 
2021-10-31 17:56:07,013 INFO Iter: [143400/500000] l1: 0.054209 ae: 0.105668 wgan_g: -44.813576 wgan_d: -18.164673 wgan_gp: 0.258719 g: 0.147039 d: -15.577478 speed: 1.10 batches/s 
2021-10-31 17:57:37,784 INFO Iter: [143500/500000] l1: 0.047920 ae: 0.092351 wgan_g: -34.534447 wgan_d: -15.592491 wgan_gp: 0.247170 g: 0.133791 d: -13.120790 speed: 1.10 batches/s 
2021-10-31 17:59:08,420 INFO Iter: [143600/500000] l1: 0.048688 ae: 0.083090 wgan_g: -11.843458 wgan_d: -15.195539 wgan_gp: 0.135908 g: 0.146290 d: -13.836461 speed: 1.10 batches/s 
2021-10-31 18:00:38,976 INFO Iter: [143700/500000] l1: 0.055159 ae: 0.097196 wgan_g: -1.964843 wgan_d: -19.105021 wgan_gp: 0.277649 g: 0.180861 d: -16.328527 speed: 1.10 batches/s 
2021-10-31 18:02:09,330 INFO Iter: [143800/500000] l1: 0.048677 ae: 0.098977 wgan_g: -3.368991 wgan_d: -14.687397 wgan_gp: 0.140456 g: 0.173816 d: -13.282839 speed: 1.11 batches/s 
2021-10-31 18:03:39,592 INFO Iter: [143900/500000] l1: 0.055872 ae: 0.104024 wgan_g: -69.474960 wgan_d: -17.953472 wgan_gp: 0.274629 g: 0.122399 d: -15.207186 speed: 1.11 batches/s 
2021-10-31 18:05:09,977 INFO Iter: [144000/500000] l1: 0.040451 ae: 0.087629 wgan_g: -28.607069 wgan_d: -15.363922 wgan_gp: 0.230248 g: 0.125088 d: -13.061442 speed: 1.11 batches/s 
2021-10-31 18:06:40,472 INFO Iter: [144100/500000] l1: 0.063363 ae: 0.107370 wgan_g: -30.381763 wgan_d: -21.157534 wgan_gp: 0.217272 g: 0.174498 d: -18.984816 speed: 1.11 batches/s 
2021-10-31 18:07:56,079 INFO Iter: [144200/500000] l1: nan ae: nan wgan_g: -12.439462 wgan_d: -53.581673 wgan_gp: 0.353397 g: nan d: -50.047707 speed: 1.32 batches/s 
2021-10-31 18:21:41,052 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 18:21:41,052 INFO Random seed: 4575
2021-10-31 18:21:41,052 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 18:21:41,052 INFO Training on dataset: imagenet
2021-10-31 18:21:51,902 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 18:21:51,902 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 18:21:51,902 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 144000
2021-10-31 18:21:52,111 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 144000
2021-10-31 18:21:54,776 INFO Iter: [144000/500000] l1: 0.048227 ae: 0.105767 wgan_g: -30.140871 wgan_d: -13.527001 wgan_gp: 0.232155 g: 0.154651 d: -11.205452 speed: 47.55 batches/s 
2021-10-31 18:23:25,703 INFO Iter: [144100/500000] l1: 0.042151 ae: 0.094232 wgan_g: -35.915131 wgan_d: -18.871897 wgan_gp: 0.193088 g: 0.127745 d: -16.941017 speed: 1.10 batches/s 
2021-10-31 18:24:56,215 INFO Iter: [144200/500000] l1: 0.055371 ae: 0.110710 wgan_g: -44.944046 wgan_d: -17.909531 wgan_gp: 0.278785 g: 0.154353 d: -15.121679 speed: 1.10 batches/s 
2021-10-31 18:26:26,842 INFO Iter: [144300/500000] l1: 0.059151 ae: 0.116451 wgan_g: -35.504219 wgan_d: -23.824659 wgan_gp: 0.327403 g: 0.175218 d: -20.550629 speed: 1.10 batches/s 
2021-10-31 18:27:57,273 INFO Iter: [144400/500000] l1: 0.052842 ae: 0.112785 wgan_g: -11.435881 wgan_d: -14.016621 wgan_gp: 0.202538 g: 0.187317 d: -11.991245 speed: 1.11 batches/s 
2021-10-31 18:29:27,707 INFO Iter: [144500/500000] l1: 0.046128 ae: 0.096995 wgan_g: -3.419037 wgan_d: -15.955807 wgan_gp: 0.179658 g: 0.168328 d: -14.159227 speed: 1.11 batches/s 
2021-10-31 18:30:58,184 INFO Iter: [144600/500000] l1: 0.061166 ae: 0.098060 wgan_g: -3.567762 wgan_d: -17.733105 wgan_gp: 0.227322 g: 0.187504 d: -15.459888 speed: 1.11 batches/s 
2021-10-31 18:32:28,714 INFO Iter: [144700/500000] l1: 0.047000 ae: 0.101413 wgan_g: -50.602169 wgan_d: -20.408821 wgan_gp: 0.312014 g: 0.127494 d: -17.288679 speed: 1.10 batches/s 
2021-10-31 18:33:59,477 INFO Iter: [144800/500000] l1: 0.053735 ae: 0.092738 wgan_g: -41.607635 wgan_d: -16.099506 wgan_gp: 0.205834 g: 0.134160 d: -14.041163 speed: 1.10 batches/s 
2021-10-31 18:35:30,141 INFO Iter: [144900/500000] l1: 0.053281 ae: 0.091251 wgan_g: -36.354084 wgan_d: -15.864138 wgan_gp: 0.221483 g: 0.137084 d: -13.649305 speed: 1.10 batches/s 
2021-10-31 18:37:00,517 INFO Iter: [145000/500000] l1: 0.048917 ae: 0.094892 wgan_g: -29.893547 wgan_d: -15.714352 wgan_gp: 0.236879 g: 0.142678 d: -13.345560 speed: 1.11 batches/s 
2021-10-31 18:38:31,515 INFO Iter: [145100/500000] l1: 0.057934 ae: 0.091998 wgan_g: -55.301018 wgan_d: -18.498644 wgan_gp: 0.243408 g: 0.124618 d: -16.064562 speed: 1.10 batches/s 
2021-10-31 18:40:02,065 INFO Iter: [145200/500000] l1: 0.044372 ae: 0.098753 wgan_g: -26.009083 wgan_d: -14.763042 wgan_gp: 0.166497 g: 0.145741 d: -13.098074 speed: 1.10 batches/s 
2021-10-31 18:41:33,300 INFO Iter: [145300/500000] l1: 0.055290 ae: 0.105258 wgan_g: -13.238674 wgan_d: -22.701675 wgan_gp: 0.372540 g: 0.179419 d: -18.976276 speed: 1.10 batches/s 
2021-10-31 18:43:03,938 INFO Iter: [145400/500000] l1: 0.053957 ae: 0.103995 wgan_g: -40.871113 wgan_d: -16.372227 wgan_gp: 0.187072 g: 0.148670 d: -14.501510 speed: 1.10 batches/s 
2021-10-31 18:44:34,240 INFO Iter: [145500/500000] l1: 0.046369 ae: 0.091241 wgan_g: -48.065487 wgan_d: -15.954290 wgan_gp: 0.280206 g: 0.117067 d: -13.152232 speed: 1.11 batches/s 
2021-10-31 18:46:04,657 INFO Iter: [145600/500000] l1: 0.049580 ae: 0.087796 wgan_g: -16.318737 wgan_d: -14.940058 wgan_gp: 0.141468 g: 0.148533 d: -13.525373 speed: 1.11 batches/s 
2021-10-31 18:47:34,992 INFO Iter: [145700/500000] l1: 0.055948 ae: 0.098548 wgan_g: -16.683542 wgan_d: -19.000240 wgan_gp: 0.254554 g: 0.168712 d: -16.454702 speed: 1.11 batches/s 
2021-10-31 18:49:05,514 INFO Iter: [145800/500000] l1: 0.049593 ae: 0.101433 wgan_g: -19.485670 wgan_d: -13.357191 wgan_gp: 0.102021 g: 0.161746 d: -12.336979 speed: 1.10 batches/s 
2021-10-31 18:50:35,956 INFO Iter: [145900/500000] l1: 0.056038 ae: 0.103796 wgan_g: -67.894653 wgan_d: -16.711302 wgan_gp: 0.285509 g: 0.123906 d: -13.856213 speed: 1.11 batches/s 
2021-10-31 18:51:36,772 INFO Iter: [146000/500000] l1: nan ae: nan wgan_g: -30.532452 wgan_d: -78.097412 wgan_gp: 0.586238 g: nan d: -72.235031 speed: 1.64 batches/s 
2021-10-31 21:43:44,508 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 21:43:44,508 INFO Random seed: 3644
2021-10-31 21:43:44,509 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 21:43:44,509 INFO Training on dataset: imagenet
2021-10-31 21:43:55,373 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 21:43:55,373 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 21:43:55,373 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 145000
2021-10-31 21:43:55,591 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 145000
2021-10-31 21:43:58,304 INFO Iter: [145000/500000] l1: 0.048274 ae: 0.103076 wgan_g: -35.494171 wgan_d: -12.498562 wgan_gp: 0.281190 g: 0.146126 d: -9.686666 speed: 46.40 batches/s 
2021-10-31 21:44:56,773 INFO Iter: [145100/500000] l1: nan ae: nan wgan_g: -46.518837 wgan_d: -50.290520 wgan_gp: 0.477654 g: nan d: -45.513981 speed: 1.71 batches/s 
2021-10-31 21:47:36,939 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 21:47:36,939 INFO Random seed: 814
2021-10-31 21:47:36,939 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 21:47:36,939 INFO Training on dataset: imagenet
2021-10-31 21:47:47,775 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 21:47:47,775 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 21:47:47,775 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 144000
2021-10-31 21:47:47,997 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 144000
2021-10-31 21:47:50,709 INFO Iter: [144000/500000] l1: 0.047666 ae: 0.109535 wgan_g: -33.171658 wgan_d: -15.006497 wgan_gp: 0.257686 g: 0.155470 d: -12.429635 speed: 46.69 batches/s 
2021-10-31 21:48:49,179 INFO Iter: [144100/500000] l1: nan ae: nan wgan_g: -50.745556 wgan_d: -66.053413 wgan_gp: 0.499273 g: nan d: -61.060684 speed: 1.71 batches/s 
2021-10-31 21:49:22,032 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 21:49:22,033 INFO Random seed: 400
2021-10-31 21:49:22,033 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 21:49:22,033 INFO Training on dataset: imagenet
2021-10-31 21:49:33,059 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 21:49:33,059 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 21:49:33,060 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 144000
2021-10-31 21:49:33,283 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 144000
2021-10-31 21:49:35,371 INFO Iter: [144000/500000] l1: nan ae: nan wgan_g: -55.260201 wgan_d: 1.333525 wgan_gp: 0.224191 g: nan d: 3.575438 speed: 65.99 batches/s 
2021-10-31 21:50:15,189 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 21:50:15,189 INFO Random seed: 5190
2021-10-31 21:50:15,189 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 21:50:15,190 INFO Training on dataset: imagenet
2021-10-31 21:50:26,082 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 21:50:26,082 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 21:50:26,082 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 143000
2021-10-31 21:50:26,242 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 143000
2021-10-31 21:50:28,747 INFO Iter: [143000/500000] l1: 0.047689 ae: 0.103818 wgan_g: -30.898865 wgan_d: -13.517691 wgan_gp: 0.283670 g: 0.150910 d: -10.680986 speed: 51.63 batches/s 
2021-10-31 21:51:59,925 INFO Iter: [143100/500000] l1: 0.042594 ae: 0.094705 wgan_g: -26.147814 wgan_d: -18.518015 wgan_gp: 0.221799 g: 0.138611 d: -16.300028 speed: 1.10 batches/s 
2021-10-31 21:53:30,525 INFO Iter: [143200/500000] l1: 0.054131 ae: 0.109431 wgan_g: -36.383316 wgan_d: -17.900507 wgan_gp: 0.321462 g: 0.159892 d: -14.685890 speed: 1.10 batches/s 
2021-10-31 21:55:01,491 INFO Iter: [143300/500000] l1: 0.059707 ae: 0.115163 wgan_g: -22.433208 wgan_d: -23.167370 wgan_gp: 0.313494 g: 0.187410 d: -20.032433 speed: 1.10 batches/s 
2021-10-31 21:56:32,543 INFO Iter: [143400/500000] l1: 0.051461 ae: 0.107241 wgan_g: -51.915131 wgan_d: -19.090099 wgan_gp: 0.289872 g: 0.138527 d: -16.191376 speed: 1.10 batches/s 
2021-10-31 21:58:03,184 INFO Iter: [143500/500000] l1: 0.045029 ae: 0.093653 wgan_g: -17.954885 wgan_d: -14.831670 wgan_gp: 0.197771 g: 0.148463 d: -12.853958 speed: 1.10 batches/s 
2021-10-31 21:59:33,602 INFO Iter: [143600/500000] l1: 0.060646 ae: 0.097822 wgan_g: -36.356457 wgan_d: -18.412184 wgan_gp: 0.226874 g: 0.153806 d: -16.143446 speed: 1.11 batches/s 
2021-10-31 22:01:04,394 INFO Iter: [143700/500000] l1: 0.047373 ae: 0.102460 wgan_g: -35.856846 wgan_d: -16.938877 wgan_gp: 0.237911 g: 0.143943 d: -14.559766 speed: 1.10 batches/s 
2021-10-31 22:02:35,393 INFO Iter: [143800/500000] l1: 0.052420 ae: 0.090424 wgan_g: -31.760382 wgan_d: -18.062469 wgan_gp: 0.190741 g: 0.139653 d: -16.155058 speed: 1.10 batches/s 
2021-10-31 22:04:06,605 INFO Iter: [143900/500000] l1: 0.053317 ae: 0.093557 wgan_g: -39.220070 wgan_d: -16.715736 wgan_gp: 0.292468 g: 0.137030 d: -13.791059 speed: 1.10 batches/s 
2021-10-31 22:05:37,747 INFO Iter: [144000/500000] l1: 0.049291 ae: 0.097057 wgan_g: -33.800644 wgan_d: -16.175850 wgan_gp: 0.248690 g: 0.141817 d: -13.688948 speed: 1.10 batches/s 
2021-10-31 22:07:09,045 INFO Iter: [144100/500000] l1: 0.057831 ae: 0.094790 wgan_g: -23.580681 wgan_d: -18.224813 wgan_gp: 0.195610 g: 0.159564 d: -16.268717 speed: 1.10 batches/s 
2021-10-31 22:08:40,156 INFO Iter: [144200/500000] l1: 0.044442 ae: 0.095556 wgan_g: -22.856594 wgan_d: -13.700566 wgan_gp: 0.182804 g: 0.145141 d: -11.872521 speed: 1.10 batches/s 
2021-10-31 22:10:11,179 INFO Iter: [144300/500000] l1: 0.055913 ae: 0.106576 wgan_g: -24.218277 wgan_d: -23.880634 wgan_gp: 0.348882 g: 0.170769 d: -20.391815 speed: 1.10 batches/s 
2021-10-31 22:11:42,157 INFO Iter: [144400/500000] l1: 0.054152 ae: 0.109507 wgan_g: -47.767223 wgan_d: -17.843630 wgan_gp: 0.249460 g: 0.148623 d: -15.349030 speed: 1.10 batches/s 
2021-10-31 22:12:54,836 INFO Iter: [144500/500000] l1: nan ae: nan wgan_g: -54.976959 wgan_d: -62.398434 wgan_gp: 0.696552 g: nan d: -55.432915 speed: 1.38 batches/s 
2021-10-31 22:13:35,820 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 22:13:35,820 INFO Random seed: 2473
2021-10-31 22:13:35,821 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 22:13:35,821 INFO Training on dataset: imagenet
2021-10-31 22:13:46,886 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 22:13:46,886 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 22:13:46,886 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 144000
2021-10-31 22:13:47,106 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 144000
2021-10-31 22:13:49,725 INFO Iter: [144000/500000] l1: 0.048063 ae: 0.101847 wgan_g: -45.268265 wgan_d: -11.910800 wgan_gp: 0.292585 g: 0.134624 d: -8.984945 speed: 48.68 batches/s 
2021-10-31 22:15:20,957 INFO Iter: [144100/500000] l1: 0.042437 ae: 0.094296 wgan_g: -38.193916 wgan_d: -19.213213 wgan_gp: 0.192125 g: 0.125885 d: -17.291965 speed: 1.10 batches/s 
2021-10-31 22:16:51,444 INFO Iter: [144200/500000] l1: 0.055173 ae: 0.111048 wgan_g: -36.485111 wgan_d: -17.616804 wgan_gp: 0.312986 g: 0.162980 d: -14.486948 speed: 1.11 batches/s 
2021-10-31 22:18:22,187 INFO Iter: [144300/500000] l1: 0.059106 ae: 0.115375 wgan_g: -48.138821 wgan_d: -23.318880 wgan_gp: 0.393774 g: 0.161238 d: -19.381144 speed: 1.10 batches/s 
2021-10-31 22:19:53,027 INFO Iter: [144400/500000] l1: 0.051383 ae: 0.105617 wgan_g: -35.987164 wgan_d: -16.212387 wgan_gp: 0.242361 g: 0.152413 d: -13.788774 speed: 1.10 batches/s 
2021-10-31 22:21:23,572 INFO Iter: [144500/500000] l1: 0.045895 ae: 0.095515 wgan_g: -3.832051 wgan_d: -15.085499 wgan_gp: 0.175586 g: 0.165860 d: -13.329636 speed: 1.10 batches/s 
2021-10-31 22:22:54,076 INFO Iter: [144600/500000] l1: 0.061027 ae: 0.098055 wgan_g: -8.407024 wgan_d: -16.114670 wgan_gp: 0.216922 g: 0.182491 d: -13.945454 speed: 1.10 batches/s 
2021-10-31 22:24:24,723 INFO Iter: [144700/500000] l1: 0.047472 ae: 0.099223 wgan_g: -23.453606 wgan_d: -16.878994 wgan_gp: 0.234457 g: 0.152581 d: -14.534422 speed: 1.10 batches/s 
2021-10-31 22:25:55,550 INFO Iter: [144800/500000] l1: 0.053036 ae: 0.089494 wgan_g: -30.230661 wgan_d: -17.508438 wgan_gp: 0.206160 g: 0.140805 d: -15.446840 speed: 1.10 batches/s 
2021-10-31 22:27:26,263 INFO Iter: [144900/500000] l1: 0.053962 ae: 0.094470 wgan_g: -29.746675 wgan_d: -14.186745 wgan_gp: 0.214299 g: 0.148372 d: -12.043755 speed: 1.10 batches/s 
2021-10-31 22:28:57,345 INFO Iter: [145000/500000] l1: 0.048794 ae: 0.094095 wgan_g: -29.158873 wgan_d: -14.167246 wgan_gp: 0.231868 g: 0.142308 d: -11.848561 speed: 1.10 batches/s 
2021-10-31 22:30:28,623 INFO Iter: [145100/500000] l1: 0.058577 ae: 0.092852 wgan_g: -29.230324 wgan_d: -16.405996 wgan_gp: 0.175974 g: 0.152484 d: -14.646258 speed: 1.10 batches/s 
2021-10-31 22:31:59,674 INFO Iter: [145200/500000] l1: 0.043520 ae: 0.095306 wgan_g: -28.340546 wgan_d: -13.764942 wgan_gp: 0.186068 g: 0.138251 d: -11.904259 speed: 1.10 batches/s 
2021-10-31 22:33:30,833 INFO Iter: [145300/500000] l1: 0.055406 ae: 0.105042 wgan_g: -19.168947 wgan_d: -24.160561 wgan_gp: 0.410563 g: 0.173369 d: -20.054935 speed: 1.10 batches/s 
2021-10-31 22:35:01,893 INFO Iter: [145400/500000] l1: 0.054233 ae: 0.102744 wgan_g: -29.313412 wgan_d: -16.282009 wgan_gp: 0.222023 g: 0.159060 d: -14.061779 speed: 1.10 batches/s 
2021-10-31 22:36:14,684 INFO Iter: [145500/500000] l1: nan ae: nan wgan_g: -38.387432 wgan_d: -44.618855 wgan_gp: 0.498659 g: nan d: -39.632267 speed: 1.37 batches/s 
2021-10-31 22:41:26,731 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 22:41:26,732 INFO Random seed: 6478
2021-10-31 22:41:26,732 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 22:41:26,732 INFO Training on dataset: imagenet
2021-10-31 22:41:37,608 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 22:41:37,608 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 22:41:37,609 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 145000
2021-10-31 22:41:37,828 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 145000
2021-10-31 22:41:40,435 INFO Iter: [145000/500000] l1: 0.047445 ae: 0.101289 wgan_g: -33.652428 wgan_d: -13.377037 wgan_gp: 0.271394 g: 0.144829 d: -10.663095 speed: 48.82 batches/s 
2021-10-31 22:43:11,533 INFO Iter: [145100/500000] l1: 0.042623 ae: 0.097115 wgan_g: -25.357191 wgan_d: -17.140167 wgan_gp: 0.181034 g: 0.142329 d: -15.329823 speed: 1.10 batches/s 
2021-10-31 22:44:42,801 INFO Iter: [145200/500000] l1: 0.054196 ae: 0.107827 wgan_g: -41.226311 wgan_d: -18.423071 wgan_gp: 0.328237 g: 0.153202 d: -15.140703 speed: 1.10 batches/s 
2021-10-31 22:46:14,084 INFO Iter: [145300/500000] l1: 0.059140 ae: 0.114975 wgan_g: -43.239697 wgan_d: -21.772823 wgan_gp: 0.352876 g: 0.165699 d: -18.244064 speed: 1.10 batches/s 
2021-10-31 22:47:45,259 INFO Iter: [145400/500000] l1: 0.050835 ae: 0.107443 wgan_g: -61.417061 wgan_d: -20.288181 wgan_gp: 0.344367 g: 0.128516 d: -16.844509 speed: 1.10 batches/s 
2021-10-31 22:49:16,351 INFO Iter: [145500/500000] l1: 0.045212 ae: 0.095379 wgan_g: -21.294079 wgan_d: -15.094279 wgan_gp: 0.188985 g: 0.147415 d: -13.204428 speed: 1.10 batches/s 
2021-10-31 22:50:47,557 INFO Iter: [145600/500000] l1: 0.060483 ae: 0.097405 wgan_g: -10.204187 wgan_d: -16.737724 wgan_gp: 0.212772 g: 0.179262 d: -14.610009 speed: 1.10 batches/s 
2021-10-31 22:52:18,695 INFO Iter: [145700/500000] l1: 0.046982 ae: 0.097928 wgan_g: -28.266493 wgan_d: -16.640364 wgan_gp: 0.216269 g: 0.145625 d: -14.477676 speed: 1.10 batches/s 
2021-10-31 22:53:36,811 INFO Iter: [145800/500000] l1: nan ae: nan wgan_g: -26.810080 wgan_d: -43.055367 wgan_gp: 0.176949 g: nan d: -41.285877 speed: 1.28 batches/s 
2021-10-31 22:54:04,754 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 22:54:04,754 INFO Random seed: 5550
2021-10-31 22:54:04,754 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 22:54:04,754 INFO Training on dataset: imagenet
2021-10-31 22:54:15,593 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 22:54:15,593 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 22:54:15,593 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 145000
2021-10-31 22:54:15,811 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 145000
2021-10-31 22:54:18,447 INFO Iter: [145000/500000] l1: 0.047553 ae: 0.104506 wgan_g: -38.370712 wgan_d: -13.545910 wgan_gp: 0.306145 g: 0.144101 d: -10.484455 speed: 48.57 batches/s 
2021-10-31 22:55:49,675 INFO Iter: [145100/500000] l1: 0.041998 ae: 0.094150 wgan_g: -37.546913 wgan_d: -17.537493 wgan_gp: 0.182547 g: 0.125831 d: -15.712018 speed: 1.10 batches/s 
2021-10-31 22:57:20,614 INFO Iter: [145200/500000] l1: 0.053539 ae: 0.105293 wgan_g: -46.475182 wgan_d: -18.251211 wgan_gp: 0.350011 g: 0.144124 d: -14.751102 speed: 1.10 batches/s 
2021-10-31 22:58:53,490 INFO Iter: [145300/500000] l1: 0.059057 ae: 0.113740 wgan_g: -39.424278 wgan_d: -22.254070 wgan_gp: 0.367818 g: 0.167932 d: -18.575890 speed: 1.08 batches/s 
2021-10-31 22:59:51,567 INFO Iter: [145400/500000] l1: nan ae: nan wgan_g: -55.047653 wgan_d: -77.064354 wgan_gp: 0.596793 g: nan d: -71.096428 speed: 1.72 batches/s 
2021-10-31 23:06:58,844 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 23:06:58,844 INFO Random seed: 5224
2021-10-31 23:06:58,844 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 23:06:58,844 INFO Training on dataset: imagenet
2021-10-31 23:07:10,038 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 23:07:10,039 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 23:07:10,039 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 145000
2021-10-31 23:07:10,262 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 145000
2021-10-31 23:07:12,919 INFO Iter: [145000/500000] l1: 0.047803 ae: 0.106373 wgan_g: -40.258636 wgan_d: -13.004169 wgan_gp: 0.244583 g: 0.144753 d: -10.558339 speed: 48.00 batches/s 
2021-10-31 23:08:44,496 INFO Iter: [145100/500000] l1: 0.042121 ae: 0.088190 wgan_g: -18.919609 wgan_d: -16.713491 wgan_gp: 0.167952 g: 0.137454 d: -15.033974 speed: 1.09 batches/s 
2021-10-31 23:10:16,219 INFO Iter: [145200/500000] l1: 0.053888 ae: 0.103447 wgan_g: -25.804960 wgan_d: -15.674027 wgan_gp: 0.283458 g: 0.162997 d: -12.839444 speed: 1.09 batches/s 
2021-10-31 23:11:47,467 INFO Iter: [145300/500000] l1: 0.059330 ae: 0.112783 wgan_g: -46.414955 wgan_d: -22.382273 wgan_gp: 0.319760 g: 0.160121 d: -19.184673 speed: 1.10 batches/s 
2021-10-31 23:13:18,170 INFO Iter: [145400/500000] l1: 0.050925 ae: 0.109867 wgan_g: -52.343220 wgan_d: -18.428188 wgan_gp: 0.283690 g: 0.140607 d: -15.591286 speed: 1.10 batches/s 
2021-10-31 23:14:49,229 INFO Iter: [145500/500000] l1: 0.046357 ae: 0.099808 wgan_g: -10.869497 wgan_d: -14.221853 wgan_gp: 0.166201 g: 0.164528 d: -12.559847 speed: 1.10 batches/s 
2021-10-31 23:16:20,087 INFO Iter: [145600/500000] l1: 0.061252 ae: 0.107828 wgan_g: -11.849289 wgan_d: -16.502295 wgan_gp: 0.233191 g: 0.191047 d: -14.170381 speed: 1.10 batches/s 
2021-10-31 23:17:51,345 INFO Iter: [145700/500000] l1: 0.046563 ae: 0.100904 wgan_g: -36.525772 wgan_d: -16.579277 wgan_gp: 0.243045 g: 0.140435 d: -14.148827 speed: 1.10 batches/s 
2021-10-31 23:19:22,785 INFO Iter: [145800/500000] l1: 0.052600 ae: 0.097238 wgan_g: -31.176392 wgan_d: -15.305704 wgan_gp: 0.206800 g: 0.148629 d: -13.237706 speed: 1.09 batches/s 
2021-10-31 23:20:54,399 INFO Iter: [145900/500000] l1: 0.053657 ae: 0.096809 wgan_g: -28.615427 wgan_d: -16.478430 wgan_gp: 0.228350 g: 0.151943 d: -14.194933 speed: 1.09 batches/s 
2021-10-31 23:22:14,691 INFO Iter: [146000/500000] l1: nan ae: nan wgan_g: -28.278744 wgan_d: 40.913628 wgan_gp: 0.219724 g: nan d: 43.110867 speed: 1.25 batches/s 
2021-10-31 23:22:34,710 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 23:22:34,710 INFO Random seed: 2169
2021-10-31 23:22:34,710 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 23:22:34,710 INFO Training on dataset: imagenet
2021-10-31 23:22:45,688 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 23:22:45,688 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 23:22:45,688 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 145000
2021-10-31 23:22:45,909 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 145000
2021-10-31 23:22:48,506 INFO Iter: [145000/500000] l1: 0.048963 ae: 0.124218 wgan_g: -41.777573 wgan_d: -12.616922 wgan_gp: 0.241941 g: 0.166039 d: -10.197512 speed: 49.08 batches/s 
2021-10-31 23:23:46,622 INFO Iter: [145100/500000] l1: nan ae: nan wgan_g: -35.695995 wgan_d: -58.388107 wgan_gp: 0.348166 g: nan d: -54.906448 speed: 1.72 batches/s 
2021-10-31 23:25:28,107 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-10-31 23:25:28,107 INFO Random seed: 8969
2021-10-31 23:25:28,107 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-10-31 23:25:28,107 INFO Training on dataset: imagenet
2021-10-31 23:25:39,034 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-10-31 23:25:39,034 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-10-31 23:25:39,034 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 145000
2021-10-31 23:25:39,248 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 145000
2021-10-31 23:25:41,089 INFO Iter: [145000/500000] l1: nan ae: nan wgan_g: -53.366505 wgan_d: 9.236526 wgan_gp: 0.191355 g: nan d: 11.150073 speed: 77.87 batches/s 
2021-10-31 23:26:39,358 INFO Iter: [145100/500000] l1: nan ae: nan wgan_g: -32.964943 wgan_d: -59.411789 wgan_gp: 0.422064 g: nan d: -55.191147 speed: 1.72 batches/s 
2021-11-01 00:02:28,801 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-11-01 00:02:28,802 INFO Random seed: 7872
2021-11-01 00:02:28,802 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-11-01 00:02:28,802 INFO Training on dataset: imagenet
2021-11-01 00:02:40,019 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-11-01 00:02:40,019 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-11-01 00:02:40,020 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 144000
2021-11-01 00:02:40,192 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 144000
2021-11-01 00:02:42,949 INFO Iter: [144000/500000] l1: 0.048864 ae: 0.101049 wgan_g: -50.942074 wgan_d: -8.781437 wgan_gp: 0.276998 g: 0.128954 d: -6.011455 speed: 46.06 batches/s 
2021-11-01 00:04:16,284 INFO Iter: [144100/500000] l1: 0.042109 ae: 0.098405 wgan_g: -37.359795 wgan_d: -18.081306 wgan_gp: 0.205210 g: 0.131257 d: -16.029202 speed: 1.07 batches/s 
2021-11-01 00:05:47,898 INFO Iter: [144200/500000] l1: 0.055087 ae: 0.110706 wgan_g: -48.864479 wgan_d: -17.240591 wgan_gp: 0.305676 g: 0.150088 d: -14.183826 speed: 1.09 batches/s 
2021-11-01 00:07:19,585 INFO Iter: [144300/500000] l1: 0.060108 ae: 0.117257 wgan_g: -40.309780 wgan_d: -22.002605 wgan_gp: 0.295112 g: 0.172529 d: -19.051489 speed: 1.09 batches/s 
2021-11-01 00:08:17,101 INFO Iter: [144400/500000] l1: nan ae: nan wgan_g: -42.901653 wgan_d: -62.355381 wgan_gp: 0.471140 g: nan d: -57.643978 speed: 1.74 batches/s 
2021-11-01 07:56:31,012 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-11-01 07:56:31,012 INFO Random seed: 4233
2021-11-01 07:56:31,012 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-11-01 07:56:31,012 INFO Training on dataset: imagenet
2021-11-01 07:56:41,926 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-11-01 07:56:41,926 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-11-01 07:56:41,926 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 144000
2021-11-01 07:56:42,150 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 144000
2021-11-01 07:56:45,005 INFO Iter: [144000/500000] l1: 0.052854 ae: 0.155450 wgan_g: -48.335732 wgan_d: -7.957530 wgan_gp: 0.253998 g: 0.201629 d: -5.417547 speed: 43.53 batches/s 
2021-11-01 07:58:16,323 INFO Iter: [144100/500000] l1: 0.043139 ae: 0.095353 wgan_g: -19.645723 wgan_d: -17.484268 wgan_gp: 0.165868 g: 0.146545 d: -15.825586 speed: 1.10 batches/s 
2021-11-01 07:59:47,405 INFO Iter: [144200/500000] l1: 0.054293 ae: 0.112239 wgan_g: -51.596584 wgan_d: -18.686523 wgan_gp: 0.391561 g: 0.148241 d: -14.770909 speed: 1.10 batches/s 
2021-11-01 08:01:18,422 INFO Iter: [144300/500000] l1: 0.059583 ae: 0.116730 wgan_g: -32.052315 wgan_d: -21.230793 wgan_gp: 0.286240 g: 0.179523 d: -18.368397 speed: 1.10 batches/s 
2021-11-01 08:02:16,204 INFO Iter: [144400/500000] l1: nan ae: nan wgan_g: -42.677689 wgan_d: -82.896973 wgan_gp: 0.583552 g: nan d: -77.061455 speed: 1.73 batches/s 
2021-11-01 09:05:58,716 INFO Arguments: Namespace(config='configs/config.yaml', seed=None)
2021-11-01 09:05:58,716 INFO Random seed: 7496
2021-11-01 09:05:58,716 INFO Configuration: {'dataset_name': 'imagenet', 'data_with_subfolder': True, 'train_data_path': '/home/aistudio/data_256/', 'val_data_path': None, 'resume': '/home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/', 'batch_size': 32, 'image_shape': [256, 256, 3], 'mask_shape': [128, 128], 'mask_batch_same': True, 'max_delta_shape': [32, 32], 'margin': [0, 0], 'discounted_mask': True, 'spatial_discounting_gamma': 0.9, 'random_crop': True, 'mask_type': 'hole', 'mosaic_unit_size': 12, 'expname': 'benchmark', 'cuda': True, 'gpu_ids': [0, 1, 2], 'num_workers': 4, 'lr': 0.0001, 'beta1': 0.5, 'beta2': 0.9, 'n_critic': 5, 'niter': 500000, 'print_iter': 100, 'viz_iter': 1000, 'viz_max_out': 16, 'snapshot_save_iter': 1000, 'coarse_l1_alpha': 1.2, 'l1_loss_alpha': 1.2, 'ae_loss_alpha': 1.2, 'global_wgan_loss_alpha': 1.0, 'gan_loss_alpha': 0.001, 'wgan_gp_lambda': 10, 'netG': {'input_dim': 3, 'ngf': 32}, 'netD': {'input_dim': 3, 'ndf': 64}}
2021-11-01 09:05:58,716 INFO Training on dataset: imagenet
2021-11-01 09:06:09,738 INFO 
Generator(
  (coarse_generator): CoarseGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (conv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (fine_generator): FineGenerator(
    (conv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (conv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (conv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv6): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (conv7_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=2, dilation=[2, 2], data_format=NCHW)
    )
    (conv8_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=4, dilation=[4, 4], data_format=NCHW)
    )
    (conv9_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=8, dilation=[8, 8], data_format=NCHW)
    )
    (conv10_atrous): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=16, dilation=[16, 16], data_format=NCHW)
    )
    (pmconv1): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(5, 32, kernel_size=[5, 5], padding=2, data_format=NCHW)
    )
    (pmconv2_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 32, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv3): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv4_downsample): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 128, kernel_size=[3, 3], stride=[2, 2], padding=1, data_format=NCHW)
    )
    (pmconv5): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv6): Conv2dBlock(
      (activation): ReLU()
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (contextul_attention): ContextualAttention()
    (pmconv9): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (pmconv10): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv11): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(256, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv12): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 128, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv13): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(128, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv14): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv15): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(64, 32, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv16): Conv2dBlock(
      (activation): ELU(alpha=1.0)
      (conv): Conv2D(32, 16, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (allconv17): Conv2dBlock(
      (conv): Conv2D(16, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
2021-11-01 09:06:09,738 INFO 
LocalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=16384, out_features=1, dtype=float32)
)
2021-11-01 09:06:09,739 INFO 
GlobalDis(
  (dis_conv_module): DisConvModule(
    (conv1): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(3, 64, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv2): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(64, 128, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv3): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(128, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
    (conv4): Conv2dBlock(
      (activation): LeakyReLU(negative_slope=0.2)
      (conv): Conv2D(256, 256, kernel_size=[5, 5], stride=[2, 2], padding=2, data_format=NCHW)
    )
  )
  (linear): Linear(in_features=65536, out_features=1, dtype=float32)
)
Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 144000
2021-11-01 09:06:09,959 INFO Resume from /home/aistudio/generative-inpainting/checkpoints/imagenet/hole_benchmark/ at iteration 144000
2021-11-01 09:06:12,578 INFO Iter: [144000/500000] l1: 0.050331 ae: 0.125737 wgan_g: -32.713974 wgan_d: -11.302168 wgan_gp: 0.231186 g: 0.178567 d: -8.990305 speed: 48.63 batches/s 
2021-11-01 09:07:44,399 INFO Iter: [144100/500000] l1: 0.043050 ae: 0.096701 wgan_g: -24.719715 wgan_d: -16.706364 wgan_gp: 0.160611 g: 0.142982 d: -15.100253 speed: 1.09 batches/s 
2021-11-01 09:09:16,287 INFO Iter: [144200/500000] l1: 0.053775 ae: 0.107644 wgan_g: -50.896645 wgan_d: -18.322186 wgan_gp: 0.314702 g: 0.142807 d: -15.175167 speed: 1.09 batches/s 
